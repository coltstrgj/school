#include <stdio.h>
//#include <sys/types.h>
//#include <sys/wait.h>
#include <unistd.h>
int coordinate(char* divisor, char* dividend){
    int myid=fork();
    if(myid==0){
        //is child
        //printf("child launched %i\n", getpid());
        if (-1 == execlp("./checker", "checker", divisor, dividend, NULL)){
            perror("execlp() failed");
            return 0;
        }else{
            printf("it worked and somehow came back?");
        }
        return 1;
    }else{
        //is parent
        printf("Coordinator: forked process with ID: %i\n", myid);
        printf("Coordinator: waiting for process [%i]\n", myid);   
        wait();
        printf("Coordinator: child process %i returned %i\n", myid,  1);//WEXITSTATUS());   
        return 1;
    }

}
int main(int argc, char* argv[]){
    if(argc!=6){
        printf("Bad input:\nUsage: 'coordinator divisor dividend dividend dividend dividend\n");
        return 0;
    }
    coordinate(argv[1],argv[2]); 
    coordinate(argv[1],argv[3]); 
    coordinate(argv[1],argv[4]); 
    coordinate(argv[1],argv[5]); 
    printf("Coordinator: exiting\n");    
    /*for(int i=0; i<4; i++){
        coordinate(argv[1],argv[i+2]); 
    }*/
} 
