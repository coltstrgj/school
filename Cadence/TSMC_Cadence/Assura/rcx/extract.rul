
; ASSURA(r) version 3.1.4_usr1 LVS file
; generated by GTE Version: v3.0USR3alpha  Build: 200503232105 (6525) on Aug 18, 2005

; parameter file: parm_6lmb
;     LOGIC true
;     MIXED-MODE true
;     THIN_TOP false
;     4LM_PROCESS false
;     5LM_PROCESS false
;     parasiticR_BLOCK true
;     SNA false

;  Title: TSMC 0.18um Mixed Signal/RF 1P8M Salicide 1.8V/3.3V
;  Document: T-018-MM-SP-001 V1.3
; REVISION HISTORY:
; 12/13/2005  ytpu         v2.8  1)Changed the naming of the RF mos.
;                                  _nmos_rf   > nmos_rf
;                                  _nmos_rf33 > nmos_rf33
;                                  _pmos_rf   > pmos_rf
;				   _pmos_rf33 > pmos_rf33
;                                2)Updated the as, ad, ps, pd calculations.   
; 12/08/2005  Echohu       v2.7  1)Corrected compare.rul for the m factor comparing of the 
;                                  mimcap_wos and mimcap_shield.
;                                2)Corrected the calculation "nr"of the indutors of the sym and 
;                                  sym_ct.
;                                3)Consider butting tap.
; 08/17/2005  L.Pennington v2.6  Changed MOS l,w calculations per Brad Pu (TSMC)
; 07/18/2005  L.Pennington v2.5  Change psub to divide dnw psub by nwell strips
;                                IND rad derivation change
; 06/22/2005  L.Pennington v2.4  dnwpsub, pwdnw recognition changed per Brad/Echo 
; 06/21/2005  L.Pennington v2.3  Removed RMDUMMY1-RMDUMMY6 from M# definition
; 06/15/2005  L.Pennington v2.2  Change IND derivations for irregular connect
; 06/09/2005  L.Pennington v2.1  Added swapPins nil for CAPS
;                                Added Skip_Soft_Connect_Checks, floating_well_check
; 06/06/2005  L.Pennington v2.0  Added RMDUMMY1-RMDUMMY6 for metal resistors
;                                Corrected Metal logic to "drawing or fill not slot"
;                                Changed MOS(ND) MOS(PD) to MOS(nmos3v) MOS(pmos3v)
;                                Added tsmc18rf to cellView reference.
; 04/25/2005  L.Pennington v1.9  ind_std terminal change for connectivity error
;                                Changed RES M1-MT to rm1-rmt unique device name preference
;                                Added bind_cdl.rul
;                                Corrected compare.rul mos_var call to parallelMOSVAR
; 04/03/2005  L.Pennington v1.8  IND parms changed from CDL caps to lower case.
; 03/31/2005  L.Pennington v1.7  Corrected jvar "w" calculation
;                                Corrected rnpo1/rppo1 from >2 to >= 2
;                                Removed parasitics from mimcap_wos to gnd.
;                                Updates to comply with TSMC .18 PDK V1.3c
; 03/20/2005  L.Pennington v1.6  Added saveProperty model for mult model pcells.
; 03/15/2005  L.Pennington v1.5  Created parasiticR_BLOCK generation option which removes
;                                poly1 and metals from rf device areas to ensure correct RCx output.
; 03/08/2005  L.Pennington v1.4  Corrected dnwpsub typo causing RCX failure
; 03/07/2005  L.Pennington v1.3  Corrected dnwpsub recognition
;                                Changed psub for dnwpsub terminal
; 03/05/2005  L.Pennington v1.2  Corrected pwdnw, dnwpsub device extraction
; 03/03/2005  L.Pennington v1.1  TSMC .18 PDK V1.3c
; 12/20/2004  L.Pennington v1.0  First generated MM/RF Thick TOP release for PDK V1.3a
;     
;  **************************************************************************
;  Cadence Design Systems shall not be liable for the accuracy of this design rule file or it's 
;  ability to capture errors.  The user is responsible for thoroughly testing and implementing 
;  it's features.  
;  ************************************************************************
;  DISCLAIMER
;  
;   The information contained herein is provided by TSMC on an "AS IS" basis without any warranty, 
;  and Cadence Design Systems has no obligation to support or otherwise maintain the information.  
;  TSMC disclaims any representation that the information does not infringe any intellectual property 
;  rights or proprietary  rights of any third parties.  There are no other warranties given by TSMC, 
;  whether express, implied or statutory, including, without limitation, implied warranties of 
;  merchantability and fitness for a particular purpose.
;  
;  STATEMENT OF USE
;  
;   This information contains confidential and proprietary information of TSMC.  No part of this 
;  information may be reproduced, transmitted, transcribed,  stored in a retrieval system, or translated 
;  into any human or computer language, in any form or by any means, electronic, mechanical, 
;  magnetic,  optical, chemical, manual, or otherwise, without the prior written permission of TSMC.  
;  This information was prepared for informational purpose and is for use by TSMC customers only.  
;  TSMC reserves the right to make changes in the information at any time and without notice.
;  **************************************************************************
; NOTES ON THE USE OF THIS FILE:
; 1) This file runs on assura version av3.1:Production:dfII5.0.0 07/07/2004 or above.
; 2) This extract file is consistent with TSMC .18 PDK 1.3c
; 3) Using CDL netlists requires lvs.add, a file of empty subckt statements, be referenced.
; 4) Assura using DF2 schematic netlists requires bind.rul device binding file reference.
; 5) Optional switches include: 
;     DNW_DIODE to enable use of pwdnw, dnwpsub diodes.
;     Use of INCLUDE_DEVICES_WITHOUT_PCELLS will generate Assura RCX spice output, 
;     not av-extracted views. 
; 6) Parasitic res blocking algorithm used is applied to devices listed in capgenC_cmd_#lm
;     file supplied.  The same oversize value used in blocking parasitic cap is applied to
;     parasitic res.  The poly and metal layers listed for each device in the capgenC
;     command are removed from the metal referenced in the p2lvsfile for RCx analysis.
; **************************************************************************

; //////////////////////////////////////////////////////////////////////////
;  
;                           DEVICE FORMULA 
; ----- ----------------------------- ---------------------------------- 
; NAME  DESCRIPTION                   DEVICE LAYER OPERATION 
; ----- ----------------------------- ---------------------------------- 
; GENERIC DEVICE 
; --------------------------------------------------------------------- 
; M[NL]          1.8V native device            ((NGATE-OD2)*NTN)  
; M[N]           1.8V Nominal VT NMOS          ((NGATE-OD2-NTN)-DNW)  
; M[N1]          1.8V Nominal VT NMOS/DNW      ((NGATE-OD2-NTN)*DNW)  
; M[NA]          1.8V medium  VT NMOS          ((NGATE-OD2-NTN)-DNW*VTMN) 
; M[NN]          3.3V native device            ((NGATE*OD2)*NTN)  
; M[nmos3v]   3.3V Nominal VT NMOS          ((NGATE*OD2-NTN)-DNW)  
; M[NB]          3.3V medium  VT NMOS          ((NGATE*OD2-NTN)-DNW*VTMN) 
; M[N2]          3.3V Nominal VT NMOS/DNW      ((NGATE*OD2-NTN)*DNW)  
; M[P]           1.8V Nominal VT PMOS          (PGATE-OD2) 
; M[PA]          1.8V medium  VT PMOS          (PGATE-OD2*VTMP)  
; M[pmos3v]    3.3V Nominal VT PMOS          (PGATE*OD2)  
; R[WO]          N-Well resistor under OD      (RWDMY*NWELL*(OD*RPO))  
; R[WR]          N-Well resister under STI     (RWDMY*NWELL-(OD*RPO))  
; R[LR]          HRI high resistance poly R    (RPDMY*POLY1*HRI*RPO-NIMP-PIMP-RFDUMMY)  
; R[PR]          P+Poly resistor w/o Silicide  (RPDMY*POLY1*PIMP*RPO-RFDUMMY)  
; R[NR]          N+Poly resistor w/o Silicide  (RPDMY*POLY1*NIMP*RPO-RFDUMMY)  
; R[PS]          P+Poly resistor w/i Silicide  (RPDMY*POLY1*PIMP-RPO-RFDUMMY)  
; R[NS] 	  N+Poly resistor w/i Silicide  (RPDMY*POLY1*NIMP-RPO-RFDUMMY)  
; R[PD]          P+diff resistor w/o Silicide  (RPDMY*OD*PIMP*RPO-RFDUMMY)  
; R[ND] 	  N+diff resistor w/o Silicide  (RPDMY*OD*NIMP*RPO-RFDUMMY)  
; R[PI] 	  P+diff resistor w/i Silicide  (RPDMY*OD*PIMP-RPO)  
; R[NI]   	  N+diff resistor w/i Silicide  (RPDMY*OD*NIMP-RPO)  
; R[M1] 	  METAL1 resistor  ((RMDUMMY*METAL1) + (RMDUMMY1*METAL1))
; R[M2]	  METAL2 resistor  ((RMDUMMY*METAL2) + (RMDUMMY1*METAL2))
; R[M3]	  METAL3 resistor  ((RMDUMMY*METAL3) + (RMDUMMY1*METAL3))
; R[M4]	  METAL4 resistor  ((RMDUMMY*METAL4) + (RMDUMMY1*METAL4))
; R[M5]	  METAL5 resistor  ((RMDUMMY*METAL5) + (RMDUMMY1*METAL5))
; R[MT]	  METAL6 resistor  ((RMDUMMY*METAL6) + (RMDUMMY1*METAL6))
; C[PC]	  Poly-2/Poly-1 capacitor       (POLY2*POLY1)  
; C[M2]	  CTM2/M2 capacitor             (CTM2*METAL2)  
; C[M3]	  CTM3/M3 capacitor             (CTM3*METAL3)  
; C[M4]	  CTM4/M4 capacitor             (CTM4*METAL4)  
; C[M5]	  CTM5/M5 capacitor             (CTM5*METAL5)  
; D[DP]	  1.8V diode P+/NW              (DIODMY*OD*PIMP*NWELL)  
; D[D1]	  3.3V diode P+/NW              (DIODMY*OD*PIMP*OD2*NWELL)  
; D[DN]	  1.8V diode N+/PW              (DIODMY*OD*NIMP*PSUB)  
; D[D2]	  3.3V diode N+/PW              (DIODMY*OD*NIMP*OD2*PSUB)  
; D[DW]	  1.8V diode NW/PW              (DIODMY*NWELL)  
; D[D3]	  3.3V diode NW/PW              (DIODMY*NWELL*OD2)  
; D[DB]	  3.3V ESD diode                ((((((((ESD3DMY AND OD) AND  
;              	                        NIMP) AND RPO) NOT NWELL) NOT 
; 					(POLY1 SIZE 0.2))) SIZE -0.8)SIZE 0.6)  
; D[pwdnw]       PWDNW diode		(DNW-NWELL) 
; D[dnwpsub]     DNWPSUB diode		(DNW INTERACT (DNW + ntap)) 
; Q[PV]	   1.8V PNP-BJT                 (BJTDMY*OD*PIMP*NWELL)  
; Q[P1]	   3.3V PNP-BJT                 (BJTDMY*OD*PIMP*OD2*NWELL)  
; Q[NV]           1.8V NPN-BJT		(BJTDMY*OD*NIMP*PWELL*DNW) 
; nmoscap         1.8V NMOS Varactor            (VARGT-OD2-RFDUMMY-ADTERM) 
; nmoscap_33      3.3V NMOS Varactor            (VARGT*OD2-RFDUMMY-ADTERM) 
; ; 

; --------------------------------------------------------------------- 
; MM/RF DEVICE 
; --------------------------------------------------------------------- 
; NMOS_RF          1.8V Nominal VT NMOS/DNW      ((NGATE-OD2-NTN)*DNW-RFDUMMY*ADTERM)  
; NMOS_RF33        3.3V Nominal VT NMOS/DNW      ((NGATE*OD2-NTN)*DNW-RFDUMMY*ADTERM)  
; PMOS_RF          1.8V Nominal VT PMOS/DNW      (PGATE*DNW-OD2-RFDUMMY*ADTERM)  
; PMOS_RF_NW       1.8V Nominal VT PMOS          (PGATE-DNW-OD2-RFDUMMY*ADTERM)  
; PMOS_RF33        3.3V Nominal VT PMOS/DNW      (PGATE*DNW*OD2-RFDUMMY*ADTERM)  
; PMOS_RF33_NW     3.3V Nominal VT PMOS          (PGATE-DNW*OD2-RFDUMMY*ADTERM)  
; moscap_rf        Varactor on thin oxide        (VARGT-OD2-RFDUMMY*ADTERM)  
; moscap_rf33      Varactor on thick oxide        (VARGT*OD2-RFDUMMY*ADTERM)  
; RPPOLYHRI_RF     HRI resistor                  (RPDMY*POLY1*HRI*RPO-NIMP-PIMP*ADTERM) 
; RPPOLYWOL_RF     P+Poly resistor w/o Silicide  (RPDMY*POLY1*PIMP*RPO-RFDUMMY*DMP2V*ADTERM)  ( W > 5.0 ) 
; RPPOLYWOS_RF     P+Poly resistor w/o Silicide  (RPDMY*POLY1*PIMP*RPO-RFDUMMY*DMP2V*ADTERM)  ( W <= 5.0 ) 
; RPPOLYL_RF       P+Poly resistor w/i Silicide  (RPDMY*POLY1*PIMP-RPO-RFDUMMY*ADTERM)        ( W >= 2.0 ) 
; RPPOLYS_RF       P+Poly resistor w/i Silicide  (RPDMY*POLY1*PIMP-RPO-RFDUMMY*ADTERM)        ( 0.18 <= W < 2.0 ) 
; MIMCAP_WOS	    CTM5/M5 capacitor             (CTM5*METAL5-RFDUMMY*ADTERM)  
; MIMCAP_SHIELD    CTM5/M5 capacitor             (CTM5*METAL5-RFDUMMY*ADTERM*METAL4)  
; spiral_s2_std    Spiral Inductor    (INDDUMMY*METAL6*NTN-RFDUMMY*ADTERM (0.5<= nr<= 5.5,30um <= rad <= 125um, W=6um,9um and 15um) 
; spiral_s3_std    Spiral Inductor    (INDDUMMY*METAL6*NTN-RFDUMMY*ADTERM (1.5<= nr<= 5.5,30um <= rad <= 125um, W=30um and 45um) 
; spiral_s2_sym    Spiral Inductor    (INDDUMMY*METAL6*NTN-RFDUMMY*ADTERM (1 <= nr <= 4,30um <= rad <= 120um, W= 9um) 
; spiral_s2_sym    Spiral Inductor    (INDDUMMY*METAL6*NTN-RFDUMMY*ADTERM (1 <= nr <= 5,30um <= rad <= 120um, W= 15um) 
; spiral_s3_sym    Spiral Inductor    (INDDUMMY*METAL6*NTN-RFDUMMY*ADTERM (1 <= nr <= 5,65um <= rad <= 150um, W= 30um) 
; spiral_s3_sym    Spiral Inductor    (INDDUMMY*METAL6*NTN-RFDUMMY*ADTERM (1 <= nr <= 4,90um <= rad <= 180um, W= 45um) 
; spiral_s2_sym_ct Spiral Inductor    (INDDUMMY*METAL6*NTN-RFDUMMY*ADTERM (1 <= nr <= 3,30um <= rad <= 120um, W= 9um) 
; spiral_s2_sym_ct Spiral Inductor    (INDDUMMY*METAL6*NTN-RFDUMMY*ADTERM (1 <= nr <= 5,30um <= rad <= 120um, W= 15um) 
; spiral_s3_sym_ct Spiral Inductor    (INDDUMMY*METAL6*NTN-RFDUMMY*ADTERM (1 <= nr <= 5,65um <= rad <= 150um, W= 30um) 
; spiral_s3_sym_ct Spiral Inductor    (INDDUMMY*METAL6*NTN-RFDUMMY*ADTERM (1 <= nr <= 3,90um <= rad <= 180um, W= 45um) 
; XJVAR_NR36       Junction Varactor             (JVARD*OD*PIMP*NWELL-RFDUMMY*ADTERM)  
; XJVAR_w40        Junction Varactor             (JVARD*OD*PIMP*NWELL-RFDUMMY*ADTERM)  
; ----- ----------------------------- ----------------------------------  
; * NGATE = OD * POLY1 * NIMP - NWELL  
; * PGATE = OD * POLY1 * PIMP * NWELL  
; * VARGT = OD * POLY1 * NIMP * NWELL * VARDMY  
; ////////////////////////////////////////////////////////////////////////////// 

drcExtractRules(

;procedure for switches DNW_DIODE
procedure( switchProc0()
    extractDIODE("dnwpsub" _dnwpsub psub_term("PLUS") DNW("MINUS")
        spiceModel("dnwpsub") cellView("dio_dnwpsub ivpcell tsmc18rf"))
    area=measureParameter(area (_dnwpsub))
    perimeter=measureParameter(perimeter (_dnwpsub))
    area=calculateParameter(area * 1.0e-12)
    attachParameter(area "area" _dnwpsub)
    pj=calculateParameter(perimeter * 1.0e-6)
    attachParameter(pj "pj" _dnwpsub)
    if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _dnwpsub "DS _dnwpsub  dio_dnwpsub dnwpsub"))

    extractDIODE("pwdnw" _pwdnw psub("PLUS") DNW("MINUS") spiceModel("pwdnw")
        cellView("dio_pwdnw  ivpcell tsmc18rf"))
    area=measureParameter(area (_pwdnw))
    perimeter=measureParameter(perimeter (_pwdnw))
    area=calculateParameter(area * 1.0e-12)
    attachParameter(area "area" _pwdnw)
    pj=calculateParameter(perimeter * 1.0e-6)
    attachParameter(pj "pj" _pwdnw)
    if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pwdnw "DD _pwdnw  dio_pwdnw pwdnw"))

)

;procedure for switches INCLUDE_DEVICES_WITHOUT_PCELLS
procedure( switchProc1()
    extractRES("WO" _rnwod nw_net("PLUS" "MINUS") spiceModel("rnwod"))
    area=measureParameter(area (_rnwod))
    width=measureParameter(length (_rnwod butting nw_net) 0.5)
    length=measureParameter(length (_rnwod outside nw_net) 0.5)
    bends45=measureParameter(bends_part (_rnwod outside nw_net))
    bends90=measureParameter(bends_full (_rnwod outside nw_net))
    bends=calculateParameter(0.5*bends45+bends90)
    VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 440)
    attachParameter(VALUE "VALUE" _rnwod)
    w=calculateParameter(area / length)
    attachParameter(w "w" _rnwod)
    wSim=calculateParameter(area / length)
    attachParameter(wSim "wSim" _rnwod)
    l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(l "l" _rnwod)
    lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(lSim "lSim" _rnwod)

)

;procedure for switches INCLUDE_DEVICES_WITHOUT_PCELLS
procedure( switchProc2()
    extractRES("ND" _rnrpo ndiff_net("PLUS" "MINUS") spiceModel("rnrpo"))
    width=measureParameter(length (_rnrpo butting ndiff_net) 0.5)
    length=measureParameter(length (_rnrpo outside ndiff_net) 0.5)
    bends45=measureParameter(bends_part (_rnrpo outside ndiff_net))
    bends90=measureParameter(bends_full (_rnrpo outside ndiff_net))
    bends=calculateParameter(0.5*bends45+bends90)
    VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 59)
    attachParameter(VALUE "VALUE" _rnrpo)
    w=calculateParameter(width * 1e-6)
    attachParameter(w "w" _rnrpo)
    wSim=calculateParameter(width * 1e-6)
    attachParameter(wSim "wSim" _rnrpo)
    l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(l "l" _rnrpo)
    lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(lSim "lSim" _rnrpo)
    if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _rnrpo "ND _rnrpo noPcell rnrpo"))

    extractRES("PD" _rprpo pdiff_net("PLUS" "MINUS") spiceModel("rprpo"))
    width=measureParameter(length (_rprpo butting pdiff_net) 0.5)
    length=measureParameter(length (_rprpo outside pdiff_net) 0.5)
    bends45=measureParameter(bends_part (_rprpo outside pdiff_net))
    bends90=measureParameter(bends_full (_rprpo outside pdiff_net))
    bends=calculateParameter(0.5*bends45+bends90)
    VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 133)
    attachParameter(VALUE "VALUE" _rprpo)
    w=calculateParameter(width * 1e-6)
    attachParameter(w "w" _rprpo)
    wSim=calculateParameter(width * 1e-6)
    attachParameter(wSim "wSim" _rprpo)
    l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(l "l" _rprpo)
    lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(lSim "lSim" _rprpo)
    if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _rprpo "PD _rprpo noPcell rprpo"))

    extractRES("NI" _rnod ndiff_net("PLUS" "MINUS") spiceModel("rnod"))
    width=measureParameter(length (_rnod butting ndiff_net) 0.5)
    length=measureParameter(length (_rnod outside ndiff_net) 0.5)
    bends45=measureParameter(bends_part (_rnod outside ndiff_net))
    bends90=measureParameter(bends_full (_rnod outside ndiff_net))
    bends=calculateParameter(0.5*bends45+bends90)
    VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 6.82)
    attachParameter(VALUE "VALUE" _rnod)
    w=calculateParameter(width * 1e-6)
    attachParameter(w "w" _rnod)
    wSim=calculateParameter(width * 1e-6)
    attachParameter(wSim "wSim" _rnod)
    l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(l "l" _rnod)
    lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(lSim "lSim" _rnod)
    if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _rnod "NI _rnod noPcell rnod"))

    extractRES("NI" _rnodw ndiff_net("PLUS" "MINUS") spiceModel("rnodw"))
    width=measureParameter(length (_rnodw butting ndiff_net) 0.5)
    length=measureParameter(length (_rnodw outside ndiff_net) 0.5)
    bends45=measureParameter(bends_part (_rnodw outside ndiff_net))
    bends90=measureParameter(bends_full (_rnodw outside ndiff_net))
    bends=calculateParameter(0.5*bends45+bends90)
    VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 6.82)
    attachParameter(VALUE "VALUE" _rnodw)
    w=calculateParameter(width * 1e-6)
    attachParameter(w "w" _rnodw)
    wSim=calculateParameter(width * 1e-6)
    attachParameter(wSim "wSim" _rnodw)
    l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(l "l" _rnodw)
    lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(lSim "lSim" _rnodw)
    if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _rnodw "NI _rnodw noPcell rnodw"))

    extractRES("PI" _rpod pdiff_net("PLUS" "MINUS") spiceModel("rpod"))
    width=measureParameter(length (_rpod butting pdiff_net) 0.5)
    length=measureParameter(length (_rpod outside pdiff_net) 0.5)
    bends45=measureParameter(bends_part (_rpod outside pdiff_net))
    bends90=measureParameter(bends_full (_rpod outside pdiff_net))
    bends=calculateParameter(0.5*bends45+bends90)
    VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 7.76)
    attachParameter(VALUE "VALUE" _rpod)
    w=calculateParameter(width * 1e-6)
    attachParameter(w "w" _rpod)
    wSim=calculateParameter(width * 1e-6)
    attachParameter(wSim "wSim" _rpod)
    l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(l "l" _rpod)
    lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(lSim "lSim" _rpod)
    if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _rpod "PI _rpod noPcell rpod"))

    extractRES("PI" _rpodw pdiff_net("PLUS" "MINUS") spiceModel("rpodw"))
    width=measureParameter(length (_rpodw butting pdiff_net) 0.5)
    length=measureParameter(length (_rpodw outside pdiff_net) 0.5)
    bends45=measureParameter(bends_part (_rpodw outside pdiff_net))
    bends90=measureParameter(bends_full (_rpodw outside pdiff_net))
    bends=calculateParameter(0.5*bends45+bends90)
    VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 7.76)
    attachParameter(VALUE "VALUE" _rpodw)
    w=calculateParameter(width * 1e-6)
    attachParameter(w "w" _rpodw)
    wSim=calculateParameter(width * 1e-6)
    attachParameter(wSim "wSim" _rpodw)
    l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(l "l" _rpodw)
    lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
    attachParameter(lSim "lSim" _rpodw)
    if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _rpodw "PI _rpodw noPcell rpodw"))

)

layerDefs("GDS2"
    DMP2V      = layer(  149 )     ; dummy layer to avoid P2V in P+ poly resistor

    DMN2V      = layer(  184 )     ; dummy layer to avoid N2V in N+ poly resistor

    ADTERM=layer( 160 type(1) )

    BJTDUMMY=layer( 49 type(0) )

    CONT=layer( 15 type(0) )

    CTM2=layer( 67 type(2) )
    CTM2_pin=pinLayer( 67 type(2) )

    CTM3=layer( 67 type(3) )
    CTM3_pin=pinLayer( 67 type(3) )

    CTM4=layer( 67 type(4) )
    CTM4_pin=pinLayer( 67 type(4) )

    CTM5=layer( 67 type(5) )
    CTM5_pin=pinLayer( 67 type(5) )

    DIFF=layer( 3 type(0) )
    DIFF_pin=pinLayer( 3 type(0) )

    DIODUMMY=layer( 56 type(0) )

    DNW=layer( 82 type(0) )
    DNW_pin=pinLayer( 82 type(0) )

    DRAIN=layer( 3 type(3) )

    ESD3DUMMY=layer( 234 type(0) )

    HRI=layer( 48 type(0) )

    INDDUMMY=layer( 139 type(0) )
    INDDUMMY_pin=pinLayer( 139 type(0) )

    M1_text=textToPin( 40 type(0) )
    M1_pintext=text( 40 type(0) )

    M2_text=textToPin( 41 type(0) )
    M2_pintext=text( 41 type(0) )

    M3_text=textToPin( 42 type(0) )
    M3_pintext=text( 42 type(0) )

    M4_text=textToPin( 43 type(0) )
    M4_pintext=text( 43 type(0) )

    M5_text=textToPin( 44 type(0) )
    M5_pintext=text( 44 type(0) )

    M6_text=textToPin( 45 type(0) )
    M6_pintext=text( 45 type(0) )

    METAL1_d=layer( 16 type(0) )
    METAL1_d_pin=pinLayer( 16 type(0) )
    METAL1_d_text=textToPin( 40 )
    METAL1_d_pintext=text( 40 )

    METAL1_dummy=layer( 16 type(1) )

    METAL1_slot=layer( 16 type(2) )

    METAL2_d=layer( 18 type(0) )
    METAL2_d_pin=pinLayer( 18 type(0) )
    METAL2_d_text=textToPin( 41 type(0) )
    METAL2_d_pintext=text( 41 type(0) )

    METAL2_dummy=layer( 18 type(1) )

    METAL2_slot=layer( 18 type(2) )

    METAL3_d=layer( 28 type(0) )
    METAL3_d_pin=pinLayer( 28 type(0) )
    METAL3_d_text=textToPin( 42 type(0) )
    METAL3_d_pintext=text( 42 type(0) )

    METAL3_dummy=layer( 28 type(1) )

    METAL3_slot=layer( 28 type(2) )

    METAL4_d=layer( 31 type(0) )
    METAL4_d_pin=pinLayer( 31 type(0) )
    METAL4_d_text=textToPin( 43 type(0) )
    METAL4_d_pintext=text( 43 type(0) )

    METAL4_dummy=layer( 31 type(1) )

    METAL4_slot=layer( 31 type(2) )

    METAL5_d=layer( 33 type(0) )
    METAL5_d_pin=pinLayer( 33 type(0) )
    METAL5_d_text=textToPin( 44 type(0) )
    METAL5_d_pintext=text( 44 type(0) )

    METAL5_dummy=layer( 33 type(1) )

    METAL5_slot=layer( 33 type(2) )

    METAL6_d=layer( 38 type(0) )
    METAL6_d_pin=pinLayer( 38 type(0) )
    METAL6_d_text=textToPin( 45 type(0) )
    METAL6_d_pintext=text( 45 type(0) )

    METAL6_dummy=layer( 38 type(1) )

    METAL6_slot=layer( 38 type(2) )

    NDIFF=layer( 12 type(0) )

    NIMP=layer( 8 type(0) )

    NTN=layer( 129 type(0) )

    NWELL=layer( 2 type(0) )
    NWELL_pin=pinLayer( 2 type(0) )

    OD2=layer( 4 type(0) )

    PDIFF=layer( 11 type(0) )

    PIMP=layer( 7 type(0) )

    POLY1_d=layer( 13 type(0) )
    POLY1_d_pin=pinLayer( 13 type(0) )
    POLY1_d_text=textToPin( 47 type(0) )
    POLY1_d_pintext=text( 47 type(0) )

    POLY1_p=layer( 47 type(0) )

    POLY2=layer( 14 type(0) )
    POLY2_pin=pinLayer( 14 type(0) )

    PSUB2=layer( 50 type(0) )

    PTDIODE=layer( 37 type(0) )

    RFDUMMY0=layer( 160 type(0) )

    RLPPDUMMY=layer( 134 type(0) )

    RMDUMMY=layer( 69 type(0) )

    RMDUMMY1=layer( 69 type(1) )

    RMDUMMY2=layer( 69 type(2) )

    RMDUMMY3=layer( 69 type(3) )

    RMDUMMY4=layer( 69 type(4) )

    RMDUMMY5=layer( 69 type(5) )

    RMDUMMY6=layer( 69 type(6) )

    RPDUMMY=layer( 54 type(0) )

    RPDUMMY1=layer( 54 type(1) )

    RPO=layer( 34 )

    RWDUMMY=layer( 52 type(0) )

    RWDUMMY1=layer( 52 type(1) )

    VARDUMMY0=layer( 138 type(0) )

    VARDUMMY3=layer( 138 type(3) )

    VIA12=layer( 17 type(0) )

    VIA23=layer( 27 type(0) )

    VIA34=layer( 29 type(0) )

    VIA45=layer( 32 type(0) )

    VIA56=layer( 39 type(0) )

    VTM_N=layer( 24 type(0) )

    VTM_P=layer( 23 type(0) )

    ind_minus4_text=textToPin( 43 type(0) )
    ind_minus4_pintext=text( 43 type(0) )

    ind_minus5_text=textToPin( 44 type(0) )
    ind_minus5_pintext=text( 44 type(0) )

    ind_minus6_text=textToPin( 45 type(0) )
    ind_minus6_pintext=text( 45 type(0) )

    ind_plus6_text=textToPin( 45 type(0) )
    ind_plus6_pintext=text( 45 type(0) )

    m1t6_text=textToPin( 40 type(0) )
    m1t6_pintext=text( 40 type(0) )

    m1x6_text=textToPin( 40 type(0) )
    m1x6_pintext=text( 40 type(0) )

    m2t56_text=textToPin( 41 type(0) )
    m2t56_pintext=text( 41 type(0) )

    m2x56_text=textToPin( 41 type(0) )
    m2x56_pintext=text( 41 type(0) )

    m3t6_text=textToPin( 42 type(0) )
    m3t6_pintext=text( 42 type(0) )

    m3x6_text=textToPin( 42 type(0) )
    m3x6_pintext=text( 42 type(0) )

    m4t6_text=textToPin( 43 type(0) )
    m4t6_pintext=text( 43 type(0) )

    m4x6_text=textToPin( 43 type(0) )
    m4x6_pintext=text( 43 type(0) )

    m5t6_text=textToPin( 44 type(0) )
    m5t6_pintext=text( 44 type(0) )

    m5x6_text=textToPin( 44 type(0) )
    m5x6_pintext=text( 44 type(0) )

    m6t6_text=textToPin( 45 type(0) )
    m6t6_pintext=text( 45 type(0) )

    m6x6_text=textToPin( 45 type(0) )
    m6x6_pintext=text( 45 type(0) )

    plyt_text=textToPin( 47 type(0) )
    plyt_pintext=text( 47 type(0) )

    plyx_text=textToPin( 47 type(0) )
    plyx_pintext=text( 47 type(0) )

    po_net_text=textToPin( 47 type(0) )
    po_net_pintext=text( 47 type(0) )

    bulki=cellBoundary(root)
)

layerDefs("df2"
    DMP2V      = layer( "DMP2V" )     ; dummy layer to avoid P2V in P+ poly resistor
   
    DMN2V      = layer( "DMN2V" )     ; dummy layer to avoid N2V in N+ poly resistor

    ADTERM=layer("RFDUMMY" type("drawing1"))

    BJTDUMMY=layer("BJTDUMMY" type("drawing"))

    CONT=layer("CONT" type("drawing"))

    CTM2=layer("CTM2" type("drawing"))
    CTM2_pin=pinLayer("CTM2")

    CTM3=layer("CTM3" type("drawing"))
    CTM3_pin=pinLayer("CTM3")

    CTM4=layer("CTM4" type("drawing"))
    CTM4_pin=pinLayer("CTM4")

    CTM5=layer("CTM5" type("drawing"))
    CTM5_pin=pinLayer("CTM5")

    DIFF=layer("DIFF" type("drawing"))
    DIFF_pin=pinLayer("DIFF")

    DIODUMMY=layer("DIODUMMY" type("drawing"))

    DNW=layer("DNW" type("drawing"))
    DNW_pin=pinLayer("DNW")

    DRAIN=layer("DIFF" type("drain"))

    ESD3DUMMY=layer("ESD3DUMMY" type("drawing"))

    HRI=layer("HRI" type("drawing"))

    INDDUMMY=layer("INDDUMMY" type("drawing"))
    INDDUMMY_pin=pinLayer("INDDUMMY")

    M1_text=textToPin("METAL1" type("pin"))
    M1_pintext=pinText("METAL1")

    M2_text=textToPin("METAL2" type("pin"))
    M2_pintext=pinText("METAL2")

    M3_text=textToPin("METAL3" type("pin"))
    M3_pintext=pinText("METAL3")

    M4_text=textToPin("METAL4" type("pin"))
    M4_pintext=pinText("METAL4")

    M5_text=textToPin("METAL5" type("pin"))
    M5_pintext=pinText("METAL5")

    M6_text=textToPin("METAL6" type("pin"))
    M6_pintext=pinText("METAL6")

    METAL1_d=layer("METAL1" type("drawing"))
    METAL1_d_pin=pinLayer("METAL1")
    METAL1_d_text=textToPin("METAL1" type("pin"))
    METAL1_d_pintext=pinText("METAL1")

    METAL1_dummy=layer("METAL1" type("dummy"))

    METAL1_slot=layer("METAL1" type("slot"))

    METAL2_d=layer("METAL2" type("drawing"))
    METAL2_d_pin=pinLayer("METAL2")
    METAL2_d_text=textToPin("METAL2" type("pin"))
    METAL2_d_pintext=pinText("METAL2")

    METAL2_dummy=layer("METAL2" type("dummy"))

    METAL2_slot=layer("METAL2" type("slot"))

    METAL3_d=layer("METAL3" type("drawing"))
    METAL3_d_pin=pinLayer("METAL3")
    METAL3_d_text=textToPin("METAL3" type("pin"))
    METAL3_d_pintext=pinText("METAL3")

    METAL3_dummy=layer("METAL3" type("dummy"))

    METAL3_slot=layer("METAL3" type("slot"))

    METAL4_d=layer("METAL4" type("drawing"))
    METAL4_d_pin=pinLayer("METAL4")
    METAL4_d_text=textToPin("METAL4" type("pin"))
    METAL4_d_pintext=pinText("METAL4")

    METAL4_dummy=layer("METAL4" type("dummy"))

    METAL4_slot=layer("METAL4" type("slot"))

    METAL5_d=layer("METAL5" type("drawing"))
    METAL5_d_pin=pinLayer("METAL5")
    METAL5_d_text=textToPin("METAL5" type("pin"))
    METAL5_d_pintext=pinText("METAL5")

    METAL5_dummy=layer("METAL5" type("dummy"))

    METAL5_slot=layer("METAL5" type("slot"))

    METAL6_d=layer("METAL6" type("drawing"))
    METAL6_d_pin=pinLayer("METAL6")
    METAL6_d_text=textToPin("METAL6" type("pin"))
    METAL6_d_pintext=pinText("METAL6")

    METAL6_dummy=layer("METAL6" type("dummy"))

    METAL6_slot=layer("METAL6" type("slot"))

    NDIFF=layer("NDIFF" type("drawing"))

    NIMP=layer("NIMP" type("drawing"))

    NTN=layer("NTN" type("drawing"))

    NWELL=layer("NWELL" type("drawing"))
    NWELL_pin=pinLayer("NWELL")

    OD2=layer("OD2" type("drawing"))

    PDIFF=layer("PDIFF" type("drawing"))

    PIMP=layer("PIMP" type("drawing"))

    POLY1_d=layer("POLY1" type("drawing"))
    POLY1_d_pin=pinLayer("POLY1")
    POLY1_d_text=textToPin("POLY1" type("pin"))
    POLY1_d_pintext=pinText("POLY1")

    POLY1_p=layer("POLY1" type("pin"))

    POLY2=layer("POLY2" type("drawing"))
    POLY2_pin=pinLayer("POLY2")

    PSUB2=layer("PSUB2" type("drawing"))

    PTDIODE=layer("PTDIODE" type("drawing"))

    RFDUMMY0=layer("RFDUMMY" type("drawing"))

    RLPPDUMMY=layer("RLPPDUMMY" type("drawing"))

    RMDUMMY=layer("RMDUMMY" type("drawing"))

    RMDUMMY1=layer("RMDUMMY" type("drawing1"))

    RMDUMMY2=layer("RMDUMMY" type("drawing2"))

    RMDUMMY3=layer("RMDUMMY" type("drawing3"))

    RMDUMMY4=layer("RMDUMMY" type("drawing4"))

    RMDUMMY5=layer("RMDUMMY" type("drawing5"))

    RMDUMMY6=layer("RMDUMMY" type("drawing6"))

    RPDUMMY=layer("RPDUMMY" type("drawing"))

    RPDUMMY1=layer("RPDUMMY" type("drawing1"))

    RPO=layer("RPO" type("drawing"))

    RWDUMMY=layer("RWDUMMY" type("drawing"))

    RWDUMMY1=layer("RWDUMMY" type("drawing1"))

    VARDUMMY0=layer("VARDUMMY" type("drawing"))

    VARDUMMY3=layer("VARDUMMY" type("drawing3"))

    VIA12=layer("VIA12" type("drawing"))

    VIA23=layer("VIA23" type("drawing"))

    VIA34=layer("VIA34" type("drawing"))

    VIA45=layer("VIA45" type("drawing"))

    VIA56=layer("VIA56" type("drawing"))

    VTM_N=layer("VTM_N" type("drawing"))

    VTM_P=layer("VTM_P" type("drawing"))

    ind_minus4_text=textToPin("METAL4" type("pin"))
    ind_minus4_pintext=pinText("METAL4")

    ind_minus5_text=textToPin("METAL5" type("pin"))
    ind_minus5_pintext=pinText("METAL5")

    ind_minus6_text=textToPin("METAL6" type("pin"))
    ind_minus6_pintext=pinText("METAL6")

    ind_plus6_text=textToPin("METAL6" type("pin"))
    ind_plus6_pintext=pinText("METAL6")

    m1t6_text=textToPin("METAL1" type("pin"))
    m1t6_pintext=pinText("METAL1")

    m1x6_text=textToPin("METAL1" type("pin"))
    m1x6_pintext=pinText("METAL1")

    m2t56_text=textToPin("METAL2" type("pin"))
    m2t56_pintext=pinText("METAL2")

    m2x56_text=textToPin("METAL2" type("pin"))
    m2x56_pintext=pinText("METAL2")

    m3t6_text=textToPin("METAL3" type("pin"))
    m3t6_pintext=pinText("METAL3")

    m3x6_text=textToPin("METAL3" type("pin"))
    m3x6_pintext=pinText("METAL3")

    m4t6_text=textToPin("METAL4" type("pin"))
    m4t6_pintext=pinText("METAL4")

    m4x6_text=textToPin("METAL4" type("pin"))
    m4x6_pintext=pinText("METAL4")

    m5t6_text=textToPin("METAL5" type("pin"))
    m5t6_pintext=pinText("METAL5")

    m5x6_text=textToPin("METAL5" type("pin"))
    m5x6_pintext=pinText("METAL5")

    m6t6_text=textToPin("METAL6" type("pin"))
    m6t6_pintext=pinText("METAL6")

    m6x6_text=textToPin("METAL6" type("pin"))
    m6x6_pintext=pinText("METAL6")

    plyt_text=textToPin("POLY1" type("pin"))
    plyt_pintext=pinText("POLY1")

    plyx_text=textToPin("POLY1" type("pin"))
    plyx_pintext=pinText("POLY1")

    po_net_text=textToPin("POLY1" type("pin"))
    po_net_pintext=pinText("POLY1")

    bulki=cellBoundary(root)
)

CTM2=geomOr(CTM2 CTM2_pin)
CTM3=geomOr(CTM3 CTM3_pin)
CTM4=geomOr(CTM4 CTM4_pin)
CTM5=geomOr(CTM5 CTM5_pin)
DIFF=geomOr(DIFF DIFF_pin)
DNW=geomOr(DNW DNW_pin)
INDDUMMY=geomOr(INDDUMMY INDDUMMY_pin)
METAL1_d=geomOr(METAL1_d METAL1_d_pin)
METAL2_d=geomOr(METAL2_d METAL2_d_pin)
METAL3_d=geomOr(METAL3_d METAL3_d_pin)
METAL4_d=geomOr(METAL4_d METAL4_d_pin)
METAL5_d=geomOr(METAL5_d METAL5_d_pin)
METAL6_d=geomOr(METAL6_d METAL6_d_pin)
NWELL=geomOr(NWELL NWELL_pin)
POLY1_d=geomOr(POLY1_d POLY1_d_pin)
POLY2=geomOr(POLY2 POLY2_pin)


; PO=POLY1_d or POLY1_p
PO=geomOr(POLY1_d POLY1_p)

; _pwdnw=DNW andnot NWELL
_pwdnw=geomAndNot(DNW NWELL)

; diodmy=DIODUMMY or PTDIODE
diodmy=geomOr(DIODUMMY PTDIODE)

; rfd_all=RFDUMMY0 or ADTERM
rfd_all=geomOr(ADTERM RFDUMMY0)

; rwd_all=RWDUMMY or RWDUMMY1
rwd_all=geomOr(RWDUMMY RWDUMMY1)

; nw_net=NWELL andnot rwd_all
nw_net=geomAndNot(NWELL rwd_all)

; v2c=VIA23 and CTM2
v2c=geomAnd(CTM2 VIA23)

; v3c=VIA34 and CTM3
v3c=geomAnd(CTM3 VIA34)

; v4c=VIA45 and CTM4
v4c=geomAnd(CTM4 VIA45)

; v5c=VIA56 and CTM5
v5c=geomAnd(CTM5 VIA56)

; v23=VIA23 noTouch CTM2
v23=geomAvoiding(VIA23 CTM2)

; v34=VIA34 noTouch CTM3
v34=geomAvoiding(VIA34 CTM3)

; v45=VIA45 noTouch CTM4
v45=geomAvoiding(VIA45 CTM4)

; v56=VIA56 noTouch CTM5
v56=geomAvoiding(VIA56 CTM5)

; OD=DIFF or PDIFF or NDIFF
L9257=geomOr(DIFF PDIFF)
OD=geomOr(L9257 NDIFF)

; co_po=CONT andnot OD
co_po=geomAndNot(CONT OD)

; nod=NIMP and OD
nod=geomAnd(NIMP OD)

; pod=PIMP and OD
pod=geomAnd(OD PIMP)

; co_ndiff=(CONT andnot POLY1_d) and NIMP
L1504=geomAndNot(CONT POLY1_d)
co_ndiff=geomAnd(L1504 NIMP)

; co_pdiff=(CONT andnot POLY1_d) and PIMP
co_pdiff=geomAnd(L1504 PIMP)



rpoly = geomButtOrOver(POLY1_d CONT)
p1hr1 = geomAnd(rpoly RPO)
RPDMY = geomAndNot(RPDUMMY RPDUMMY1)  ;
rp1 = geomAndNot(RPDMY geomButtOrOver(RPDMY OD))  ;
prdum = geomButtOrOver(rp1 rpoly)  ; poly1 resistor dummy
rpop1 = geomButtOrOver(p1hr1 prdum)  ;
hripo1 = geomAnd(rpop1 HRI)  ;
rpop2a = geomAndNot(p1hr1 geomButtOrOver(p1hr1 prdum))  ;
rpop2 = geomAnd(rpop2a RPDUMMY1)  ;
RFDUMMY = geomAndNot(RFDUMMY0 ADTERM)
p1lr2a = geomAndNot(rpoly prdum)  ;
p1lr2 = geomAnd(p1lr2a RPDUMMY1)  ;
rpip2 = geomAndNot(p1lr2 geomButtOrOver(p1lr2 RPO))  ;

; Distributed HRI high poly resistor
hripo1_dis = geomAnd(rpop2 HRI)  ;
hripo2_dis = geomAnd(hripo1_dis RLPPDUMMY)  ;
hripo3_dis = geomAndNot(hripo2_dis NIMP)  ;
hripo4_dis = geomAndNot(hripo3_dis PIMP)  ;
lrpop_dis = geomAndNot(hripo4_dis ADTERM)  ;

;* Define device -- xdev rppo1w_dis
prpip1_dis = geomAnd(rpip2 PIMP)  ;
prpip2_dis = geomAndNot(prpip1_dis RFDUMMY)  ;
prpip_dis = geomAndNot(prpip2_dis ADTERM)  ; Distributed P+POLY w/i silicide
rppoly_edge_dis = geomGetEdge(prpip_dis inside rpoly)  ;
l_rppoly_dis = geomGetLength(rppoly_edge_dis 2 <= keep < 99999999) ;
l_rppoly_dis_edge_su001=geomSize(l_rppoly_dis 0.005 edges);
rppolyl_r_dis = geomButtOrCoin( prpip_dis l_rppoly_dis_edge_su001 )  ;Distributed P+POLY resistor w/i silicide >= 2
rppolys_r_dis = geomAndNot(prpip_dis rppolyl_r_dis)  ;Distributed P+POLY resistor w/i silicide < 2

;* Define device -- xdev rnpo1w_dis
nrpip1_dis = geomAnd(rpip2 NIMP)  ;
nrpip_dis = geomAndNot(nrpip1_dis RFDUMMY)  ; (NS) N+POLY w/i silicide
rnpoly_edge_dis = geomGetEdge(nrpip_dis inside rpoly)  ;
l_rnpoly_dis = geomGetLength(rnpoly_edge_dis 2 <= keep < 99999999) ;
l_rnpoly_dis_edge_su001=geomSize(l_rnpoly_dis 0.005 edges);
rnpolyl_r_dis = geomButtOrCoin( nrpip_dis l_rnpoly_dis_edge_su001 )  ;Distributed N+POLY resistor w/i silicide >= 2;
rnpolys_r_dis = geomAndNot(nrpip_dis rnpolyl_r_dis)  ;Distributed N+POLY resistor w/i silicide < 2

;* Define device -- xdev rppo1rpo_dis
rpop2w = geomAndNot(rpop2 geomButtOrOver(rpop2 hripo1))  ;
prpop1_dis = geomButtOrOver(rpop2w DMP2V)  ;
prpop2_dis = geomAnd(prpop1_dis PIMP)  ;
prpop3_dis = geomAndNot(prpop2_dis RFDUMMY)  ;
prpop_dis = geomAndNot(prpop3_dis ADTERM)  ; Distributed P+POLY w/o silicide
;
;* Define device -- xdev rnpo1rpo_dis
nrpop1_dis = geomButtOrOver(rpop2w DMN2V)  ;
nrpop2_dis = geomAnd(nrpop1_dis NIMP)  ;
nrpop3_dis = geomAndNot(nrpop2_dis RFDUMMY)  ;
nrpop_dis = geomAndNot(nrpop3_dis ADTERM)  ; Distributed P+POLY w/o silicide



; ***** Define connectivity/via layer -- poly_term ****
poly_term1 = geomAnd(POLY1_d RPDUMMY1)  ;
poly_term2 = geomSize(poly_term1 0.005)  ;
poly_term = geomAndNot(poly_term2 poly_term1)  ;

; psub2ring=((PSUB2 size .005) andnot PSUB2)
L16932=geomSize(PSUB2 .005)
psub2ring=geomAndNot(L16932 PSUB2)

; psub=(bulki size .005) andnot ( 
; (DNW and (NWELL cut ((DNW andnot (DNW size -0.01)) and NWELL))) or 
; (NWELL cut (BJTDUMMY size 4)) or 
; (  ( (psub2ring andnot (NWELL cut PSUB2))  segment > 6 ) or (NWELL cut PSUB2) ) 
; )
L12143=geomSize(bulki .005)
L96410=geomSize(DNW -0.01)
L53247=geomAndNot(DNW L96410)
L56176=geomAnd(L53247 NWELL)
L28453=geomStraddle(NWELL L56176)
L20796=geomAnd(DNW L28453)
L74833=geomSize(BJTDUMMY 1.0)
L2129=geomSize(L74833 3.0)
L89648=geomStraddle(NWELL L2129)
L42810=geomOr(L20796 L89648)
L1920=geomStraddle(NWELL PSUB2)
L15904=geomAndNot(psub2ring L1920)
L20926=geomGetLength(L15904 keep>6 fig)
L1822=geomOr(L1920 L20926)
L25673=geomOr(L1822 L42810)
psub=geomAndNot(L12143 L25673)

; ***** Define connectivity/via layer -- psub_term ****
pwdnw_r = geomAnd(psub DNW)  ; PW_DNW diode
psub_term = geomAndNot(psub pwdnw_r)  ;

; ***** Define connectivity/via layer -- poly_nw_via ****
poly_nw_via = geomAnd(poly_term nw_net)  ;

; ***** Define connectivity/via layer -- poly_psub_via ****
poly_psub_via = geomAnd(poly_term psub_term)  ;


; ind_ring=INDDUMMY andnot (INDDUMMY size -1)
L8292=geomSize(INDDUMMY -1)
ind_ring=geomAndNot(INDDUMMY L8292)

; ind_w4=METAL4_d and ind_ring
ind_w4=geomAnd(METAL4_d ind_ring)

; ind_w5=METAL5_d and ind_ring
ind_w5=geomAnd(METAL5_d ind_ring)

; ind_w6=METAL6_d and ind_ring
ind_w6=geomAnd(METAL6_d ind_ring)

; ind_wide6=ind_w6 segment > = 30
ind_wide6=geomGetLength(ind_w6 keep>=30 fig)


; _rm1=(METAL1_d and RMDUMMY) OR (METAL1_d and RMDUMMY1)
L49499=geomAnd(METAL1_d RMDUMMY)
L7724=geomAnd(METAL1_d RMDUMMY1)
_rm1=geomOr(L49499 L7724)

; _rm2=(METAL2_d and RMDUMMY) OR (METAL2_d and RMDUMMY2)
L66438=geomAnd(METAL2_d RMDUMMY)
L90444=geomAnd(METAL2_d RMDUMMY2)
_rm2=geomOr(L66438 L90444)

; _rm3=(METAL3_d and RMDUMMY) OR (METAL3_d and RMDUMMY3)
L84921=geomAnd(METAL3_d RMDUMMY)
L73164=geomAnd(METAL3_d RMDUMMY3)
_rm3=geomOr(L73164 L84921)

; _rm4=(METAL4_d and RMDUMMY) OR (METAL4_d and RMDUMMY4)
L31016=geomAnd(METAL4_d RMDUMMY)
L55884=geomAnd(METAL4_d RMDUMMY4)
_rm4=geomOr(L31016 L55884)

; _rm5=(METAL5_d and RMDUMMY) OR (METAL5_d and RMDUMMY5)
L20343=geomAnd(METAL5_d RMDUMMY)
L38604=geomAnd(METAL5_d RMDUMMY5)
_rm5=geomOr(L20343 L38604)

; _rm6=(METAL6_d and RMDUMMY) OR (METAL6_d and RMDUMMY6)
L95594=geomAnd(METAL6_d RMDUMMY)
L21324=geomAnd(METAL6_d RMDUMMY6)
_rm6=geomOr(L21324 L95594)

; _rnwod=(RWDUMMY and NWELL) and (OD and RPO)
L7990=geomAnd(NWELL RWDUMMY)
L89295=geomAnd(OD RPO)
_rnwod=geomAnd(L7990 L89295)

; _rnwod_m=(RWDUMMY1 and NWELL) and (OD and RPO)
L42075=geomAnd(NWELL RWDUMMY1)
_rnwod_m=geomAnd(L42075 L89295)

; _rnwsti=(RWDUMMY and NWELL) andnot (OD and RPO)
_rnwsti=geomAndNot(L7990 L89295)

; ind_body4=(INDDUMMY and METAL4_d) touch (INDDUMMY size -50)
L18208=geomAnd(INDDUMMY METAL4_d)
L70039=geomSize(INDDUMMY -1.0)
L79600=geomSize(L70039 -49.0)
ind_body4=geomButtOrOver(L18208 L79600)

; ind_body5=(INDDUMMY and METAL5_d) touch (INDDUMMY size -50)
L17247=geomAnd(INDDUMMY METAL5_d)
ind_body5=geomButtOrOver(L17247 L79600)

; ind_body6=(INDDUMMY and METAL6_d) touch (INDDUMMY size -50)
L16286=geomAnd(INDDUMMY METAL6_d)
ind_body6=geomButtOrOver(L16286 L79600)

; ind_std4=(INDDUMMY outside METAL2_d) cut == 1 (ind_body4 and ind_ring)
L51436=geomOutside(INDDUMMY METAL2_d)
L75449=geomAnd(ind_body4 ind_ring)
ind_std4=geomStraddle(L51436 L75449 keep==1)

; ind_std5=(INDDUMMY outside METAL3_d) cut == 1 (ind_body5 and ind_ring)
L52397=geomOutside(INDDUMMY METAL3_d)
L88954=geomAnd(ind_body5 ind_ring)
ind_std5=geomStraddle(L52397 L88954 keep==1)

; ind_std6=(INDDUMMY outside METAL4_d) cut == 1 (ind_body6 and ind_ring)
L53358=geomOutside(INDDUMMY METAL4_d)
L2459=geomAnd(ind_body6 ind_ring)
ind_std6=geomStraddle(L53358 L2459 keep==1)

; _spiral_s2_std6=ind_std6 outside ind_wide6
_spiral_s2_std6=geomOutside(ind_std6 ind_wide6)

; _spiral_s3_std6=ind_std6 cut ind_wide6
_spiral_s3_std6=geomStraddle(ind_std6 ind_wide6)

; ind_std_s6=(INDDUMMY and METAL5_d) andnot (INDDUMMY and METAL6_d)
ind_std_s6=geomAndNot(L17247 L16286)

; rfgate=OD and ((POLY1_d and ADTERM) enclose CONT) 
L84894=geomAnd(ADTERM POLY1_d)
L94774=geomEnclose(L84894 CONT)
rfgate=geomAnd(L94774 OD)

; vargt=OD and POLY1_d and NIMP and VARDUMMY0
L55928=geomAnd(OD POLY1_d)
L56894=geomAnd(L55928 NIMP)
vargt=geomAnd(L56894 VARDUMMY0)

; M1=((METAL1_d or METAL1_dummy) andnot METAL1_slot) andnot (RMDUMMY or RMDUMMY1)
L64359=geomOr(METAL1_d METAL1_dummy)
L4156=geomAndNot(L64359 METAL1_slot)
L2964=geomOr(RMDUMMY RMDUMMY1)
M1=geomAndNot(L4156 L2964)

; M2=((METAL2_d or METAL2_dummy) andnot METAL2_slot) andnot (RMDUMMY or RMDUMMY2)
L33863=geomOr(METAL2_d METAL2_dummy)
L81247=geomAndNot(L33863 METAL2_slot)
L2965=geomOr(RMDUMMY RMDUMMY2)
M2=geomAndNot(L81247 L2965)

; _capm2=((CTM2 andnot rfd_all) and M2) enclose VIA23
L16748=geomAndNot(CTM2 rfd_all)
L3854=geomAnd(L16748 M2)
_capm2=geomEnclose(L3854 VIA23)

; M3=((METAL3_d or METAL3_dummy) andnot METAL3_slot) andnot (RMDUMMY or RMDUMMY3)
L3367=geomOr(METAL3_d METAL3_dummy)
L1190=geomAndNot(L3367 METAL3_slot)
L2966=geomOr(RMDUMMY RMDUMMY3)
M3=geomAndNot(L1190 L2966)

; _capm3=((CTM3 andnot rfd_all) and M3) enclose VIA34
L62285=geomAndNot(CTM3 rfd_all)
L75242=geomAnd(L62285 M3)
_capm3=geomEnclose(L75242 VIA34)

; _dnwpsub=DNW touch (( NWELL touch DNW ) andnot ( NWELL inside DNW ))
L67928=geomButtOrOver(NWELL DNW)
L54139=geomInside(NWELL DNW)
L30218=geomAndNot(L67928 L54139)
_dnwpsub=geomButtOrOver(DNW L30218)

; _ndio=diodmy and (((OD and NIMP) andnot OD2) andnot NWELL)
L40484=geomAndNot(nod OD2)
L42696=geomAndNot(L40484 NWELL)
_ndio=geomAnd(L42696 diodmy)

; _ndio_3=diodmy and (((OD and NIMP) and OD2) andnot NWELL)
L31895=geomAnd(OD2 nod)
L44010=geomAndNot(L31895 NWELL)
_ndio_3=geomAnd(L44010 diodmy)

; _nmoscap=(((OD andnot OD2) and NIMP ) andnot rfd_all) and VARDUMMY0
L84694=geomAndNot(OD OD2)
L35212=geomAnd(L84694 NIMP)
L54661=geomAndNot(L35212 rfd_all)
_nmoscap=geomAnd(L54661 VARDUMMY0)

; _nmoscap_33=(((OD and OD2) and NIMP ) andnot rfd_all) and VARDUMMY0
L86011=geomAnd(OD OD2)
L83855=geomAnd(L86011 NIMP)
L75783=geomAndNot(L83855 rfd_all)
_nmoscap_33=geomAnd(L75783 VARDUMMY0)

; _nwdio=((diodmy and NWELL) outside OD2) outside (OD and PIMP)
L43699=geomAnd(NWELL diodmy)
L43331=geomOutside(L43699 OD2)
_nwdio=geomOutside(L43331 pod)

; _nwdio_3=((diodmy and NWELL) and OD2) outside (OD and PIMP)
L7375=geomAnd(L43699 OD2)
_nwdio_3=geomOutside(L7375 pod)

; _pdio=diodmy and (((OD and PIMP) andnot OD2) and NWELL)
L66878=geomAndNot(pod OD2)
L5550=geomAnd(L66878 NWELL)
_pdio=geomAnd(L5550 diodmy)

; _pdio_3=diodmy and (((OD and PIMP) and OD2) and NWELL)
L33817=geomAnd(OD2 pod)
L9353=geomAnd(L33817 NWELL)
_pdio_3=geomAnd(L9353 diodmy)

; _pmosmvt2v=(((OD and PIMP) and POLY1_d) and NWELL) and VTM_P
L65414=geomAnd(POLY1_d pod)
L83665=geomAnd(L65414 NWELL)
_pmosmvt2v=geomAnd(L83665 VTM_P)

; _rnodrpo_m=RPDUMMY1 and (((OD and NIMP) and RPO) andnot NWELL)
L92437=geomAnd(RPO nod)
L79853=geomAndNot(L92437 NWELL)
_rnodrpo_m=geomAnd(L79853 RPDUMMY1)

; _rpodrpo_m=RPDUMMY1 and (((OD and PIMP) and RPO) and NWELL)
L90515=geomAnd(RPO pod)
L13627=geomAnd(L90515 NWELL)
_rpodrpo_m=geomAnd(L13627 RPDUMMY1)

; d_diff=((OD andnot (POLY1_d enclose co_po)) andnot RPDUMMY) enclose DRAIN
L17717=geomEnclose(POLY1_d co_po)
L48558=geomAndNot(OD L17717)
L65974=geomAndNot(L48558 RPDUMMY)
d_diff=geomEnclose(L65974 DRAIN)

; po_net=(POLY1_d touch CONT) andnot ((RPDUMMY outside RLPPDUMMY ) or RLPPDUMMY)
L49481=geomButtOrOver(POLY1_d CONT)
L48355=geomOutside(RPDUMMY RLPPDUMMY)
L58958=geomOr(L48355 RLPPDUMMY)
po_net=geomAndNot(L49481 L58958)

; _nmos_rf33=OD enclose (POLY1_d and (((OD and OD2) and NIMP) and ADTERM))
L82951=geomAnd(ADTERM L83855)
L50050=geomAnd(L82951 POLY1_d)
_nmos_rf33=geomEnclose(OD L50050)

; _nmosmvt2v=((((OD and NIMP) and POLY1_d) andnot NWELL) andnot OD2) and VTM_N
L63492=geomAnd(POLY1_d nod)
L69732=geomAndNot(L63492 NWELL)
L36440=geomAndNot(L69732 OD2)
_nmosmvt2v=geomAnd(L36440 VTM_N)

; _nmosmvt3v=((((OD and NIMP) and POLY1_d) andnot NWELL) and OD2) and VTM_N
L42541=geomAnd(L69732 OD2)
_nmosmvt3v=geomAnd(L42541 VTM_N)

; _nmosnvt2v=((((OD and NIMP) and POLY1_d) andnot NWELL) andnot OD2) and NTN
_nmosnvt2v=geomAnd(L36440 NTN)

; _nmosnvt3v=((((OD and NIMP) and POLY1_d) andnot NWELL) and OD2) and NTN
_nmosnvt3v=geomAnd(L42541 NTN)

; _pmos3v=((((OD and PIMP) and POLY1_d) and NWELL) and OD2) andnot ADTERM
L72172=geomAnd(L83665 OD2)
_pmos3v=geomAndNot(L72172 ADTERM)

; _rnpo1rpo=(RPDUMMY andnot rfd_all) and ((POLY1_d enclose co_po) and RPO and NIMP)
;  
L56424=geomAndNot(RPDUMMY rfd_all)
L77819=geomAnd(L17717 RPO)
L56897=geomAnd(L77819 NIMP)
_rnpo1rpo=geomAnd(L56424 L56897)

; _rnrpo=RPDUMMY and ((((OD and NIMP) and RPO) andnot NWELL) andnot RPDUMMY1)
L85253=geomAndNot(L79853 RPDUMMY1)
_rnrpo=geomAnd(L85253 RPDUMMY)

; _rppoly_rf=(RPDUMMY and rfd_all) and (((POLY1_d enclose co_po) andnot RPO) and PIMP)
L14291=geomAnd(RPDUMMY rfd_all)
L10496=geomAndNot(L17717 RPO)
L77517=geomAnd(L10496 PIMP)
_rppoly_rf=geomAnd(L14291 L77517)

; _rprpo=RPDUMMY and ((((OD and PIMP) and RPO) and NWELL) andnot RPDUMMY1)
L15434=geomAndNot(L13627 RPDUMMY1)
_rprpo=geomAnd(L15434 RPDUMMY)

; ind_corners6=(ind_body6 outsideInnerCorner 1 ) outside (notRectangle (INDDUMMY and
;  METAL5_d) size 3)
L33674=geomGetCorner(ind_body6 angleAll)
L39339=geomGrowCorner(L33674 1 angleAll outside inner)
L8435=geomGetVertex(L17247 keep==4)
L38325=drc(L8435 width<0.001)
L46385=geomAvoiding(L8435 L38325)
L24775=geomAndNot(L17247 L46385)
L86204=geomSize(L24775 1.0)
L9959=geomSize(L86204 2.0)
ind_corners6=geomOutside(L39339 L9959)

; ind_filled6=fill ((ind_body6 or (notRectangle (INDDUMMY and METAL5_d))) upDown 14)
L18136=geomOr(L24775 ind_body6)
L98346=geomSize(L18136 1.0)
L88442=geomSize(L98346 13.0)
L84244=geomSize(L88442 -1.0)
L30849=geomSize(L84244 -13.0)
ind_filled6=geomNoHoles(L30849)

; ind_space6=(((ind_filled6 andnot ind_body6) growEdges 1 ) andnot ind_filled6) segment
;  > 1 < 6
L23708=geomAndNot(ind_filled6 ind_body6)
L38016=geomSize(L23708 1 edges)
L47524=geomAndNot(L38016 ind_filled6)
ind_space6=geomGetLength(L47524 1<keep<6 fig)

; ind_minus4=ind_std4 and (((INDDUMMY and METAL4_d) andnot ind_body4) or (INDDUMMY
;  and METAL3_d))
L11933=geomAndNot(L18208 ind_body4)
L19169=geomAnd(INDDUMMY METAL3_d)
L44810=geomOr(L11933 L19169)
ind_minus4=geomAnd(L44810 ind_std4)

; ind_minus5=ind_std5 and (((INDDUMMY and METAL5_d) andnot ind_body5) or (INDDUMMY
;  and METAL4_d))
L14502=geomAndNot(L17247 ind_body5)
L46466=geomOr(L14502 L18208)
ind_minus5=geomAnd(L46466 ind_std5)

; ind_minus6=ind_std6 and (((INDDUMMY and METAL6_d) andnot ind_body6) or (INDDUMMY
;  and METAL5_d))
L26359=geomAndNot(L16286 ind_body6)
L68217=geomOr(L17247 L26359)
ind_minus6=geomAnd(L68217 ind_std6)

; ngate=(POLY1_d andnot (( POLY1_d and RFDUMMY0 ) outside CONT )) and (nod andnot NWELL)
L90715=geomAnd(POLY1_d RFDUMMY0)
L57439=geomOutside(L90715 CONT)
L93158=geomAndNot(POLY1_d L57439)
L86437=geomAndNot(nod NWELL)
ngate=geomAnd(L86437 L93158)

; pgate=(POLY1_d andnot (( POLY1_d and RFDUMMY0 ) outside CONT )) and pod and NWELL
L64060=geomAnd(L93158 pod)
pgate=geomAnd(L64060 NWELL)

; _moscap_rf=((NWELL enclose (((OD andnot OD2) and NIMP ) and ADTERM)) touch POLY1_d
;  ) and VARDUMMY0
L46867=geomAnd(ADTERM L35212)
L45024=geomEnclose(NWELL L46867)
L71376=geomButtOrOver(L45024 POLY1_d)
_moscap_rf=geomAnd(L71376 VARDUMMY0)

; _moscap_rf33=((NWELL enclose (((OD and OD2) and NIMP ) and ADTERM)) touch POLY1_d
;  ) and VARDUMMY0
L69180=geomEnclose(NWELL L82951)
L28347=geomButtOrOver(L69180 POLY1_d)
_moscap_rf33=geomAnd(L28347 VARDUMMY0)

; b_mosc=( _moscap_rf or _moscap_rf33 or _nmoscap or _nmoscap_33 ) size 1
L19555=geomOr(_moscap_rf _moscap_rf33)
L20686=geomOr(L19555 _nmoscap)
L87222=geomOr(L20686 _nmoscap_33)
b_mosc=geomSize(L87222 1)

; _nmos_rf=OD enclose (POLY1_d and ((((OD andnot OD2) and NIMP ) andnot NWELL) and
;  ADTERM))
L9659=geomAndNot(L35212 NWELL)
L18181=geomAnd(ADTERM L9659)
L68586=geomAnd(L18181 POLY1_d)
_nmos_rf=geomEnclose(OD L68586)

; _pmos2v=(((((OD and PIMP) and POLY1_d) and NWELL) andnot OD2) andnot VTM_P) andnot
;  ADTERM
L16143=geomAndNot(L83665 OD2)
L26109=geomAndNot(L16143 VTM_P)
_pmos2v=geomAndNot(L26109 ADTERM)

; _pmos_rf33=OD enclose (POLY1_d and ((((OD and OD2) and PIMP) and DNW) and ADTERM))
L43437=geomAnd(L86011 PIMP)
L18825=geomAnd(DNW L43437)
L98736=geomAnd(ADTERM L18825)
L68066=geomAnd(L98736 POLY1_d)
_pmos_rf33=geomEnclose(OD L68066)

; _pmos_rf33_nw=OD enclose (POLY1_d and ((((OD and OD2) and PIMP ) andnot DNW) and
;  ADTERM))
L58594=geomAndNot(L43437 DNW)
L7319=geomAnd(ADTERM L58594)
L45423=geomAnd(L7319 POLY1_d)
_pmos_rf33_nw=geomEnclose(OD L45423)

; _pmos_rf_nw=OD enclose (POLY1_d and ((((OD andnot OD2) and PIMP ) andnot DNW) and
;  ADTERM))
L94794=geomAnd(L84694 PIMP)
L37892=geomAndNot(L94794 DNW)
L81271=geomAnd(ADTERM L37892)
L97946=geomAnd(L81271 POLY1_d)
_pmos_rf_nw=geomEnclose(OD L97946)

; _pnp2=((BJTDUMMY and (OD andnot OD2) and PIMP and NWELL) area = =4) perimeter = =
;  8
L38716=geomAnd(BJTDUMMY L84694)
L85544=geomAnd(L38716 PIMP)
L57489=geomAnd(L85544 NWELL)
L87538=drc(L57489 area==4)
_pnp2=geomGetLength(L87538 keep==8 contiguous fig)

; _pnp2_3=((BJTDUMMY and (OD and OD2) and PIMP and NWELL) area = =4) perimeter = =
;  8
L85151=geomAnd(BJTDUMMY L86011)
L11633=geomAnd(L85151 PIMP)
L67951=geomAnd(L11633 NWELL)
L66513=drc(L67951 area==4)
_pnp2_3=geomGetLength(L66513 keep==8 contiguous fig)

; _pnp5=((BJTDUMMY and (OD andnot OD2) and PIMP and NWELL) area = =25) perimeter =
;  = 20
L79095=drc(L57489 area==25)
_pnp5=geomGetLength(L79095 keep==20 contiguous fig)

; _pnp5_3=((BJTDUMMY and (OD and OD2) and PIMP and NWELL) area = =25) perimeter = =
;  20
L52472=drc(L67951 area==25)
_pnp5_3=geomGetLength(L52472 keep==20 contiguous fig)

; _pnp10=((BJTDUMMY and (OD andnot OD2) and PIMP and NWELL) area = =100) perimeter
;  = = 40
L54539=drc(L57489 area==100)
_pnp10=geomGetLength(L54539 keep==40 contiguous fig)

; _pnp10_3=((BJTDUMMY and (OD and OD2) and PIMP and NWELL) area = =100) perimeter =
;  = 40
L93108=drc(L67951 area==100)
_pnp10_3=geomGetLength(L93108 keep==40 contiguous fig)

; _rppo1rpo=(RPDUMMY andnot rfd_all) and (((POLY1_d enclose co_po) and RPO and PIMP)
;   andnot HRI)
L16479=geomAnd(L77819 PIMP)
L68808=geomAndNot(L16479 HRI)
_rppo1rpo=geomAnd(L56424 L68808)

; _rppolyhri=(RPDUMMY andnot rfd_all) and ((((POLY1_d enclose co_po) and RPO) and HRI)
;  andnot PIMP)
L33154=geomAnd(HRI L77819)
L80596=geomAndNot(L33154 PIMP)
_rppolyhri=geomAnd(L56424 L80596)

; _rppolyhri_rf=(RPDUMMY and ADTERM) and ((((POLY1_d enclose co_po) and RPO) and HRI)
;  andnot PIMP)
L70626=geomAnd(ADTERM RPDUMMY)
_rppolyhri_rf=geomAnd(L70626 L80596)

; _rppolywo_rf=(RPDUMMY and rfd_all) and (((POLY1_d enclose co_po) and RPO and PIMP)
;   andnot HRI)
_rppolywo_rf=geomAnd(L14291 L68808)

; ndiff_net=(((OD and NIMP) andnot (POLY1_d enclose co_po)) andnot (RPDUMMY or RPDUMMY1))
;  outside DRAIN
L1388=geomAndNot(nod L17717)
L34842=geomOr(RPDUMMY RPDUMMY1)
L74401=geomAndNot(L1388 L34842)
ndiff_net=geomOutside(L74401 DRAIN)

; pdiff_net=((OD and PIMP) andnot (POLY1_d enclose co_po) andnot (RPDUMMY or RPDUMMY1))
;  outside DRAIN
L74378=geomAndNot(pod L17717)
L42298=geomAndNot(L74378 L34842)
pdiff_net=geomOutside(L42298 DRAIN)

; ntap=ndiff_net and NWELL
ntap1=geomAnd(NWELL ndiff_net)
ntap=geomOr( geomButtOrOver(ntap1 CONT) geomButtOrOver(ntap1 pdiff_net) )

; ptap=pdiff_net andnot NWELL
ptap1=geomAndNot(pdiff_net NWELL)
ptap=geomOr( geomButtOrOver(ptap1 CONT) geomButtOrOver(ptap1 ndiff_net) )

; _xjvar_nr36=(((VARDUMMY3 and  NWELL) andnot RFDUMMY0) and ADTERM) cut == 36 pdiff_net
L56517=geomAnd(NWELL VARDUMMY3)
L74762=geomAndNot(L56517 RFDUMMY0)
L77614=geomAnd(ADTERM L74762)
_xjvar_nr36=geomStraddle(L77614 pdiff_net keep==36)

; _xjvar_w40=(((VARDUMMY3 and  NWELL) andnot RFDUMMY0) and ADTERM) andnot _xjvar_nr36
_xjvar_w40=geomAndNot(L77614 _xjvar_nr36)

; b_jvar=(_xjvar_nr36 or _xjvar_w40) size 3
L78857=geomOr(_xjvar_nr36 _xjvar_w40)
L24286=geomSize(L78857 1.0)
b_jvar=geomSize(L24286 2.0)

; M4=((((METAL4_d or METAL4_dummy) andnot METAL4_slot) andnot (RMDUMMY or RMDUMMY4))
;  andnot INDDUMMY) or (ind_w4 andnot ind_minus4)
L72871=geomOr(METAL4_d METAL4_dummy)
L74689=geomAndNot(L72871 METAL4_slot)
L2967=geomOr(RMDUMMY RMDUMMY4)
L50170=geomAndNot(L74689 L2967)
L92066=geomAndNot(L50170 INDDUMMY)
L31491=geomAndNot(ind_w4 ind_minus4)
M4=geomOr(L31491 L92066)

; _spiral_s2_sym_ct6=(INDDUMMY cut M4) outside ind_wide6
L80032=geomStraddle(INDDUMMY M4)
_spiral_s2_sym_ct6=geomOutside(L80032 ind_wide6)

; _spiral_s3_sym_ct6=(INDDUMMY cut M4) cut ind_wide6
_spiral_s3_sym_ct6=geomStraddle(L80032 ind_wide6)

; _capm4=((CTM4 andnot rfd_all) and M4) enclose VIA45
L92178=geomAndNot(CTM4 rfd_all)
L25169=geomAnd(L92178 M4)
_capm4=geomEnclose(L25169 VIA45)

; _spiral_s2_sym6=((INDDUMMY outside M4) cut == 2 (ind_body6 and ind_ring)) outside
;  ind_wide6
L37283=geomOutside(INDDUMMY M4)
L74911=geomStraddle(L37283 L2459 keep==2)
_spiral_s2_sym6=geomOutside(L74911 ind_wide6)

; _spiral_s3_sym6=((INDDUMMY outside M4) cut == 2 (ind_body6 and ind_ring)) cut ind_wide6
_spiral_s3_sym6=geomStraddle(L74911 ind_wide6)

; b_ind6=( _spiral_s2_std6 or _spiral_s2_sym6 or _spiral_s2_sym_ct6 or _spiral_s3_std6
;  or _spiral_s3_sym6 or _spiral_s3_sym_ct6 ) size 1
L45113=geomOr(_spiral_s2_std6 _spiral_s2_sym6)
L40935=geomOr(L45113 _spiral_s2_sym_ct6)
L82733=geomOr(L40935 _spiral_s3_std6)
L98099=geomOr(L82733 _spiral_s3_sym6)
L84773=geomOr(L98099 _spiral_s3_sym_ct6)
b_ind6=geomSize(L84773 1)

; M6=((((METAL6_d or METAL6_dummy) andnot METAL6_slot) andnot (RMDUMMY or RMDUMMY6))
;  andnot INDDUMMY) or (ind_w6 andnot ind_minus6)
L55417=geomOr(METAL6_d METAL6_dummy)
L90048=geomAndNot(L55417 METAL6_slot)
L2969=geomOr(RMDUMMY RMDUMMY6)
L17109=geomAndNot(L90048 L2969)
L58403=geomAndNot(L17109 INDDUMMY)
L96931=geomAndNot(ind_w6 ind_minus6)
M6=geomOr(L58403 L96931)

; ind_plus6=ind_std6 and M6
ind_plus6=geomAnd(M6 ind_std6)

; _npn2=((BJTDUMMY and (OD andnot OD2) and NIMP andnot NWELL and DNW) area = =4) perimeter
;  = = 8
L25962=geomAnd(L38716 NIMP)
L79430=geomAndNot(L25962 NWELL)
L68127=geomAnd(DNW L79430)
L2639=drc(L68127 area==4)
_npn2=geomGetLength(L2639 keep==8 contiguous fig)

; _npn5=((BJTDUMMY and (OD andnot OD2) and NIMP andnot NWELL and DNW) area = =25) perimeter
;  = = 20
L56568=drc(L68127 area==25)
_npn5=geomGetLength(L56568 keep==20 contiguous fig)

; _npn10=((BJTDUMMY and (OD andnot OD2) and NIMP andnot NWELL and DNW) area = =100)
;  perimeter = = 40
L18284=drc(L68127 area==100)
_npn10=geomGetLength(L18284 keep==40 contiguous fig)

; _pmos_rf=(OD enclose (POLY1_d and ((((OD andnot OD2) and PIMP ) and DNW) and ADTERM)))
;  outside  VARDUMMY0
L69287=geomAnd(DNW L94794)
L56918=geomAnd(ADTERM L69287)
L2682=geomAnd(L56918 POLY1_d)
L23280=geomEnclose(OD L2682)
_pmos_rf=geomOutside(L23280 VARDUMMY0)

; b_mos=( _nmos_rf or _nmos_rf33 or _pmos_rf or _pmos_rf33 or _pmos_rf33_nw or _pmos_rf_nw
;  ) size 5.2
L69475=geomOr(_nmos_rf _nmos_rf33)
L27917=geomOr(L69475 _pmos_rf)
L29528=geomOr(L27917 _pmos_rf33)
L12038=geomOr(L29528 _pmos_rf33_nw)
L19750=geomOr(L12038 _pmos_rf_nw)
L3757=geomSize(L19750 1.0)
b_mos=geomSize(L3757 4.2)

; m2x56=M2 andnot b_mos
m2x56=geomAndNot(M2 b_mos)

; m3x6=M3 andnot b_mos
m3x6=geomAndNot(M3 b_mos)

; m2t56=M2 and (b_mos size .001)
L13362=geomSize(b_mos .001)
m2t56=geomAnd(L13362 M2)

; m2_tcon56=m2t56 andnot b_mos
m2_tcon56=geomAndNot(m2t56 b_mos)

; m3t6=M3 and (b_mos size .001)
m3t6=geomAnd(L13362 M3)

; m3_tcon6=m3t6 andnot b_mos
m3_tcon6=geomAndNot(m3t6 b_mos)

; w_fac=((((((VARDUMMY3 and NWELL) andnot RFDUMMY0) and ADTERM) and pdiff_net) growEdges
;  .1) andnot pdiff_net) outside M1
L31657=geomAnd(L77614 pdiff_net)
L30648=geomSize(L31657 .1 edges)
L63064=geomAndNot(L30648 pdiff_net)
w_fac=geomOutside(L63064 M1)

; M5=((((METAL5_d or METAL5_dummy) andnot METAL5_slot) andnot (RMDUMMY or RMDUMMY5))
;  andnot INDDUMMY) or (ind_w5 and not ind_minus5)
L42375=geomOr(METAL5_d METAL5_dummy)
L43814=geomAndNot(L42375 METAL5_slot)
L2968=geomOr(RMDUMMY RMDUMMY5)
L86921=geomAndNot(L43814 L2968)
L31401=geomAndNot(L86921 INDDUMMY)
L97074=geomNot(ind_minus5)
L99154=geomAnd(L97074 ind_w5)
M5=geomOr(L31401 L99154)

; _capm5=((CTM5 andnot rfd_all) and M5) enclose VIA56
L20655=geomAndNot(CTM5 rfd_all)
L43309=geomAnd(L20655 M5)
_capm5=geomEnclose(L43309 VIA56)

; _capm5_shield=(((CTM5 and ADTERM) and M4) and M5) enclose VIA56
L19361=geomAnd(ADTERM CTM5)
L29092=geomAnd(L19361 M4)
L14967=geomAnd(L29092 M5)
_capm5_shield=geomEnclose(L14967 VIA56)

; b_cap6=( _capm5_shield or _capm5 ) size 5 
L82555=geomOr(_capm5 _capm5_shield)
L80956=geomSize(L82555 1.0)
b_cap6=geomSize(L80956 4.0)

; _capm5_wos=(((CTM5 and ADTERM) andnot M4) and M5) enclose VIA56
L33929=geomAndNot(L19361 M4)
L46827=geomAnd(L33929 M5)
_capm5_wos=geomEnclose(L46827 VIA56)

; b_cw6=_capm5_wos size 9.3
L38572=geomSize(_capm5_wos 1.0)
b_cw6=geomSize(L38572 8.3)

; dev6_ci=b_cap6 or b_cw6 or b_ind6
L36579=geomOr(b_cap6 b_cw6)
dev6_ci=geomOr(L36579 b_ind6)

; m4x6=M4 andnot dev6_ci
m4x6=geomAndNot(M4 dev6_ci)

; m5x6=M5 andnot dev6_ci
m5x6=geomAndNot(M5 dev6_ci)

; m6x6=M6 andnot dev6_ci
m6x6=geomAndNot(M6 dev6_ci)

; m4t6=M4 and (dev6_ci size .001)
L70530=geomSize(dev6_ci .001)
m4t6=geomAnd(L70530 M4)

; m4_tcon6=m4t6 andnot dev6_ci
m4_tcon6=geomAndNot(m4t6 dev6_ci)

; m5t6=M5 and (dev6_ci size .001)
m5t6=geomAnd(L70530 M5)

; m5_tcon6=m5t6 andnot dev6_ci
m5_tcon6=geomAndNot(m5t6 dev6_ci)

; m6t6=M6 and (dev6_ci size .001)
m6t6=geomAnd(L70530 M6)

; m6_tcon6=m6t6 andnot dev6_ci
m6_tcon6=geomAndNot(m6t6 dev6_ci)

; _nmos2v=(((((((OD and NIMP) and POLY1_d) andnot NWELL) andnot OD2) andnot NTN) andnot
;  DNW) andnot VTM_N) andnot VARDUMMY0
L33869=geomAndNot(L36440 NTN)
L22208=geomAndNot(L33869 DNW)
L33744=geomAndNot(L22208 VTM_N)
_nmos2v=geomAndNot(L33744 VARDUMMY0)

; _nmos2v_dnw=(((((((OD and NIMP) and POLY1_d) andnot NWELL) andnot OD2) andnot NTN)
;  and DNW) andnot VTM_N) andnot ADTERM
L99243=geomAnd(DNW L33869)
L62777=geomAndNot(L99243 VTM_N)
_nmos2v_dnw=geomAndNot(L62777 ADTERM)

; _nmos3v=(((((((OD and NIMP) and POLY1_d) andnot NWELL) and OD2) andnot NTN) andnot
;  DNW) andnot VTM_N) andnot VARDUMMY0
L99860=geomAndNot(L42541 NTN)
L98665=geomAndNot(L99860 DNW)
L28204=geomAndNot(L98665 VTM_N)
_nmos3v=geomAndNot(L28204 VARDUMMY0)

; _nmos3v_dnw=(((((((OD and NIMP) and POLY1_d) andnot NWELL) and OD2) andnot NTN) and
;  DNW) andnot VTM_N) andnot ADTERM
L19106=geomAnd(DNW L99860)
L37669=geomAndNot(L19106 VTM_N)
_nmos3v_dnw=geomAndNot(L37669 ADTERM)

; b_bjt=( _npn2 or _npn5 or _npn10 or _pnp2 or _pnp2_3 or _pnp5 or _pnp5_3 or _pnp10
;  or _pnp10_3 ) size 5
L44528=geomOr(_npn2 _npn5)
L27744=geomOr(L44528 _npn10)
L53506=geomOr(L27744 _pnp2)
L87487=geomOr(L53506 _pnp2_3)
L93831=geomOr(L87487 _pnp5)
L81091=geomOr(L93831 _pnp5_3)
L85202=geomOr(L81091 _pnp10)
L59778=geomOr(L85202 _pnp10_3)
L76989=geomSize(L59778 1.0)
b_bjt=geomSize(L76989 4.0)

; ind_std_noh6=((ind_std6 outside (outerhole ((ind_body6 or (notRectangle (INDDUMMY
;  and METAL5_d))) upDown 14))) andnot (ind_body6 or ind_minus6)) cut > 2 ind_corners6
L11143=geomHoles(L30849)
L1558=geomOutside(ind_std6 L11143)
L10895=geomOr(ind_body6 ind_minus6)
L71366=geomAndNot(L1558 L10895)
ind_std_noh6=geomStraddle(L71366 ind_corners6 keep>2)

; ind_holea6=(outerhole ((ind_body6 or (notRectangle (INDDUMMY and METAL5_d))) upDown
;  14)) or ind_std_noh6
ind_holea6=geomOr(L11143 ind_std_noh6)

; ind_hole_bad6=((ind_holea6 andnot ind_std6) vertex ==11) downup 25
L59098=geomAndNot(ind_holea6 ind_std6)
L92379=geomGetVertex(L59098 keep==11)
L23262=geomSize(L92379 -1.0)
L85068=geomSize(L23262 -24.0)
L58914=geomSize(L85068 1.0)
ind_hole_bad6=geomSize(L58914 24.0)

; ind_hole6=(ind_holea6 outside ind_hole_bad6) or ind_hole_bad6
L22528=geomOutside(ind_holea6 ind_hole_bad6)
ind_hole6=geomOr(L22528 ind_hole_bad6)

; _endio_3=(( ( (((((OD and ESD3DUMMY) size -0.2) and NIMP) and RPO) andnot NWELL)
;  andnot 
;   ((ESD3DUMMY and POLY1_d) size 0.2))
; size -0.8) size 0.6)
L4557=geomAnd(ESD3DUMMY OD)
L68777=geomSize(L4557 -0.2)
L69388=geomAnd(L68777 NIMP)
L82018=geomAnd(L69388 RPO)
L94927=geomAndNot(L82018 NWELL)
L30676=geomAnd(ESD3DUMMY POLY1_d)
L2463=geomSize(L30676 0.2)
L53978=geomAndNot(L94927 L2463)
L80190=geomSize(L53978 -0.8)
_endio_3=geomSize(L80190 0.6)

; res_ge2=(((((RPDUMMY or RPDUMMY1) size .005) and PO) or (((RPDUMMY or RPDUMMY1) size
;  .005) and OD)) andnot (RPDUMMY or RPDUMMY1)) segment > = 2
L46401=geomSize(L34842 .005)
L69903=geomAnd(L46401 PO)
L69861=geomAnd(L46401 OD)
L16236=geomOr(L69861 L69903)
L53953=geomAndNot(L16236 L34842)
res_ge2=geomGetLength(L53953 keep>=2 fig)

; _rnod_m=RPDUMMY1 and ((((OD and NIMP) outside RPO) andnot NWELL) overlap res_ge2)
L57817=geomOutside(nod RPO)
L54128=geomAndNot(L57817 NWELL)
L13178=geomOverlap(L54128 res_ge2)
_rnod_m=geomAnd(L13178 RPDUMMY1)

; _rnodw_m=RPDUMMY1 and ((((OD and NIMP) outside RPO) andnot NWELL) noTouch res_ge2)
L74243=geomAvoiding(L54128 res_ge2)
_rnodw_m=geomAnd(L74243 RPDUMMY1)

; _rpod_m=RPDUMMY1 and ((((OD and PIMP) noTouch RPO) and NWELL) overlap res_ge2)
L95468=geomAvoiding(pod RPO)
L38605=geomAnd(L95468 NWELL)
L16328=geomOverlap(L38605 res_ge2)
_rpod_m=geomAnd(L16328 RPDUMMY1)

; _rpodw_m=RPDUMMY1 and ((((OD and PIMP) noTouch RPO) and NWELL) noTouch res_ge2)
L55263=geomAvoiding(L38605 res_ge2)
_rpodw_m=geomAnd(L55263 RPDUMMY1)

; _rnod=RPDUMMY and (((((OD and NIMP) outside RPO) andnot NWELL) overlap res_ge2) andnot
;  RPDUMMY1)
L2559=geomAndNot(L13178 RPDUMMY1)
_rnod=geomAnd(L2559 RPDUMMY)

; _rnodw=RPDUMMY and (((((OD and NIMP) outside RPO) andnot NWELL) noTouch res_ge2)
;  andnot RPDUMMY1)
L84827=geomAndNot(L74243 RPDUMMY1)
_rnodw=geomAnd(L84827 RPDUMMY)

; _rnpo1=((RPDUMMY andnot rfd_all) and (((POLY1_d enclose co_po) andnot RPO) and NIMP))
;  butt res_ge2
L17935=geomAnd(L10496 NIMP)
L90473=geomAnd(L17935 L56424)
_rnpo1=geomButtOnly(L90473 res_ge2)

; _rnpo1w=((RPDUMMY andnot rfd_all) and (((POLY1_d enclose co_po) andnot RPO) and NIMP))
;  noTouch res_ge2
_rnpo1w=geomAvoiding(L90473 res_ge2)

; _rpod=RPDUMMY and (((((OD and PIMP) noTouch RPO) and NWELL) overlap res_ge2) andnot
;  RPDUMMY1)
L81179=geomAndNot(L16328 RPDUMMY1)
_rpod=geomAnd(L81179 RPDUMMY)

; _rpodw=RPDUMMY and (((((OD and PIMP) noTouch RPO) and NWELL) noTouch res_ge2) andnot
;  RPDUMMY1)
L63648=geomAndNot(L55263 RPDUMMY1)
_rpodw=geomAnd(L63648 RPDUMMY)

; _rppo1=((RPDUMMY andnot rfd_all) and (((POLY1_d enclose co_po) andnot RPO) and PIMP))
;  butt res_ge2
L81181=geomAnd(L56424 L77517)
_rppo1=geomButtOnly(L81181 res_ge2)

; _rppo1w=((RPDUMMY andnot rfd_all) and (((POLY1_d enclose co_po) andnot RPO) and PIMP))
;  noTouch res_ge2
_rppo1w=geomAvoiding(L81181 res_ge2)

; b_res=( _rnod_m or _rnodrpo_m or _rnodw_m or _rnwod_m or 
; _rpod_m or _rpodrpo_m  or _rpodw_m or 
; _rppoly_rf or _rppolyhri_rf or _rppolywo_rf
; nrpop_dis or rnpolys_r_dis or rnpolyl_r_dis or prpop_dis or
; lrpop_dis or rppolyl_r_dis rppolys_r_dis ) size 1
L42450=geomOr(_rnod_m _rnodrpo_m)
L58163=geomOr(L42450 _rnodw_m)
L93629=geomOr(L58163 _rnwod_m)
L83020=geomOr(L93629 _rpod_m)
L46743=geomOr(L83020 _rpodrpo_m)
L63438=geomOr(L46743 _rpodw_m)
L17603=geomOr(L63438 _rppoly_rf)
L44545=geomOr(L17603 _rppolyhri_rf)
L9013=geomOr(L44545 _rppolywo_rf)
b_res=geomSize(L9013 1)

; dev_ply=b_mosc or b_mos or b_res
L23336=geomOr(b_mos b_mosc)
dev_ply=geomOr(L23336 b_res)

; dev_ply_dis= ; nrpop_dis or rnpolys_r_dis or rnpolyl_r_dis or prpop_dis or
; lrpop_dis or rppolyl_r_dis rppolys_r_dis ) size 1
dev_ply_dis1 = geomOr( nrpop_dis rnpolys_r_dis )
dev_ply_dis2 = geomOr( dev_ply_dis1 rnpolyl_r_dis )
dev_ply_dis3 = geomOr( dev_ply_dis2 prpop_dis )
dev_ply_dis4 = geomOr( dev_ply_dis3 lrpop_dis )
dev_ply_dis5 = geomOr( dev_ply_dis4 rppolyl_r_dis )
dev_ply_dis = geomOr( dev_ply_dis5 rppolys_r_dis )

;plyx=po_net andnot dev_ply
plyx=geomAndNot( geomAndNot(po_net dev_ply) dev_ply_dis)

; plyt=po_net and (dev_ply size .001)
L77391=geomSize(dev_ply .001)
plyt=geomAnd(L77391 po_net)

; ply_tcon=plyt andnot dev_ply
ply_tcon=geomAndNot(plyt dev_ply)

; dev6_m1=b_bjt or b_jvar or b_mosc or b_mos or b_res or b_ind6 or b_cw6
L77208=geomOr(b_bjt b_jvar)
L19588=geomOr(L77208 b_mosc)
L63150=geomOr(L19588 b_mos)
L75133=geomOr(L63150 b_res)
L65296=geomOr(L75133 b_ind6)
dev6_m1=geomOr(L65296 b_cw6)

; m1x6=M1 andnot dev6_m1
m1x6=geomAndNot(M1 dev6_m1)

; m1t6=M1 and (dev6_m1 size .001)
L768=geomSize(dev6_m1 .001)
m1t6=geomAnd(L768 M1)

; m1_tcon6=m1t6 andnot dev6_m1
m1_tcon6=geomAndNot(m1t6 dev6_m1)

; ind_rada6=( ( ( ( (((INDDUMMY and METAL6_d) drcSepNotch < 6) butt ind_hole6 ) or
; (((INDDUMMY and METAL5_d) outside METAL4_d) butt ind_hole6)
; grow90Edges .1 ) and ind_hole6)
; grow90Edges 1 ) andnot ind_hole6 ) area > 1
L56458=drc(L16286 0<sepNotch<6 opposite parallel)
L83469=geomButtOnly(L56458 ind_hole6)
L36748=geomOutside(L17247 METAL4_d)
L55407=geomButtOnly(L36748 ind_hole6)
L74372=geomOr(L55407 L83469)
L95417=geomGetAngledEdge(L74372 keep==0)
L15606=geomSize(L95417 .1 edges)
L34571=geomAnd(L15606 ind_hole6)
L41564=geomGetAngledEdge(L34571 keep==0)
L61273=geomSize(L41564 1 edges)
L28897=geomAndNot(L61273 ind_hole6)
ind_rada6=drc(L28897 area>1)

; ind_rad6=(rectangle (((( ind_rada6 drcSep2 < 301 (ind_hole6 size .01 andnot ind_hole6))
;  and ind_hole6) noTouch ind_ring) downUp .5 )) area > 359
L22202=geomSize(ind_hole6 .01)
L97342=geomAndNot(L22202 ind_hole6)
L24636=drc(ind_rada6 L97342 0<sep<301 opposite parallel shielded)
L74134=geomAnd(L24636 ind_hole6)
L21413=geomAvoiding(L74134 ind_ring)
L85921=geomSize(L21413 -.5)
L10567=geomSize(L85921 .5)
L41947=geomGetVertex(L10567 keep==4)
L61062=drc(L41947 width<0.001)
L91068=geomAvoiding(L41947 L61062)
ind_rad6=drc(L91068 area>359)

; ind_rada_std6=( ind_rad6 growEdges 1) and METAL5_d
L21809=geomSize(ind_rad6 1 edges)
ind_rada_std6=geomAnd(L21809 METAL5_d)


geomConnect(
    via(m6_tcon6 m6t6 m6x6)
    via(v5c m6t6 CTM5)
    via(v56 m6t6 m5t6)
    via(v56 m6x6 m5x6)
    via(m5_tcon6 m5t6 m5x6)
    via(v4c m5t6 CTM4)
    via(v45 m5t6 m4t6)
    via(v45 m5x6 m4x6)
    via(m4_tcon6 m4t6 m4x6)
    via(v3c m4t6 CTM3)
    via(v34 m4t6 m3t6)
    via(v34 m4x6 m3x6)
    via(m3_tcon6 m3t6 m3x6)
    via(v2c m3t6 CTM2)
    via(v23 m3t6 m2t56)
    via(v23 m3x6 m2x56)
    via(m2_tcon56 m2t56 m2x56)
    via(VIA12 m2t56 m1t6)
    via(VIA12 m2x56 m1x6)
    via(m1_tcon6 m1t6 m1x6)
    via(co_po m1t6 POLY2)
    via(co_po m1t6 plyt)
    via(co_po m1x6 plyx)
    via(co_po m1x6 POLY2)
    via(ply_tcon plyt plyx)
    buttOrOver(m6t6 ind_plus6)
    buttOrOver(m6t6 ind_minus6)
    buttOrOver(ndiff_net pdiff_net)
    buttOrOver(ntap ndiff_net)
    buttOrOver(ptap pdiff_net)
    via(co_ndiff m1t6 d_diff)
    via(co_ndiff m1t6 ndiff_net)
    via(co_ndiff m1x6 d_diff)
    via(co_ndiff m1x6 ndiff_net)
    via(co_pdiff m1t6 d_diff)
    via(co_pdiff m1t6 pdiff_net)
    via(co_pdiff m1x6 d_diff)
    via(co_pdiff m1x6 pdiff_net)
    label(m6t6_text m6t6)
    label(m6t6_pintext m6t6)
    label(m6x6_text m6x6)
    label(m6x6_pintext m6x6)
    label(m5t6_text m5t6)
    label(m5t6_pintext m5t6)
    label(m5x6_text m5x6)
    label(m5x6_pintext m5x6)
    label(m4t6_text m4t6)
    label(m4t6_pintext m4t6)
    label(m4x6_text m4x6)
    label(m4x6_pintext m4x6)
    label(m3t6_text m3t6)
    label(m3t6_pintext m3t6)
    label(m3x6_text m3x6)
    label(m3x6_pintext m3x6)
    label(m2t56_text m2t56)
    label(m2t56_pintext m2t56)
    label(m2x56_text m2x56)
    label(m2x56_pintext m2x56)
    label(m1t6_text m1t6)
    label(m1t6_pintext m1t6)
    label(m1x6_text m1x6)
    label(m1x6_pintext m1x6)
    label(plyt_text plyt)
    label(plyt_pintext plyt)
    label(plyx_text plyx)
    label(plyx_pintext plyx)
    label(ind_plus6_text ind_plus6)
    label(ind_plus6_pintext ind_plus6)
    label(ind_minus6_text ind_minus6)
    label(ind_minus6_pintext ind_minus6)
)

saveInterconnect((m6t6 "METAL6"))
saveInterconnect((m6x6 "METAL6"))
saveInterconnect((m5t6 "METAL5"))
saveInterconnect((m5x6 "METAL5"))
saveInterconnect((m4t6 "METAL4"))
saveInterconnect((m4x6 "METAL4"))
saveInterconnect((m3t6 "METAL3"))
saveInterconnect((m3x6 "METAL3"))
saveInterconnect((m2t56 "METAL2"))
saveInterconnect((m2x56 "METAL2"))
saveInterconnect((m1t6 "METAL1"))
saveInterconnect((m1x6 "METAL1"))
saveInterconnect((plyt "POLY1"))
saveInterconnect((ndiff_net "DIFF"))
saveInterconnect((pdiff_net "DIFF"))
saveInterconnect((CTM5 "CTM5"))
saveInterconnect((CTM4 "CTM4"))
saveInterconnect((CTM3 "CTM3"))
saveInterconnect((CTM2 "CTM2"))
saveInterconnect((POLY2 "POLY2"))
saveInterconnect((plyx "POLY1"))
saveInterconnect((ind_plus6 "INDDUMMY"))
saveInterconnect((ind_minus6 "INDDUMMY"))
saveInterconnect((d_diff "DIFF"))
saveInterconnect((DNW "DNW"))
saveInterconnect((nw_net "NWELL"))

if( avSwitch("Skip_Soft_Connect_Checks" ) then
 geomStamp(DNW ntap)
 geomStamp(nw_net ntap)
 geomStamp(psub_term ptap)
 geomStamp(psub ptap)
 geomStamp( poly_term psub )
 geomStamp( poly_psub_via psub )
 geomStamp( poly_nw_via nw_net )
else if( avSwitch("Floating_Well_Checks" ) then
  geomStamp(DNW ntap error)
  geomStamp(nw_net ntap error)
  geomStamp(psub_term ptap error)
  geomStamp(psub ptap error)
  geomStamp( poly_term psub error)
  geomStamp( poly_psub_via psub error)
  geomStamp( poly_nw_via nw_net error)
 else
  geomStamp(DNW ntap multStamp floating)
  geomStamp(nw_net ntap multStamp floating)
  geomStamp(psub_term ptap multStamp floating)
  geomStamp(psub ptap multStamp floating)
  geomStamp( poly_term psub multStamp floating )
  geomStamp( poly_psub_via psub  multStamp floating )
  geomStamp( poly_nw_via nw_net multStamp floating )
 ); if
); if


extractMOS("N" _nmos2v plyx("G") ndiff_net("S" "D") psub("B") spiceModel("nch")
    cellView("nmos2v ivpcell tsmc18rf"))
area=measureParameter(area (_nmos2v))
width=measureParameter(length (_nmos2v butting ndiff_net) 0.5)
w=calculateParameter(width *1.0e-6)
attachParameter(w "w" _nmos2v)
l=calculateParameter(area / width * 1.0e-6)
attachParameter(l "l" _nmos2v)
areaS     = measureParameter( area (ndiff_net) 1e-12 )
periS     = measureParameter( perimeter (ndiff_net) 1e-6 )
nrSD      = calculateParameter(((areaS/w)/w))
attachParameter( areaS ("ad" "D") ("as" "S") _nmos2v shared)
attachParameter( periS ("pd" "D") ("ps" "S") _nmos2v shared)
attachParameter( nrSD  ("nrd" "D") ("nrs" "S") _nmos2v shared)

if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nmos2v "N _nmos2v nmos2v nch"))

extractMOS("NL" _nmosnvt2v plyx("G") ndiff_net("S" "D") psub("B")
    spiceModel("nanch") cellView("nmosnvt2v ivpcell tsmc18rf"))
area=measureParameter(area (_nmosnvt2v))
width=measureParameter(length (_nmosnvt2v butting ndiff_net) 0.5)
w=calculateParameter(width *1.0e-6)
attachParameter(w "w" _nmosnvt2v)
l=calculateParameter(area / width * 1.0e-6)
attachParameter(l "l" _nmosnvt2v)
areaS     = measureParameter( area (ndiff_net) 1e-12 )
periS     = measureParameter( perimeter (ndiff_net) 1e-6 )
nrSD      = calculateParameter(((areaS/w)/w))
attachParameter( areaS ("ad" "D") ("as" "S") _nmosnvt2v shared)
attachParameter( periS ("pd" "D") ("ps" "S") _nmosnvt2v shared)
attachParameter( nrSD  ("nrd" "D") ("nrs" "S") _nmosnvt2v shared)

if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nmosnvt2v "NL _nmosnvt2v nmosnvt2v nanch"))

extractMOS("nmos3v" _nmos3v plyx("G") ndiff_net("S" "D") psub("B")
    spiceModel("nch3") cellView("nmos3v ivpcell tsmc18rf"))
area=measureParameter(area (_nmos3v))
width=measureParameter(length (_nmos3v butting ndiff_net) 0.5)
w=calculateParameter(width *1.0e-6)
attachParameter(w "w" _nmos3v)
l=calculateParameter(area / width * 1.0e-6)
attachParameter(l "l" _nmos3v)
areaS     = measureParameter( area (ndiff_net) 1e-12 )
periS     = measureParameter( perimeter (ndiff_net) 1e-6 )
nrSD      = calculateParameter(((areaS/w)/w))
attachParameter( areaS ("ad" "D") ("as" "S") _nmos3v shared)
attachParameter( periS ("pd" "D") ("ps" "S") _nmos3v shared)
attachParameter( nrSD  ("nrd" "D") ("nrs" "S") _nmos3v shared)

if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nmos3v "nmos3v _nmos3v nmos3v nch3"))

extractMOS("NN" _nmosnvt3v plyx("G") ndiff_net("S" "D") psub("B")
    spiceModel("nanch3") cellView("nmosnvt3v ivpcell tsmc18rf"))
area=measureParameter(area (_nmosnvt3v))
width=measureParameter(length (_nmosnvt3v butting ndiff_net) 0.5)
w=calculateParameter(width *1.0e-6)
attachParameter(w "w" _nmosnvt3v)
l=calculateParameter(area / width * 1.0e-6)
attachParameter(l "l" _nmosnvt3v)
areaS     = measureParameter( area (ndiff_net) 1e-12 )
periS     = measureParameter( perimeter (ndiff_net) 1e-6 )
nrSD      = calculateParameter(((areaS/w)/w))
attachParameter( areaS ("ad" "D") ("as" "S") _nmosnvt3v shared)
attachParameter( periS ("pd" "D") ("ps" "S") _nmosnvt3v shared)
attachParameter( nrSD  ("nrd" "D") ("nrs" "S") _nmosnvt3v shared)

if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nmosnvt3v "NN _nmosnvt3v nmosnvt3v nanch3"))

extractMOS("N1" _nmos2v_dnw plyx("G") ndiff_net("S" "D") psub("B")
    spiceModel("nch") cellView("nmos2vdnw ivpcell tsmc18rf"))
area=measureParameter(area (_nmos2v_dnw))
width=measureParameter(length (_nmos2v_dnw butting ndiff_net) 0.5)
w=calculateParameter(width *1.0e-6)
attachParameter(w "w" _nmos2v_dnw)
l=calculateParameter(area / width * 1.0e-6)
attachParameter(l "l" _nmos2v_dnw)
areaS     = measureParameter( area (ndiff_net) 1e-12 )
periS     = measureParameter( perimeter (ndiff_net) 1e-6 )
nrSD      = calculateParameter(((areaS/w)/w))
attachParameter( areaS ("ad" "D") ("as" "S") _nmos2v_dnw shared)
attachParameter( periS ("pd" "D") ("ps" "S") _nmos2v_dnw shared)
attachParameter( nrSD  ("nrd" "D") ("nrs" "S") _nmos2v_dnw shared)

if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nmos2v_dnw "N1 _nmos2v_dnw nmos2vdnw nch"))

extractMOS("NA" _nmosmvt2v plyx("G") ndiff_net("S" "D") psub("B")
    spiceModel("mench") cellView("nmosmvt2v ivpcell tsmc18rf"))
area=measureParameter(area (_nmosmvt2v))
width=measureParameter(length (_nmosmvt2v butting ndiff_net) 0.5)
w=calculateParameter(width *1.0e-6)
attachParameter(w "w" _nmosmvt2v)
l=calculateParameter(area / width * 1.0e-6)
attachParameter(l "l" _nmosmvt2v)
areaS     = measureParameter( area (ndiff_net) 1e-12 )
periS     = measureParameter( perimeter (ndiff_net) 1e-6 )
nrSD      = calculateParameter(((areaS/w)/w))
attachParameter( areaS ("ad" "D") ("as" "S") _nmosmvt2v shared)
attachParameter( periS ("pd" "D") ("ps" "S") _nmosmvt2v shared)
attachParameter( nrSD  ("nrd" "D") ("nrs" "S") _nmosmvt2v shared)

if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nmosmvt2v "NA _nmosmvt2v nmosmvt2v mench"))

extractMOS("N2" _nmos3v_dnw plyx("G") ndiff_net("S" "D") psub("B")
    spiceModel("nch3") cellView("nmos3vdnw ivpcell tsmc18rf"))
area=measureParameter(area (_nmos3v_dnw))
width=measureParameter(length (_nmos3v_dnw butting ndiff_net) 0.5)
w=calculateParameter(width *1.0e-6)
attachParameter(w "w" _nmos3v_dnw)
l=calculateParameter(area / width * 1.0e-6)
attachParameter(l "l" _nmos3v_dnw)
areaS     = measureParameter( area (ndiff_net) 1e-12 )
periS     = measureParameter( perimeter (ndiff_net) 1e-6 )
nrSD      = calculateParameter(((areaS/w)/w))
attachParameter( areaS ("ad" "D") ("as" "S") _nmos3v_dnw shared)
attachParameter( periS ("pd" "D") ("ps" "S") _nmos3v_dnw shared)
attachParameter( nrSD  ("nrd" "D") ("nrs" "S") _nmos3v_dnw shared)

if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nmos3v_dnw "N2 _nmos3v_dnw nmos3vdnw nch3"))

extractMOS("NB" _nmosmvt3v plyx("G") ndiff_net("S" "D") psub("B")
    spiceModel("mench3") cellView("nmosmvt3v ivpcell tsmc18rf"))
area=measureParameter(area (_nmosmvt3v))
width=measureParameter(length (_nmosmvt3v butting ndiff_net) 0.5)
w=calculateParameter(width *1.0e-6)
attachParameter(w "w" _nmosmvt3v)
l=calculateParameter(area / width * 1.0e-6)
attachParameter(l "l" _nmosmvt3v)
areaS     = measureParameter( area (ndiff_net) 1e-12 )
periS     = measureParameter( perimeter (ndiff_net) 1e-6 )
nrSD      = calculateParameter(((areaS/w)/w))
attachParameter( areaS ("ad" "D") ("as" "S") _nmosmvt3v shared)
attachParameter( periS ("pd" "D") ("ps" "S") _nmosmvt3v shared)
attachParameter( nrSD  ("nrd" "D") ("nrs" "S") _nmosmvt3v shared)

if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nmosmvt3v "NB _nmosmvt3v nmosmvt3v mench3"))

extractMOS("P" _pmos2v plyx("G") pdiff_net("S" "D") nw_net("B")
    spiceModel("pch") cellView("pmos2v ivpcell tsmc18rf"))
area=measureParameter(area (_pmos2v))
width=measureParameter(length (_pmos2v butting pdiff_net) 0.5)
w=calculateParameter(width *1.0e-6)
attachParameter(w "w" _pmos2v)
l=calculateParameter(area / width * 1.0e-6)
attachParameter(l "l" _pmos2v)
areaS     = measureParameter( area (pdiff_net) 1e-12 )
periS     = measureParameter( perimeter (pdiff_net) 1e-6 )
nrSD      = calculateParameter(((areaS/w)/w))
attachParameter( areaS ("ad" "D") ("as" "S") _pmos2v shared)
attachParameter( periS ("pd" "D") ("ps" "S") _pmos2v shared)
attachParameter( nrSD  ("nrd" "D") ("nrs" "S") _pmos2v shared)

if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pmos2v "P _pmos2v pmos2v pch"))

extractMOS("pmos3v" _pmos3v plyx("G") pdiff_net("S" "D") nw_net("B")
    spiceModel("pch3") cellView("pmos3v ivpcell tsmc18rf"))
area=measureParameter(area (_pmos3v))
width=measureParameter(length (_pmos3v butting pdiff_net) 0.5)
w=calculateParameter(width *1.0e-6)
attachParameter(w "w" _pmos3v)
l=calculateParameter(area / width * 1.0e-6)
attachParameter(l "l" _pmos3v)
areaS     = measureParameter( area (pdiff_net) 1e-12 )
periS     = measureParameter( perimeter (pdiff_net) 1e-6 )
nrSD      = calculateParameter(((areaS/w)/w))
attachParameter( areaS ("ad" "D") ("as" "S") _pmos3v shared)
attachParameter( periS ("pd" "D") ("ps" "S") _pmos3v shared)
attachParameter( nrSD  ("nrd" "D") ("nrs" "S") _pmos3v shared)

if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pmos3v "pmos3v _pmos3v pmos3v pch3"))

extractMOS("PA" _pmosmvt2v plyx("G") pdiff_net("S" "D") nw_net("B")
    spiceModel("mepch") cellView("pmosmvt2v ivpcell tsmc18rf"))
area=measureParameter(area (_pmosmvt2v))
width=measureParameter(length (_pmosmvt2v butting pdiff_net) 0.5)
w=calculateParameter(width *1.0e-6)
attachParameter(w "w" _pmosmvt2v)
l=calculateParameter(area / width * 1.0e-6)
attachParameter(l "l" _pmosmvt2v)
areaS     = measureParameter( area (pdiff_net) 1e-12 )
periS     = measureParameter( perimeter (pdiff_net) 1e-6 )
nrSD      = calculateParameter(((areaS/w)/w))
attachParameter( areaS ("ad" "D") ("as" "S") _pmosmvt2v shared)
attachParameter( periS ("pd" "D") ("ps" "S") _pmosmvt2v shared)
attachParameter( nrSD  ("nrd" "D") ("nrs" "S") _pmosmvt2v shared)

if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pmosmvt2v "PA _pmosmvt2v pmosmvt2v mepch"))

extractDevice("nmos_rf" _nmos_rf d_diff("D") plyt("G") ndiff_net("S") psub("B")
    spiceModel("nmos_rf") cellView("rfnmos2v ivpcell tsmc18rf"))
 NR = measureParameter( figCount ( _nmos_rf enclosing rfgate ))
 all_l = measureParameter( length ( _nmos_rf coincident rfgate ) 0.5 )
 LR = calculateParameter( (( all_l / NR ) * 1e-6) )
 area = measureParameter( area ( _nmos_rf over rfgate ) )
 WR = calculateParameter( (( area / all_l ) * 1e-6) )
 attachParameter(WR "wr" _nmos_rf )
 attachParameter(LR "lr" _nmos_rf )
 attachParameter(NR "nr" _nmos_rf )
 saveProperty( _nmos_rf "model" "nmos_rf")
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nmos_rf "nmos_rf _nmos_rf  rfnmos2v nmos_rf"))

extractDevice("nmos_rf33" _nmos_rf33 d_diff("D") plyt("G") ndiff_net("S")
    psub("B") spiceModel("nmos_rf33") cellView("rfnmos3v ivpcell tsmc18rf"))
 NR = measureParameter( figCount ( _nmos_rf33 enclosing rfgate ))
 all_l = measureParameter( length ( _nmos_rf33 coincident rfgate ) 0.5 )
 LR = calculateParameter( (( all_l / NR ) * 1e-6) )
 area = measureParameter( area ( _nmos_rf33 over rfgate ) )
 WR = calculateParameter( (( area / all_l ) * 1e-6) )
 attachParameter(WR "wr" _nmos_rf33 )
 attachParameter(LR "lr" _nmos_rf33 )
 attachParameter(NR "nr" _nmos_rf33 )
 saveProperty( _nmos_rf33 "model" "nmos_rf33")
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nmos_rf33 "nmos_rf33 _nmos_rf33  rfnmos3v nmos_rf33"))

extractDevice("pmos_rf" _pmos_rf d_diff("D") plyt("G") pdiff_net("S") DNW("B")
    spiceModel("pmos_rf") cellView("rfpmos2v ivpcell tsmc18rf"))
 NR = measureParameter( figCount ( _pmos_rf enclosing rfgate ))
 all_l = measureParameter( length ( _pmos_rf coincident rfgate ) 0.5 )
 LR = calculateParameter( (( all_l / NR ) * 1e-6) )
 area = measureParameter( area ( _pmos_rf over rfgate ) )
 WR = calculateParameter( (( area / all_l ) * 1e-6) )
 attachParameter(WR "wr" _pmos_rf )
 attachParameter(LR "lr" _pmos_rf )
 attachParameter(NR "nr" _pmos_rf )
 saveProperty( _pmos_rf "model" "pmos_rf")
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pmos_rf "pmos_rf _pmos_rf  rfpmos2v pmos_rf"))

extractDevice("pmos_rf33" _pmos_rf33 d_diff("D") plyt("G") pdiff_net("S")
    DNW("B") spiceModel("pmos_rf33") cellView("rfpmos3v ivpcell tsmc18rf"))
 NR = measureParameter( figCount ( _pmos_rf33 enclosing rfgate ))
 all_l = measureParameter( length ( _pmos_rf33 coincident rfgate ) 0.5 )
 LR = calculateParameter( (( all_l / NR ) * 1e-6) )
 area = measureParameter( area ( _pmos_rf33 over rfgate ) )
 WR = calculateParameter( (( area / all_l ) * 1e-6) )
 attachParameter(WR "wr" _pmos_rf33 )
 attachParameter(LR "lr" _pmos_rf33 )
 attachParameter(NR "nr" _pmos_rf33 )
 saveProperty( _pmos_rf33 "model" "pmos_rf33")
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pmos_rf33 "pmos_rf33 _pmos_rf33  rfpmos3v pmos_rf33"))

extractDevice("pmos_rf_nw" _pmos_rf_nw d_diff("D") plyt("G") pdiff_net("S")
    nw_net("B") spiceModel("pmos_rf_nw")
    cellView("rfpmos2v_nw ivpcell tsmc18rf"))
 NR = measureParameter( figCount ( _pmos_rf_nw enclosing rfgate ))
 all_l = measureParameter( length ( _pmos_rf_nw coincident rfgate ) 0.5 )
 LR = calculateParameter( (( all_l / NR ) * 1e-6) )
 area = measureParameter( area ( _pmos_rf_nw over rfgate ) )
 WR = calculateParameter( (( area / all_l ) * 1e-6) )
 attachParameter(WR "wr" _pmos_rf_nw )
 attachParameter(LR "lr" _pmos_rf_nw )
 attachParameter(NR "nr" _pmos_rf_nw )
 saveProperty( _pmos_rf_nw "model" "pmos_rf_nw")
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pmos_rf_nw "pmos_rf_nw _pmos_rf_nw  rfpmos2v_nw pmos_rf_nw"))

extractDevice("pmos_rf33_nw" _pmos_rf33_nw d_diff("D") plyt("G") pdiff_net("S")
    nw_net("B") spiceModel("pmos_rf33_nw")
    cellView("rfpmos3v_nw ivpcell tsmc18rf"))
 NR = measureParameter( figCount ( _pmos_rf33_nw enclosing rfgate ))
 all_l = measureParameter( length ( _pmos_rf33_nw coincident rfgate ) 0.5 )
 LR = calculateParameter( (( all_l / NR ) * 1e-6) )
 area = measureParameter( area ( _pmos_rf33_nw over rfgate ) )
 WR = calculateParameter( (( area / all_l ) * 1e-6) )
 attachParameter(WR "wr" _pmos_rf33_nw )
 attachParameter(LR "lr" _pmos_rf33_nw )
 attachParameter(NR "nr" _pmos_rf33_nw )
 saveProperty( _pmos_rf33_nw "model" "pmos_rf33_nw")
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pmos_rf33_nw "pmos_rf33_nw _pmos_rf33_nw  rfpmos3v_nw pmos_rf33_nw"))

extractDIODE("DN" _ndio psub("PLUS") ndiff_net("MINUS") spiceModel("ndio")
    cellView("dioden ivpcell tsmc18rf"))
area=measureParameter(area (_ndio))
perimeter=measureParameter(perimeter (_ndio))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _ndio)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _ndio)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _ndio "DN _ndio  dioden ndio"))

extractDIODE("D2" _ndio_3 psub("PLUS") ndiff_net("MINUS") spiceModel("ndio_3")
    cellView("dioden3v ivpcell tsmc18rf"))
area=measureParameter(area (_ndio_3))
perimeter=measureParameter(perimeter (_ndio_3))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _ndio_3)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _ndio_3)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _ndio_3 "D2 _ndio_3  dioden3v ndio_3"))

extractDIODE("DP" _pdio pdiff_net("PLUS") nw_net("MINUS") spiceModel("pdio")
    cellView("diodep ivpcell tsmc18rf"))
area=measureParameter(area (_pdio))
perimeter=measureParameter(perimeter (_pdio))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _pdio)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _pdio)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pdio "DP _pdio  diodep pdio"))

extractDIODE("D1" _pdio_3 pdiff_net("PLUS") nw_net("MINUS") spiceModel("pdio_3")
    cellView("diodep3v ivpcell tsmc18rf"))
area=measureParameter(area (_pdio_3))
perimeter=measureParameter(perimeter (_pdio_3))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _pdio_3)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _pdio_3)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pdio_3 "D1 _pdio_3  diodep3v pdio_3"))

extractDIODE("DW" _nwdio psub("PLUS") nw_net("MINUS") spiceModel("nwdio")
    cellView("diodenw ivpcell tsmc18rf"))
area=measureParameter(area (_nwdio))
perimeter=measureParameter(perimeter (_nwdio))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _nwdio)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _nwdio)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nwdio "DW _nwdio  diodenw nwdio"))

extractDIODE("D3" _nwdio_3 psub("PLUS") nw_net("MINUS") spiceModel("nwdio_3")
    cellView("diodenw3v ivpcell tsmc18rf"))
area=measureParameter(area (_nwdio_3))
perimeter=measureParameter(perimeter (_nwdio_3))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _nwdio_3)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _nwdio_3)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nwdio_3 "D3 _nwdio_3  diodenw3v nwdio_3"))

extractDIODE("DB" _endio_3 psub("PLUS") ndiff_net("MINUS") spiceModel("endio_3")
    cellView("diodesd3v ivpcell tsmc18rf"))
area=measureParameter(area (_endio_3))
perimeter=measureParameter(perimeter (_endio_3))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _endio_3)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _endio_3)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _endio_3 "DB _endio_3  noPcell endio_3"))

if( avSwitch("DNW_DIODE") then switchProc0() )

extractRES("rm1" _rm1 m1x6("PLUS" "MINUS") spiceModel("rm1")
    cellView("rm1 ivpcell tsmc18rf"))
width=measureParameter(length (_rm1 butting m1x6) 0.5)
length=measureParameter(length (_rm1 outside m1x6) 0.5)
bends45=measureParameter(bends_part (_rm1 outside m1x6))
bends90=measureParameter(bends_full (_rm1 outside m1x6))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length / width) * 0.078)
attachParameter(VALUE "VALUE" _rm1)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rm1)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rm1)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rm1)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rm1)
if( avSwitch("FLAG_ALL_DEVICES") then 
 errorLayer( _rm1 "M1 _rm1 rm1" )
 errorLayer( _rm2 "M2 _rm2 rm2" )
 errorLayer( _rm3 "M3 _rm3 rm3" )
 errorLayer( _rm4 "M4 _rm4 rm4" )
 errorLayer( _rnpo1rpo    "NR _rnpo1rpo" )
 errorLayer( _rnpo1w       "NS _rnpo1w" )
 errorLayer( _rnpo1         "NS _rnpo1" )
 errorLayer( _rppo1rpo    "PR _rppo1rpo" )
 errorLayer( _rppo1w       "PS _rppo1w" )
 errorLayer( _rppo1         "PS _rppo1" )
 errorLayer( _rppolywo_rf "rppolywo_rf _rppolywo_rf ")
 errorLayer( _rppoly_rf     "rppoly_rf _rppoly_rf ")
 errorLayer( _rppolyhri     "LR _rppolyhri" )
 errorLayer( _rppolyhri_rf  "rppolyhri_rf _rppolyhri_rf ")
 errorLayer( _rnwsti          "WR _rnwsti" )
 errorLayer( _rnwod_m     "WO _rnwod_m" )
 errorLayer( _rnodw_m     "rnodw_m _rnodw_m" )
 errorLayer( _rnod_m        "rnod_m _rnod_m" )
 errorLayer( _rpodw_m     "rpodw_m _rpodw_m" )
 errorLayer( _rpod_m       "rpod_m _rpod_m" )
 errorLayer( _rnodrpo_m  "rnodrpo_m _rnodrpo_m" )
 errorLayer( _rpodrpo_m  "rpodrpo_m _rpodrpo_m" )
) 

extractRES("rm2" _rm2 m2x56("PLUS" "MINUS") spiceModel("rm2")
    cellView("rm2 ivpcell tsmc18rf"))
width=measureParameter(length (_rm2 butting m2x56) 0.5)
length=measureParameter(length (_rm2 outside m2x56) 0.5)
bends45=measureParameter(bends_part (_rm2 outside m2x56))
bends90=measureParameter(bends_full (_rm2 outside m2x56))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length / width) * 0.078)
attachParameter(VALUE "VALUE" _rm2)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rm2)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rm2)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rm2)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rm2)

extractRES("rm3" _rm3 m3x6("PLUS" "MINUS") spiceModel("rm3")
    cellView("rm3 ivpcell tsmc18rf"))
width=measureParameter(length (_rm3 butting m3x6) 0.5)
length=measureParameter(length (_rm3 outside m3x6) 0.5)
bends45=measureParameter(bends_part (_rm3 outside m3x6))
bends90=measureParameter(bends_full (_rm3 outside m3x6))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length / width) * 0.078)
attachParameter(VALUE "VALUE" _rm3)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rm3)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rm3)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rm3)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rm3)

extractRES("rm4" _rm4 m4x6("PLUS" "MINUS") spiceModel("rm4")
    cellView("rm4 ivpcell tsmc18rf"))
width=measureParameter(length (_rm4 butting m4x6) 0.5)
length=measureParameter(length (_rm4 outside m4x6) 0.5)
bends45=measureParameter(bends_part (_rm4 outside m4x6))
bends90=measureParameter(bends_full (_rm4 outside m4x6))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length / width) * 0.078)
attachParameter(VALUE "VALUE" _rm4)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rm4)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rm4)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rm4)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rm4)

extractRES("rm5" _rm5 m5x6("PLUS" "MINUS") spiceModel("rm5")
    cellView("rm5 ivpcell tsmc18rf"))
width=measureParameter(length (_rm5 butting m5x6) 0.5)
length=measureParameter(length (_rm5 outside m5x6) 0.5)
bends45=measureParameter(bends_part (_rm5 outside m5x6))
bends90=measureParameter(bends_full (_rm5 outside m5x6))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length / width) * 0.078)
attachParameter(VALUE "VALUE" _rm5)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rm5)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rm5)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rm5)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rm5)

extractRES("rmt" _rm6 m6x6("PLUS" "MINUS") spiceModel("rmt")
    cellView("rmt ivpcell tsmc18rf"))
width=measureParameter(length (_rm6 butting m6x6) 0.5)
length=measureParameter(length (_rm6 outside m6x6) 0.5)
bends45=measureParameter(bends_part (_rm6 outside m6x6))
bends90=measureParameter(bends_full (_rm6 outside m6x6))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length / width) * 0.0178)
attachParameter(VALUE "VALUE" _rm6)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rm6)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rm6)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rm6)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rm6)

extractRES("NR" _rnpo1rpo plyx("PLUS" "MINUS") spiceModel("rnpo1rpo")
    cellView("rnhpoly ivpcell tsmc18rf"))
width=measureParameter(length (_rnpo1rpo butting plyx) 0.5)
length=measureParameter(length (_rnpo1rpo outside plyx) 0.5)
bends45=measureParameter(bends_part (_rnpo1rpo outside plyx))
bends90=measureParameter(bends_full (_rnpo1rpo outside plyx))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 292)
attachParameter(VALUE "VALUE" _rnpo1rpo)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rnpo1rpo)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rnpo1rpo)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rnpo1rpo)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rnpo1rpo)

extractRES("NS" _rnpo1w plyx("PLUS" "MINUS") spiceModel("rnpo1w")
    cellView("rnlpoly ivpcell tsmc18rf"))
width=measureParameter(length (_rnpo1w butting plyx) 0.5)
length=measureParameter(length (_rnpo1w outside plyx) 0.5)
bends45=measureParameter(bends_part (_rnpo1w outside plyx))
bends90=measureParameter(bends_full (_rnpo1w outside plyx))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter(((length - (0.45 * bends)) / width) * 7.89)
attachParameter(VALUE "VALUE" _rnpo1w)
R=calculateParameter(((length - (0.45 * bends)) / width) * 7.89)
attachParameter(R "R" _rnpo1w)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rnpo1w)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rnpo1w)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rnpo1w)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rnpo1w)
saveProperty(_rnpo1w "model" "rnpo1w")

extractRES("NS" _rnpo1 plyx("PLUS" "MINUS") spiceModel("rnpo1")
    cellView("rnlpoly ivpcell tsmc18rf"))
width=measureParameter(length (_rnpo1 butting plyx) 0.5)
length=measureParameter(length (_rnpo1 outside plyx) 0.5)
bends45=measureParameter(bends_part (_rnpo1 outside plyx))
bends90=measureParameter(bends_full (_rnpo1 outside plyx))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 7.89)
attachParameter(VALUE "VALUE" _rnpo1)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rnpo1)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rnpo1)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rnpo1)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rnpo1)
saveProperty(_rnpo1 "model" "rnpo1")

extractRES("PR" _rppo1rpo plyx("PLUS" "MINUS") spiceModel("rppo1rpo")
    cellView("rphpoly ivpcell tsmc18rf"))
width=measureParameter(length (_rppo1rpo butting plyx) 0.5)
length=measureParameter(length (_rppo1rpo outside plyx) 0.5)
bends45=measureParameter(bends_part (_rppo1rpo outside plyx))
bends90=measureParameter(bends_full (_rppo1rpo outside plyx))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 311)
attachParameter(VALUE "VALUE" _rppo1rpo)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rppo1rpo)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rppo1rpo)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rppo1rpo)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rppo1rpo)

extractRES("PS" _rppo1w plyx("PLUS" "MINUS") spiceModel("rppo1w")
    cellView("rplpoly ivpcell tsmc18rf"))
width=measureParameter(length (_rppo1w butting plyx) 0.5)
length=measureParameter(length (_rppo1w outside plyx) 0.5)
bends45=measureParameter(bends_part (_rppo1w outside plyx))
bends90=measureParameter(bends_full (_rppo1w outside plyx))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 7.9)
attachParameter(VALUE "VALUE" _rppo1w)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rppo1w)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rppo1w)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rppo1w)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rppo1w)
saveProperty(_rppo1w "model" "rppo1w")

extractRES("PS" _rppo1 plyx("PLUS" "MINUS") spiceModel("rppo1")
    cellView("rplpoly ivpcell tsmc18rf"))
width=measureParameter(length (_rppo1 butting plyx) 0.5)
length=measureParameter(length (_rppo1 outside plyx) 0.5)
bends45=measureParameter(bends_part (_rppo1 outside plyx))
bends90=measureParameter(bends_full (_rppo1 outside plyx))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 7.9)
attachParameter(VALUE "VALUE" _rppo1)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rppo1)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rppo1)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rppo1)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rppo1)
saveProperty(_rppo1 "model" "rppo1")

extractDevice("rppolywo_rf" _rppolywo_rf plyt("PLUS") plyt("MINUS") DNW("BULK")
    spiceModel("rppolywo_rf") cellView("rphpoly_rf ivpcell tsmc18rf"))
   W = measureParameter(length (_rppolywo_rf butting po_net) 0.5e-6)
   A = measureParameter(area (_rppolywo_rf) 1e-12)
   L = calculateParameter(A/W)
   nameParameter(W "W")
   nameParameter(L "L")
   saveProperty(_rppolywo_rf "model" "rppolywo_rf")

extractDevice("rppoly_rf" _rppoly_rf plyt("PLUS") plyt("MINUS") DNW("BULK")
    spiceModel("rppoly_rf") cellView("rplpoly_rf ivpcell tsmc18rf"))
   W = measureParameter(length (_rppoly_rf butting po_net) 0.5e-6)
   A = measureParameter(area (_rppoly_rf) 1e-12)
   L = calculateParameter(A/W)
   nameParameter(W "W")
   nameParameter(L "L")
   saveProperty(_rppoly_rf "model" "rppoly_rf")

extractRES("LR" _rppolyhri plyx("PLUS" "MINUS") spiceModel("rppolyhri")
    cellView("rphripoly ivpcell tsmc18rf"))
width=measureParameter(length (_rppolyhri butting plyx) 0.5)
length=measureParameter(length (_rppolyhri outside plyx) 0.5)
bends45=measureParameter(bends_part (_rppolyhri outside plyx))
bends90=measureParameter(bends_full (_rppolyhri outside plyx))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 1075.37)
attachParameter(VALUE "VALUE" _rppolyhri)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rppolyhri)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rppolyhri)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rppolyhri)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rppolyhri)

extractDevice("rppolyhri_rf" _rppolyhri_rf plyt("PLUS") plyt("MINUS")
    DNW("BULK") spiceModel("rppolyhri_rf")
    cellView("rphripoly_rf ivpcell tsmc18rf"))
   W = measureParameter(length (_rppolyhri_rf butting po_net) 0.5e-6)
   A = measureParameter(area (_rppolyhri_rf) 1e-12)
   L = calculateParameter(A/W)
   nameParameter(W "W")
   nameParameter(L "L")
   saveProperty(_rppolyhri_rf "model" "rppolyhri_rf")

extractRES("WR" _rnwsti nw_net("PLUS" "MINUS") spiceModel("rnwsti")
    cellView("rnwell ivpcell tsmc18rf"))
width=measureParameter(length (_rnwsti butting nw_net) 0.5)
length=measureParameter(length (_rnwsti outside nw_net) 0.5)
bends45=measureParameter(bends_part (_rnwsti outside nw_net))
bends90=measureParameter(bends_full (_rnwsti outside nw_net))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 927)
attachParameter(VALUE "VALUE" _rnwsti)
w=calculateParameter(width * 1e-6)
attachParameter(w "w" _rnwsti)
wSim=calculateParameter(width * 1e-6)
attachParameter(wSim "wSim" _rnwsti)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rnwsti)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rnwsti)

extractDevice("rnwod_m" _rnwod_m nw_net("PLUS") nw_net("MINUS") psub("B")
    spiceModel("rnwod_m") cellView("rnwod ivpcell tsmc18rf"))
width=measureParameter(length (_rnwod_m butting nw_net) 0.5)
length=measureParameter(length (_rnwod_m outside nw_net) 0.5)
bends45=measureParameter(bends_part (_rnwod_m outside nw_net))
bends90=measureParameter(bends_full (_rnwod_m outside nw_net))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 440)
attachParameter(VALUE "VALUE" _rnwod_m)
w=calculateParameter(width * 1.0e-6)
attachParameter(w "w" _rnwod_m)
wSim=calculateParameter(width * 1.0e-6)
attachParameter(wSim "wSim" _rnwod_m)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rnwod_m)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rnwod_m)

if( avSwitch("INCLUDE_DEVICES_WITHOUT_PCELLS") then switchProc1() )

extractDevice("rnodw_m" _rnodw_m ndiff_net("PLUS") ndiff_net("MINUS") psub("B")
    spiceModel("rnodw_m") cellView("rnlplus ivpcell tsmc18rf"))
width=measureParameter(length (_rnodw_m butting ndiff_net) 0.5)
length=measureParameter(length (_rnodw_m outside ndiff_net) 0.5)
bends45=measureParameter(bends_part (_rnodw_m outside ndiff_net))
bends90=measureParameter(bends_full (_rnodw_m outside ndiff_net))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 6.82)
attachParameter(VALUE "VALUE" _rnodw_m)
w=calculateParameter(width * 1.0e-6)
attachParameter(w "w" _rnodw_m)
wSim=calculateParameter(width * 1.0e-6)
attachParameter(wSim "wSim" _rnodw_m)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rnodw_m)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rnodw_m)
saveProperty(_rnodw_m "model" "rnodw_m")

extractDevice("rnod_m" _rnod_m ndiff_net("PLUS") ndiff_net("MINUS") psub("B")
    spiceModel("rnod_m") cellView("rnlplus ivpcell tsmc18rf"))
width=measureParameter(length (_rnod_m butting ndiff_net) 0.5)
length=measureParameter(length (_rnod_m outside ndiff_net) 0.5)
bends45=measureParameter(bends_part (_rnod_m outside ndiff_net))
bends90=measureParameter(bends_full (_rnod_m outside ndiff_net))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 6.82)
attachParameter(VALUE "VALUE" _rnod_m)
w=calculateParameter(width * 1.0e-6)
attachParameter(w "w" _rnod_m)
wSim=calculateParameter(width * 1.0e-6)
attachParameter(wSim "wSim" _rnod_m)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rnod_m)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rnod_m)
saveProperty(_rnod_m "model" "rnod_m")

extractDevice("rpodw_m" _rpodw_m pdiff_net("PLUS") pdiff_net("MINUS")
    nw_net("B") spiceModel("rpodw_m") cellView("rplplus ivpcell tsmc18rf"))
width=measureParameter(length (_rpodw_m butting pdiff_net) 0.5)
length=measureParameter(length (_rpodw_m outside pdiff_net) 0.5)
bends45=measureParameter(bends_part (_rpodw_m outside pdiff_net))
bends90=measureParameter(bends_full (_rpodw_m outside pdiff_net))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 6.82)
attachParameter(VALUE "VALUE" _rpodw_m)
w=calculateParameter(width * 1.0e-6)
attachParameter(w "w" _rpodw_m)
wSim=calculateParameter(width * 1.0e-6)
attachParameter(wSim "wSim" _rpodw_m)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rpodw_m)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rpodw_m)
saveProperty(_rpodw_m "model" "rpodw_m")

extractDevice("rpod_m" _rpod_m pdiff_net("PLUS") pdiff_net("MINUS") nw_net("B")
    spiceModel("rpod_m") cellView("rplplus ivpcell tsmc18rf"))
width=measureParameter(length (_rpod_m butting pdiff_net) 0.5)
length=measureParameter(length (_rpod_m outside pdiff_net) 0.5)
bends45=measureParameter(bends_part (_rpod_m outside pdiff_net))
bends90=measureParameter(bends_full (_rpod_m outside pdiff_net))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 6.82)
attachParameter(VALUE "VALUE" _rpod_m)
w=calculateParameter(width * 1.0e-6)
attachParameter(w "w" _rpod_m)
wSim=calculateParameter(width * 1.0e-6)
attachParameter(wSim "wSim" _rpod_m)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rpod_m)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rpod_m)
saveProperty(_rpod_m "model" "rpod_m")

extractDevice("rnodrpo_m" _rnodrpo_m ndiff_net("PLUS") ndiff_net("MINUS")
    psub("B") spiceModel("rnodrpo_m") cellView("rnplus ivpcell tsmc18rf"))
width=measureParameter(length (_rnodrpo_m butting ndiff_net) 0.5)
length=measureParameter(length (_rnodrpo_m outside ndiff_net) 0.5)
bends45=measureParameter(bends_part (_rnodrpo_m outside ndiff_net))
bends90=measureParameter(bends_full (_rnodrpo_m outside ndiff_net))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 59)
attachParameter(VALUE "VALUE" _rnodrpo_m)
w=calculateParameter(width * 1.0e-6)
attachParameter(w "w" _rnodrpo_m)
wSim=calculateParameter(width * 1.0e-6)
attachParameter(wSim "wSim" _rnodrpo_m)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rnodrpo_m)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rnodrpo_m)

extractDevice("rpodrpo_m" _rpodrpo_m pdiff_net("PLUS") pdiff_net("MINUS")
    nw_net("B") spiceModel("rpodrpo_m") cellView("rpplus ivpcell tsmc18rf"))
width=measureParameter(length (_rpodrpo_m butting pdiff_net) 0.5)
length=measureParameter(length (_rpodrpo_m outside pdiff_net) 0.5)
bends45=measureParameter(bends_part (_rpodrpo_m outside pdiff_net))
bends90=measureParameter(bends_full (_rpodrpo_m outside pdiff_net))
bends=calculateParameter(0.5*bends45+bends90)
VALUE=calculateParameter((length - (0.45 * bends)) / (width) * 133)
attachParameter(VALUE "VALUE" _rpodrpo_m)
w=calculateParameter(width * 1.0e-6)
attachParameter(w "w" _rpodrpo_m)
wSim=calculateParameter(width * 1.0e-6)
attachParameter(wSim "wSim" _rpodrpo_m)
l=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(l "l" _rpodrpo_m)
lSim=calculateParameter((length - (0.45 * bends * width)) * 1.0e-6)
attachParameter(lSim "lSim" _rpodrpo_m)

lrpop_dis_p = geomAnd(lrpop_dis psub)
lrpop_dis_w = geomAnd(lrpop_dis nw_net)
extractDevice("rppolyhri_dis" lrpop_dis_w plyx("PLUS") plyx("MINUS") poly_nw_via("B")
        spiceModel("rppolyhri_dis")
        cellView("rphripoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (lrpop_dis_w butting plyx) 0.5e-6)
   A = measureParameter(area (lrpop_dis_w) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" lrpop_dis_w)
   nameParameter(l "l" lrpop_dis_w)
   nameParameter( w "wSim" lrpop_dis_w)
   nameParameter( l "lSim" lrpop_dis_w)
   nameParameter( w "sumW" lrpop_dis_w)
   nameParameter( l "sumL" lrpop_dis_w)
   saveProperty( lrpop_dis_w "model" "rppolyhri_dis")
extractDevice("rppolyhri_dis" lrpop_dis_p plyx("PLUS") plyx("MINUS") poly_psub_via("B")
        spiceModel("rppolyhri_dis")
        cellView("rphripoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (lrpop_dis_p butting plyx) 0.5e-6)
   A = measureParameter(area (lrpop_dis_p) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" lrpop_dis_p)
   nameParameter(l "l" lrpop_dis_p)
   nameParameter( w "wSim" lrpop_dis_p)
   nameParameter( l "lSim" lrpop_dis_p)
   nameParameter( w "sumW" lrpop_dis_p)
   nameParameter( l "sumL" lrpop_dis_p)
   saveProperty( lrpop_dis_p "model" "rppolyhri_dis")

rnpolyl_r_dis_p = geomAnd(rnpolyl_r_dis psub)
rnpolyl_r_dis_w = geomAnd(rnpolyl_r_dis nw_net)
extractDevice("rnpo1_dis" rnpolyl_r_dis_w plyx("PLUS") plyx("MINUS") poly_nw_via("B")
        spiceModel("rnpo1_dis")
        cellView("rnlpoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (rnpolyl_r_dis_w butting plyx) 0.5e-6)
   A = measureParameter(area (rnpolyl_r_dis_w) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" rnpolyl_r_dis_w)
   nameParameter(l "l" rnpolyl_r_dis_w)
   nameParameter( w "wSim" rnpolyl_r_dis_w)
   nameParameter( l "lSim" rnpolyl_r_dis_w)
   nameParameter( w "sumW" rnpolyl_r_dis_w)
   nameParameter( l "sumL" rnpolyl_r_dis_w)
   saveProperty( rnpolyl_r_dis_w "model" "rnpo1_dis")
extractDevice("rnpo1_dis" rnpolyl_r_dis_p plyx("PLUS") plyx("MINUS") poly_psub_via("B")
        spiceModel("rnpo1_dis")
        cellView("rnlpoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (rnpolyl_r_dis_p butting plyx) 0.5e-6)
   A = measureParameter(area (rnpolyl_r_dis_p) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" rnpolyl_r_dis_p)
   nameParameter(l "l" rnpolyl_r_dis_p)
   nameParameter( w "wSim" rnpolyl_r_dis_p)
   nameParameter( l "lSim" rnpolyl_r_dis_p)
   nameParameter( w "sumW" rnpolyl_r_dis_p)
   nameParameter( l "sumL" rnpolyl_r_dis_p)
   saveProperty( rnpolyl_r_dis_p "model" "rnpo1_dis")

rnpolys_r_dis_p = geomAnd(rnpolys_r_dis psub)
rnpolys_r_dis_w = geomAnd(rnpolys_r_dis nw_net)
extractDevice("rnpo1w_dis" rnpolys_r_dis_w plyx("PLUS") plyx("MINUS") poly_nw_via("B")
        spiceModel("rnpo1w_dis")
        cellView("rnlpoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (rnpolys_r_dis_w butting plyx) 0.5e-6)
   A = measureParameter(area (rnpolys_r_dis_w) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" rnpolys_r_dis_w)
   nameParameter(l "l" rnpolys_r_dis_w)
   nameParameter( w "wSim" rnpolys_r_dis_w)
   nameParameter( l "lSim" rnpolys_r_dis_w)
   nameParameter( w "sumW" rnpolys_r_dis_w)
   nameParameter( l "sumL" rnpolys_r_dis_w)
   saveProperty( rnpolys_r_dis_w "model" "rnpo1w_dis")
extractDevice("rnpo1w_dis" rnpolys_r_dis_p plyx("PLUS") plyx("MINUS") poly_psub_via("B")
        spiceModel("rnpo1w_dis")
        cellView("rnlpoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (rnpolys_r_dis_p butting plyx) 0.5e-6)
   A = measureParameter(area (rnpolys_r_dis_p) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" rnpolys_r_dis_p)
   nameParameter(l "l" rnpolys_r_dis_p)
   nameParameter( w "wSim" rnpolys_r_dis_p)
   nameParameter( l "lSim" rnpolys_r_dis_p)
   nameParameter( w "sumW" rnpolys_r_dis_p)
   nameParameter( l "sumL" rnpolys_r_dis_p)
   saveProperty( rnpolys_r_dis_p "model" "rnpo1w_dis")

rppolyl_r_dis_p = geomAnd(rppolyl_r_dis psub)
rppolyl_r_dis_w = geomAnd(rppolyl_r_dis nw_net)
extractDevice("rppo1_dis" rppolyl_r_dis_w plyx("PLUS") plyx("MINUS") poly_nw_via("B")
        spiceModel("rppo1_dis")
        cellView("rplpoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (rppolyl_r_dis_w butting plyx) 0.5e-6)
   A = measureParameter(area (rppolyl_r_dis_w) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" rppolyl_r_dis_w)
   nameParameter(l "l" rppolyl_r_dis_w)
   nameParameter( w "wSim" rppolyl_r_dis_w)
   nameParameter( l "lSim" rppolyl_r_dis_w)
   nameParameter( w "sumW" rppolyl_r_dis_w)
   nameParameter( l "sumL" rppolyl_r_dis_w)
   saveProperty( rppolyl_r_dis_w "model" "rppo1_dis")
extractDevice("rppo1_dis" rppolyl_r_dis_p plyx("PLUS") plyx("MINUS") poly_psub_via("B")
        spiceModel("rppo1_dis")
        cellView("rplpoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (rppolyl_r_dis_p butting plyx) 0.5e-6)
   A = measureParameter(area (rppolyl_r_dis_p) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" rppolyl_r_dis_p)
   nameParameter(l "l" rppolyl_r_dis_p)
   nameParameter( w "wSim" rppolyl_r_dis_p)
   nameParameter( l "lSim" rppolyl_r_dis_p)
   nameParameter( w "sumW" rppolyl_r_dis_p)
   nameParameter( l "sumL" rppolyl_r_dis_p)
   saveProperty( rppolyl_r_dis_p "model" "rppo1_dis")

rppolys_r_dis_p = geomAnd(rppolys_r_dis psub)
rppolys_r_dis_w = geomAnd(rppolys_r_dis nw_net)
extractDevice("rppo1w_dis" rppolys_r_dis_w plyx("PLUS") plyx("MINUS") poly_nw_via("B")
        spiceModel("rppo1w_dis")
        cellView("rplpoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (rppolys_r_dis_w butting plyx) 0.5e-6)
   A = measureParameter(area (rppolys_r_dis_w) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" rppolys_r_dis_w)
   nameParameter(l "l" rppolys_r_dis_w)
   nameParameter( w "wSim" rppolys_r_dis_w)
   nameParameter( l "lSim" rppolys_r_dis_w)
   nameParameter( w "sumW" rppolys_r_dis_w)
   nameParameter( l "sumL" rppolys_r_dis_w)
   saveProperty( rppolys_r_dis_w "model" "rppo1w_dis")
extractDevice("rppo1w_dis" rppolys_r_dis_p plyx("PLUS") plyx("MINUS") poly_psub_via("B")
        spiceModel("rppo1w_dis")
        cellView("rplpoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (rppolys_r_dis_p butting plyx) 0.5e-6)
   A = measureParameter(area (rppolys_r_dis_p) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" rppolys_r_dis_p)
   nameParameter(l "l" rppolys_r_dis_p)
   nameParameter( w "wSim" rppolys_r_dis_p)
   nameParameter( l "lSim" rppolys_r_dis_p)
   nameParameter( w "sumW" rppolys_r_dis_p)
   nameParameter( l "sumL" rppolys_r_dis_p)
   saveProperty( rppolys_r_dis_p "model" "rppo1w_dis")

prpop_dis_p = geomAnd(prpop_dis psub)
prpop_dis_w = geomAnd(prpop_dis nw_net)
extractDevice("rppo1rpo_dis" prpop_dis_w plyx("PLUS") plyx("MINUS") poly_nw_via("B")
        spiceModel("rppo1rpo_dis")
        cellView("rphpoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (prpop_dis_w butting plyx) 0.5e-6)
   A = measureParameter(area (prpop_dis_w) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" prpop_dis_w)
   nameParameter(l "l" prpop_dis_w)
   nameParameter( w "wSim" prpop_dis_w)
   nameParameter( l "lSim" prpop_dis_w)
   nameParameter( w "sumW" prpop_dis_w)
   nameParameter( l "sumL" prpop_dis_w)
   saveProperty( prpop_dis_w "model" "rppo1rpo_dis")
extractDevice("rppo1rpo_dis" prpop_dis_p plyx("PLUS") plyx("MINUS") poly_psub_via("B")
        spiceModel("rppo1rpo_dis")
        cellView("rphpoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (prpop_dis_p butting plyx) 0.5e-6)
   A = measureParameter(area (prpop_dis_p) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" prpop_dis_p)
   nameParameter(l "l" prpop_dis_p)
   nameParameter( w "wSim" prpop_dis_p)
   nameParameter( l "lSim" prpop_dis_p)
   nameParameter( w "sumW" prpop_dis_p)
   nameParameter( l "sumL" prpop_dis_p)
   saveProperty( prpop_dis_p "model" "rppo1rpo_dis")

nrpop_dis_p = geomAnd(nrpop_dis psub)
nrpop_dis_w = geomAnd(nrpop_dis nw_net)
extractDevice("rnpo1rpo_dis" nrpop_dis_w plyx("PLUS") plyx("MINUS") poly_nw_via("B")
        spiceModel("rnpo1rpo_dis")
        cellView("rnhpoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (nrpop_dis_w butting plyx) 0.5e-6)
   A = measureParameter(area (nrpop_dis_w) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" nrpop_dis_w)
   nameParameter(l "l" nrpop_dis_w)
   nameParameter( w "wSim" nrpop_dis_w)
   nameParameter( l "lSim" nrpop_dis_w)
   nameParameter( w "sumW" nrpop_dis_w)
   nameParameter( l "sumL" nrpop_dis_w)
   saveProperty( nrpop_dis_w "model" "rnpo1rpo_dis")
extractDevice("rnpo1rpo_dis" nrpop_dis_p plyx("PLUS") plyx("MINUS") poly_psub_via("B")
        spiceModel("rnpo1rpo_dis")
        cellView("rnhpoly_dis ivpcell")
        flagMalformed
)
   w = measureParameter(length (nrpop_dis_p butting plyx) 0.5e-6)
   A = measureParameter(area (nrpop_dis_p) 1e-12)
   l = calculateParameter(A/w)
   nameParameter(w "w" nrpop_dis_p)
   nameParameter(l "l" nrpop_dis_p)
   nameParameter( w "wSim" nrpop_dis_p)
   nameParameter( l "lSim" nrpop_dis_p)
   nameParameter( w "sumW" nrpop_dis_p)
   nameParameter( l "sumL" nrpop_dis_p)
   saveProperty( nrpop_dis_p "model" "rnpo1rpo_dis")


if( avSwitch("INCLUDE_DEVICES_WITHOUT_PCELLS") then switchProc2() )

extractCAP("M2" _capm2 CTM2("TOP") m2t56("BOT") spiceModel("mimcap")
    cellView("mimcap ivpcell tsmc18rf"))
   area_CAP = measureParameter(area (_capm2) 1e-12)
   pj_CAP = measureParameter(perimeter (_capm2) 1e-6)
   cap_CAP1  = calculateParameter( area_CAP * 0.001025 )
   cap_CAP2  = calculateParameter( pj_CAP * 2.425e-10 )
   cap_CAP  = calculateParameter( cap_CAP1+cap_CAP2 )
   A_CAP    = measureParameter(area (_capm2))
   P_CAP   = measureParameter(perimeter (_capm2))
   P_2_CAP = calculateParameter( P_CAP * P_CAP)
   AC4 = calculateParameter( A_CAP * 16)
   KKK = calculateParameter( P_2_CAP-AC4)
   SQ = calculateParameter(sqrt(KKK))
   W = calculateParameter( ((P_CAP + SQ)/4) * 1e-6)
   L = calculateParameter( ((P_CAP - SQ)/4) * 1e-6)
   nameParameter( area_CAP "AREA" )
   nameParameter( cap_CAP "VALUE" )
   nameParameter( cap_CAP "c" )
   nameParameter( L "l" )
   nameParameter( W "w" )
   ;saveProperty(_capm2 "model" "mimcap")

extractCAP("M3" _capm3 CTM3("TOP") m3t6("BOT") spiceModel("mimcap")
    cellView("mimcap ivpcell tsmc18rf"))
   area_CAP = measureParameter(area (_capm3) 1e-12)
   pj_CAP = measureParameter(perimeter (_capm3) 1e-6) 
   cap_CAP1  = calculateParameter( area_CAP * 0.001025 ) 
   cap_CAP2  = calculateParameter( pj_CAP * 2.425e-10 ) 
   cap_CAP  = calculateParameter( cap_CAP1+cap_CAP2 ) 
   A_CAP    = measureParameter(area (_capm3))
   P_CAP   = measureParameter(perimeter (_capm3))
   P_2_CAP = calculateParameter( P_CAP * P_CAP)
   AC4 = calculateParameter( A_CAP * 16)
   KKK = calculateParameter( P_2_CAP-AC4)
   SQ = calculateParameter(sqrt(KKK))
   W = calculateParameter( ((P_CAP + SQ)/4) * 1e-6)
   L = calculateParameter( ((P_CAP - SQ)/4) * 1e-6)
   nameParameter( area_CAP "AREA" )
   nameParameter( cap_CAP "VALUE" )
   nameParameter( cap_CAP "c" )
   nameParameter( L "l" )
   nameParameter( W "w" )
   ;saveProperty(_capm3 "model" "mimcap")

extractCAP("M4" _capm4 CTM4("TOP") m4t6("BOT") spiceModel("mimcap")
    cellView("mimcap ivpcell tsmc18rf"))
   area_CAP = measureParameter(area (_capm4) 1e-12)
   pj_CAP = measureParameter(perimeter (_capm4) 1e-6)
   cap_CAP1  = calculateParameter( area_CAP * 0.001025 )
   cap_CAP2  = calculateParameter( pj_CAP * 2.425e-10 )
   cap_CAP  = calculateParameter( cap_CAP1+cap_CAP2 )
   A_CAP    = measureParameter(area (_capm4))
   P_CAP   = measureParameter(perimeter (_capm4))
   P_2_CAP = calculateParameter( P_CAP * P_CAP)
   AC4 = calculateParameter( A_CAP * 16)
   KKK = calculateParameter( P_2_CAP-AC4)
   SQ = calculateParameter(sqrt(KKK))
   W = calculateParameter( ((P_CAP + SQ)/4) * 1e-6)
   L = calculateParameter( ((P_CAP - SQ)/4) * 1e-6)
   nameParameter( area_CAP "AREA" )
   nameParameter( cap_CAP "VALUE" )
   nameParameter( cap_CAP "c" )
   nameParameter( L "l" )
   nameParameter( W "w" )
   ;saveProperty(_capm4 "model" "mimcap")

extractCAP("M5" _capm5 CTM5("TOP") m5t6("BOT") spiceModel("mimcap")
    cellView("mimcap ivpcell tsmc18rf"))
   area_CAP = measureParameter(area (_capm5) 1e-12)
   pj_CAP = measureParameter(perimeter (_capm5) 1e-6)
   cap_CAP1  = calculateParameter( area_CAP * 0.001025 )
   cap_CAP2  = calculateParameter( pj_CAP * 2.425e-10 )
   cap_CAP  = calculateParameter( cap_CAP1+cap_CAP2 )
   A_CAP    = measureParameter(area (_capm5))
   P_CAP   = measureParameter(perimeter (_capm5))
   P_2_CAP = calculateParameter( P_CAP * P_CAP)
   AC4 = calculateParameter( A_CAP * 16)
   KKK = calculateParameter( P_2_CAP-AC4)
   SQ = calculateParameter(sqrt(KKK))
   W = calculateParameter( ((P_CAP + SQ)/4) * 1e-6)
   L = calculateParameter( ((P_CAP - SQ)/4) * 1e-6)
   nameParameter( area_CAP "AREA" )
   nameParameter( cap_CAP "VALUE" )
   nameParameter( cap_CAP "c" )
   nameParameter( L "l" )
   nameParameter( W "w" )
   saveProperty(_capm5 "model" "mimcap")

extractDevice("mimcap_wos" _capm5_wos CTM5("PLUS") m5t6("MINUS") DNW("BULK")
    spiceModel("mimcap_wos") cellView("mimcap_rf ivpcell tsmc18rf"))
   PJ = measureParameter(perimeter (_capm5_wos over CTM5) 1e-6)
   A  = measureParameter(area (_capm5_wos) 1e-12)
   L1 = measureParameter(length (_capm5_wos coincident m6t6) 1e-6)
   LT  = calculateParameter(PJ - L1)
   WT  = calculateParameter(A/LT)
   nameParameter(LT "LT")
   nameParameter(WT "WT")
   attachParameter(LT "lt" _capm5_wos)
   attachParameter(WT "wt" _capm5_wos)
   saveProperty(_capm5_wos "model" "mimcap_wos")

extractDevice("mimcap_shield" _capm5_shield CTM5("PLUS") m5t6("MINUS")
    m4t6("BULK") spiceModel("mimcap_shield")
    cellView("mimcap_rf ivpcell tsmc18rf"))
    PJ = measureParameter(perimeter (_capm5_shield over CTM5) 1e-6)
   A  = measureParameter(area (_capm5_shield) 1e-12)
   L1 = measureParameter(length (_capm5_shield coincident m6t6) 1e-6)
   LT  = calculateParameter(PJ - L1)
   WT  = calculateParameter(A/LT)
   nameParameter(LT "LT")
   nameParameter(WT "WT")
   attachParameter(LT "lt" _capm5_shield)
   attachParameter(WT "wt"  _capm5_shield)
   saveProperty(_capm5_shield "model" "mimcap_shield")

extractDevice("xjvar_nr36" _xjvar_nr36 pdiff_net("PLUS") ndiff_net("MINUS")
    psub("BULK") spiceModel("xjvar_nr36") cellView("jvar ivpcell tsmc18rf"))
 NR = measureParameter(figCount (_xjvar_nr36 enclosing pdiff_net))
 AP = measureParameter(area (_xjvar_nr36 over pdiff_net) 1e-12 )
 WR1 = measureParameter(area (_xjvar_nr36 over w_fac) 1e-6 )
 W  = calculateParameter( (AP/(WR1*10)) )
 M = calculateParameter(NR/NR)
 nameParameter(M "m")
 attachParameter(NR "nr" _xjvar_nr36)
 attachParameter(W  "w" _xjvar_nr36)
 saveProperty(_xjvar_nr36 "model" "xjvar_nr36")
 if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _xjvar_nr36 "xjvar_nr36 _xjvar_nr36 jvar"))

extractDevice("xjvar_w40" _xjvar_w40 pdiff_net("PLUS") ndiff_net("MINUS")
    psub("BULK") spiceModel("xjvar_w40") cellView("jvar ivpcell tsmc18rf"))
 NR  = measureParameter(figCount (_xjvar_w40 enclosing pdiff_net))
 AP = measureParameter(area (_xjvar_w40 over pdiff_net) 1e-12 )
 WR1 = measureParameter(area (_xjvar_w40 over w_fac) 1e-6 )
 W  = calculateParameter( (AP/(WR1*10)) )
 M = calculateParameter(NR/NR)
 nameParameter(M "m")
 attachParameter(NR "nr" _xjvar_w40)
 attachParameter(W  "w" _xjvar_w40)
 saveProperty(_xjvar_w40 "model" "xjvar_w40")
 if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _xjvar_w40 "xjvar_w40 _xjvar_w40 jvar"))

extractDevice("nmoscap" _nmoscap plyt("PLUS") ndiff_net("MINUS")
    spiceModel("nmoscap") cellView("mos_var_b ivpcell tsmc18rf"))
 mr = measureParameter(figCount (_nmoscap enclosing vargt))
 A1 = measureParameter(area (_nmoscap over vargt) 1e-12)
 A = calculateParameter(A1/mr)
 lr1 = measureParameter(length (_nmoscap coincident vargt) 1e-6)
 lr = calculateParameter(lr1/(mr*2))
 wr = calculateParameter( A/lr )
 M = calculateParameter(mr/mr)
 nameParameter(M "m")
 attachParameter(mr "mr" _nmoscap)
 attachParameter(lr "lr" _nmoscap)
 attachParameter(wr "wr" _nmoscap)
 attachParameter(mr "branch" _nmoscap)
 attachParameter(lr "lf" _nmoscap)
 attachParameter(wr "wf" _nmoscap)
 if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nmoscap "nmoscap _nmoscap mos_var_b"))

extractDevice("nmoscap_33" _nmoscap_33 plyt("PLUS") ndiff_net("MINUS")
    spiceModel("nmoscap_33") cellView("mos_var_b3 ivpcell tsmc18rf"))
 mr = measureParameter(figCount (_nmoscap_33 enclosing vargt))
 A1 = measureParameter(area (_nmoscap_33 over vargt) 1e-12)
 A = calculateParameter(A1/mr)
 lr1 = measureParameter(length (_nmoscap_33 coincident vargt) 1e-6)
 lr = calculateParameter(lr1/(mr*2))
 wr = calculateParameter( A/lr )
 M = calculateParameter(mr/mr)
 nameParameter(M "m")
 attachParameter(mr "mr" _nmoscap_33)
 attachParameter(lr "lr" _nmoscap_33)
 attachParameter(wr "wr" _nmoscap_33)
 attachParameter(mr "branch" _nmoscap_33)
 attachParameter(lr "lf" _nmoscap_33)
 attachParameter(wr "wf" _nmoscap_33)
 if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _nmoscap_33 "nmoscap_33 _nmoscap_33 mos_var_b3"))

extractDevice("moscap_rf" _moscap_rf plyt("PLUS") ndiff_net("MINUS")
    psub("BULK") spiceModel("moscap_rf") cellView("mos_var ivpcell tsmc18rf"))
 fg = measureParameter(figCount (_moscap_rf enclosing vargt))
 G = measureParameter(figCount (_moscap_rf enclosing nod))
 B = calculateParameter(fg/G)
 M = calculateParameter(fg/fg)
 nameParameter(M "m")
 attachParameter(G "g" _moscap_rf)
 attachParameter(B "b" _moscap_rf)
 attachParameter(G "group" _moscap_rf)
 attachParameter(B "branch" _moscap_rf)
 saveProperty(_moscap_rf "model" "moscap_rf")
 if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _moscap_rf "moscap_rf _moscap_rf mos_var"))

extractDevice("moscap_rf33" _moscap_rf33 plyt("PLUS") ndiff_net("MINUS")
    psub("BULK") spiceModel("moscap_rf33")
    cellView("mos_var33 ivpcell tsmc18rf"))
 fg = measureParameter(figCount (_moscap_rf33 enclosing vargt))
 G = measureParameter(figCount (_moscap_rf33 enclosing nod))
 B = calculateParameter(fg/G)
 M = calculateParameter(fg/fg)
 nameParameter(M "m")
 attachParameter(G "g" _moscap_rf33)
 attachParameter(B "b" _moscap_rf33)
 attachParameter(G "group" _moscap_rf33)
 attachParameter(B "branch" _moscap_rf33)
 saveProperty(_moscap_rf33 "model" "moscap_rf33")
 if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _moscap_rf33 "moscap_rf33 _moscap_rf33 mos_var33"))

extractDevice("spiral_s2_std" _spiral_s2_std6 ind_plus6("PLUS")
    ind_minus6("MINUS") psub("BULK") spiceModel("spiral_s2_std")
    cellView("ind_std ivpcell tsmc18rf"))
 wseg = measureParameter(length (_spiral_s2_std6 coincident ind_w6) 0.5e-6 )
 lay = calculateParameter( 6 * (wseg/wseg) )
 sseg = measureParameter(area (_spiral_s2_std6 over ind_std_s6))
 snum = measureParameter( figCount ( _spiral_s2_std6 enclosing ind_std_s6 ))
 space = calculateParameter( (( sseg / snum ) / wseg) * 1e-12 )
 corners = measureParameter( figCount ( _spiral_s2_std6 enclosing ind_corners6 ))
 turns = calculateParameter( (corners - 1) / 8 )
 rada = measureParameter( area (_spiral_s2_std6 over ind_rad6 ))
 radw = measureParameter( area (_spiral_s2_std6 over ind_rada_std6 ))
 rad = calculateParameter( (rada / radw) * 0.5e-6 )
 attachParameter(wseg "w" _spiral_s2_std6)
 attachParameter(wseg "width" _spiral_s2_std6)
 attachParameter(lay "lay" _spiral_s2_std6)
 attachParameter(lay "layer" _spiral_s2_std6)
 attachParameter(space "s" _spiral_s2_std6)
 attachParameter(space "space" _spiral_s2_std6)
 attachParameter(turns "nr" _spiral_s2_std6)
 attachParameter(turns "turns" _spiral_s2_std6)
 attachParameter(rad "radius" _spiral_s2_std6)
 attachParameter(rad "rad" _spiral_s2_std6)
 saveProperty(_spiral_s2_std6 "model" "spiral_s2_std")
 if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _spiral_s2_std6 "spiral_s2_std _spiral_s2_std6 ind_std6"))

extractDevice("spiral_s3_std" _spiral_s3_std6 ind_plus6("PLUS")
    ind_minus6("MINUS") psub("BULK") spiceModel("spiral_s3_std")
    cellView("ind_std ivpcell tsmc18rf"))
 wseg = measureParameter(length (_spiral_s3_std6 coincident ind_w6) 0.5e-6 )
 lay = calculateParameter( 6 * (wseg/wseg) )
 sseg = measureParameter(area (_spiral_s3_std6 over ind_std_s6))
 snum = measureParameter( figCount ( _spiral_s3_std6 enclosing ind_std_s6 ))
 space = calculateParameter( (( sseg / snum ) / wseg) * 1e-12 )
 corners = measureParameter( figCount ( _spiral_s3_std6 enclosing ind_corners6 ))
 turns = calculateParameter( (corners - 1) / 8 )
 rada = measureParameter( area (_spiral_s3_std6 over ind_rad6 ))
 radw = measureParameter( area (_spiral_s3_std6 over ind_rada_std6 ))
 rad = calculateParameter( (rada / radw) * 0.5e-6 )
 attachParameter(wseg "w" _spiral_s3_std6)
 attachParameter(wseg "width" _spiral_s3_std6)
 attachParameter(lay "lay" _spiral_s3_std6)
 attachParameter(lay "layer" _spiral_s3_std6)
 attachParameter(space "s" _spiral_s3_std6)
 attachParameter(space "space" _spiral_s3_std6)
 attachParameter(turns "nr" _spiral_s3_std6)
 attachParameter(turns "turns" _spiral_s3_std6)
 attachParameter(rad "radius" _spiral_s3_std6)
 attachParameter(rad "rad" _spiral_s3_std6)
 saveProperty(_spiral_s3_std6 "model" "spiral_s3_std")
 if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _spiral_s3_std6 "spiral_s3_std _spiral_s3_std6 ind_std6"))

extractDevice("spiral_s2_sym" _spiral_s2_sym6 m6t6("PLUS") m6t6("MINUS")
    psub("BULK") spiceModel("spiral_s2_sym")
    cellView("ind_sym ivpcell tsmc18rf"))
 wseg = measureParameter(length (_spiral_s2_sym6 coincident ind_w6) 0.5e-6 )
 lay = calculateParameter( 6 * (wseg/wseg) )
 space = measureParameter(length (_spiral_s2_sym6 butting ind_space6) 1e-6 )
 ;corners = measureParameter( figCount ( _spiral_s2_sym6 enclosing ind_corners6 ))
 corners_1 = measureParameter( figCount ( _spiral_s2_sym6 enclosing L39339))
 corners_2 = measureParameter( figCount ( _spiral_s2_sym6 enclosing L24775))
 corners = calculateParameter( corners_1 - corners_2*2)
 turns = calculateParameter( (corners - 2) / 8 )
 rada = measureParameter( area (_spiral_s2_sym6 over ind_rad6 ))
 radw = measureParameter( area (_spiral_s2_sym6 over ind_rada6 ))
 rad = calculateParameter( ((rada / radw) / 2) * 1e-6 )
 attachParameter(wseg "w" _spiral_s2_sym6)
 attachParameter(wseg "width" _spiral_s2_sym6)
 attachParameter(lay "lay" _spiral_s2_sym6)
 attachParameter(lay "layer" _spiral_s2_sym6)
 attachParameter(space "s" _spiral_s2_sym6)
 attachParameter(space "space" _spiral_s2_sym6)
 attachParameter(turns "nr" _spiral_s2_sym6)
 attachParameter(turns "turns" _spiral_s2_sym6)
 attachParameter(rad "radius" _spiral_s2_sym6)
 attachParameter(rad "rad" _spiral_s2_sym6)
 saveProperty(_spiral_s2_sym6 "model" "spiral_s2_sym")
 if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _spiral_s2_sym6 "spiral_s2_sym _spiral_s2_sym6 ind_sym"))

extractDevice("spiral_s3_sym" _spiral_s3_sym6 m6t6("PLUS") m6t6("MINUS")
    psub("BULK") spiceModel("spiral_s3_sym")
    cellView("ind_sym ivpcell tsmc18rf"))
 wseg = measureParameter(length (_spiral_s3_sym6 coincident ind_w6) 0.5e-6 )
 lay = calculateParameter( 6 * (wseg/wseg) )
 space = measureParameter(length (_spiral_s3_sym6 butting ind_space6) 1e-6 )
; corners = measureParameter( figCount ( _spiral_s3_sym6 enclosing ind_corners6 ))
 corners_1 = measureParameter( figCount ( _spiral_s3_sym6 enclosing L39339))
 corners_2 = measureParameter( figCount ( _spiral_s3_sym6 enclosing L24775))
 corners = calculateParameter( corners_1 - corners_2*2)
 turns = calculateParameter( (corners - 2) / 8 )
 rada = measureParameter( area (_spiral_s3_sym6 over ind_rad6 ))
 radw = measureParameter( area (_spiral_s3_sym6 over ind_rada6 ))
 rad = calculateParameter( ((rada / radw) / 2) * 1e-6 )
 attachParameter(wseg "w" _spiral_s3_sym6)
 attachParameter(wseg "width" _spiral_s3_sym6)
 attachParameter(lay "lay" _spiral_s3_sym6)
 attachParameter(lay "layer" _spiral_s3_sym6)
 attachParameter(space "s" _spiral_s3_sym6)
 attachParameter(space "space" _spiral_s3_sym6)
 attachParameter(turns "nr" _spiral_s3_sym6)
 attachParameter(turns "turns" _spiral_s3_sym6)
 attachParameter(rad "radius" _spiral_s3_sym6)
 attachParameter(rad "rad" _spiral_s3_sym6)
 saveProperty(_spiral_s3_sym6 "model" "spiral_s3_sym")
 if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _spiral_s3_sym6 "spiral_s3_sym _spiral_s3_sym6 ind_sym"))

extractDevice("spiral_s2_sym_ct" _spiral_s2_sym_ct6 m6t6("PLUS") m6t6("MINUS")
    psub("BULK") m4t6("CTAP") spiceModel("spiral_s2_sym_ct")
    cellView("ind_sym_ct ivpcell tsmc18rf"))
 wseg = measureParameter(length (_spiral_s2_sym_ct6 coincident ind_w6) 0.5e-6 )
 lay = calculateParameter( 6 * (wseg/wseg) )
 space = measureParameter(length (_spiral_s2_sym_ct6 butting ind_space6) 1e-6 )
; corners = measureParameter( figCount ( _spiral_s2_sym_ct6 enclosing ind_corners6 ))
 corners_1 = measureParameter( figCount ( _spiral_s2_sym_ct6 enclosing L39339))
 corners_2 = measureParameter( figCount ( _spiral_s2_sym_ct6 enclosing L24775))
 corners = calculateParameter( corners_1 - corners_2*2)
 turns = calculateParameter( (corners - 2) / 8 )
 rada = measureParameter( area (_spiral_s2_sym_ct6 over ind_rad6 ))
 radw = measureParameter( area (_spiral_s2_sym_ct6 over ind_rada6 ))
 rad = calculateParameter( ((rada / radw) / 2) * 1e-6 )
 attachParameter(wseg "w" _spiral_s2_sym_ct6)
 attachParameter(wseg "width" _spiral_s2_sym_ct6)
 attachParameter(lay "lay" _spiral_s2_sym_ct6)
 attachParameter(lay "layer" _spiral_s2_sym_ct6)
 attachParameter(space "s" _spiral_s2_sym_ct6)
 attachParameter(space "space" _spiral_s2_sym_ct6)
 attachParameter(turns "nr" _spiral_s2_sym_ct6)
 attachParameter(turns "turns" _spiral_s2_sym_ct6)
 attachParameter(rad "radius" _spiral_s2_sym_ct6)
 attachParameter(rad "rad" _spiral_s2_sym_ct6)
 saveProperty(_spiral_s2_sym_ct6 "model" "spiral_s2_sym_ct")
 if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _spiral_s2_sym_ct6 "spiral_s2_sym_ct _spiral_s2_sym_ct6 ind_sym_ct"))

extractDevice("spiral_s3_sym_ct" _spiral_s3_sym_ct6 m6t6("PLUS") m6t6("MINUS")
    psub("BULK") m4t6("CTAP") spiceModel("spiral_s3_sym_ct")
    cellView("ind_sym_ct ivpcell tsmc18rf"))
 wseg = measureParameter(length (_spiral_s3_sym_ct6 coincident ind_w6) 0.5e-6 )
 lay = calculateParameter( 6 * (wseg/wseg) )
 space = measureParameter(length (_spiral_s3_sym_ct6 butting ind_space6) 1e-6 )
; corners = measureParameter( figCount ( _spiral_s3_sym_ct6 enclosing ind_corners6 ))
 corners_1 = measureParameter( figCount ( _spiral_s3_sym_ct6 enclosing L39339))
 corners_2 = measureParameter( figCount ( _spiral_s3_sym_ct6 enclosing L24775))
 corners = calculateParameter( corners_1 - corners_2*2)
 turns = calculateParameter( (corners - 2) / 8 )
 rada = measureParameter( area (_spiral_s3_sym_ct6 over ind_rad6 ))
 radw = measureParameter( area (_spiral_s3_sym_ct6 over ind_rada6 ))
 rad = calculateParameter( ((rada / radw) / 2) * 1e-6 )
 attachParameter(wseg "w" _spiral_s3_sym_ct6)
 attachParameter(wseg "width" _spiral_s3_sym_ct6)
 attachParameter(lay "lay" _spiral_s3_sym_ct6)
 attachParameter(lay "layer" _spiral_s3_sym_ct6)
 attachParameter(space "s" _spiral_s3_sym_ct6)
 attachParameter(space "space" _spiral_s3_sym_ct6)
 attachParameter(turns "nr" _spiral_s3_sym_ct6)
 attachParameter(turns "turns" _spiral_s3_sym_ct6)
 attachParameter(rad "radius" _spiral_s3_sym_ct6)
 attachParameter(rad "rad" _spiral_s3_sym_ct6)
 attachParameter(rad "rad" _spiral_s3_sym_ct6)
 saveProperty(_spiral_s3_sym_ct6 "model" "spiral_s3_sym_ct")
 if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _spiral_s3_sym_ct6 "spiral_s3_sym_ct _spiral_s3_sym_ct6 ind_sym_ct"))

extractBJT("PV" _pnp2 psub("C") nw_net("B") pdiff_net("E") spiceModel("pnp2")
    cellView("vpnp ivpcell tsmc18rf"))
area=measureParameter(area (_pnp2))
perimeter=measureParameter(perimeter (_pnp2))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _pnp2)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _pnp2)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pnp2 "PV _pnp2  vpnp pnp2"))
saveProperty(_pnp2 "model" "pnp2")

extractBJT("PV" _pnp5 psub("C") nw_net("B") pdiff_net("E") spiceModel("pnp5")
    cellView("vpnp ivpcell tsmc18rf"))
area=measureParameter(area (_pnp5))
perimeter=measureParameter(perimeter (_pnp5))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _pnp5)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _pnp5)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pnp5 "PV _pnp5  vpnp pnp5"))
saveProperty(_pnp5 "model" "pnp5")

extractBJT("PV" _pnp10 psub("C") nw_net("B") pdiff_net("E") spiceModel("pnp10")
    cellView("vpnp ivpcell tsmc18rf"))
area=measureParameter(area (_pnp10))
perimeter=measureParameter(perimeter (_pnp10))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _pnp10)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _pnp10)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pnp10 "PV _pnp10  vpnp pnp10"))
saveProperty(_pnp10 "model" "pnp10")

extractBJT("P1" _pnp2_3 psub("C") nw_net("B") pdiff_net("E")
    spiceModel("pnp2_3") cellView("vpnp3 ivpcell tsmc18rf"))
area=measureParameter(area (_pnp2_3))
perimeter=measureParameter(perimeter (_pnp2_3))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _pnp2_3)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _pnp2_3)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pnp2_3 "P1 _pnp2_3  vpnp3 pnp2_3"))
saveProperty(_pnp2_3 "model" "pnp2_3")

extractBJT("P1" _pnp5_3 psub("C") nw_net("B") pdiff_net("E")
    spiceModel("pnp5_3") cellView("vpnp3 ivpcell tsmc18rf"))
area=measureParameter(area (_pnp5_3))
perimeter=measureParameter(perimeter (_pnp5_3))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _pnp5_3)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _pnp5_3)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pnp5_3 "P1 _pnp5_3  vpnp3 pnp5_3"))
saveProperty(_pnp5_3 "model" "pnp5_3")

extractBJT("P1" _pnp10_3 psub("C") nw_net("B") pdiff_net("E")
    spiceModel("pnp10_3") cellView("vpnp3 ivpcell tsmc18rf"))
area=measureParameter(area (_pnp10_3))
perimeter=measureParameter(perimeter (_pnp10_3))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _pnp10_3)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _pnp10_3)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _pnp10_3 "P1 _pnp10_3  vpnp3 pnp10_3"))
saveProperty(_pnp10_3 "model" "pnp10_3")

extractBJT("NV" _npn2 DNW("C") psub("B") ndiff_net("E") spiceModel("npn2")
    cellView("npn ivpcell tsmc18rf"))
area=measureParameter(area (_npn2))
perimeter=measureParameter(perimeter (_npn2))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _npn2)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _npn2)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _npn2 "NV _npn2  npn npn2"))
saveProperty(_npn2 "model" "npn2")

extractBJT("NV" _npn5 DNW("C") psub("B") ndiff_net("E") spiceModel("npn5")
    cellView("npn ivpcell tsmc18rf"))
area=measureParameter(area (_npn5))
perimeter=measureParameter(perimeter (_npn5))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _npn5)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _npn5)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _npn5 "NV _npn5  npn npn5"))
saveProperty(_npn5 "model" "npn5")

extractBJT("NV" _npn10 DNW("C") psub("B") ndiff_net("E") spiceModel("npn10")
    cellView("npn ivpcell tsmc18rf"))
area=measureParameter(area (_npn10))
perimeter=measureParameter(perimeter (_npn10))
area=calculateParameter(area * 1.0e-12)
attachParameter(area "area" _npn10)
pj=calculateParameter(perimeter * 1.0e-6)
attachParameter(pj "pj" _npn10)
if( avSwitch("FLAG_ALL_DEVICES") then errorLayer( _npn10 "NV _npn10  npn npn10"))
saveProperty(_npn10 "model" "npn10")
;
;
;#############################################
;# ERC CHECK                                 #
;#############################################
; Nodes with a path to power but not ground 
;ERC PATHCHK GROUND && !POWER....not support
; Nodes with a path to ground but not power 
;ERC PATHCHK POWER && !GROUND....not support
; Nodes without a path to power and ground 
;ERC PATHCHK !POWER && !GROUND...not support
;ERC PATHCHK !LABELED....not support
; ptap connect to POWER 
 ppvdd49 = geomGetNet( ptap  "VDD" "AVDD" "VD33" "VDDSA" "VDDPST" "VDD5V" "VDDG" "AVD33" "AVDDR" "AVDDG" "AVDDB" "AVDDBG" "AVD33R" "AVD33G" "AVD33B" "AVDWELL" "VDWELL" "AVD33WELL" "VD33WELL" "TAVDD" "TAVD33" "TAVD33PST" "TAVDDPST" "DVDD")
 errorLayer( ppvdd49 "ptap connected to POWER !") 
; MOS N S/D connect to POWER&GROUND --mnpg*/
 N1tndiff = geomGetNet( ndiff_net  "VDD" "AVDD" "VD33" "VDDSA" "VDDPST" "VDD5V" "VDDG" "AVD33" "AVDDR" "AVDDG" "AVDDB" "AVDDBG" "AVD33R" "AVD33G" "AVD33B" "AVDWELL" "VDWELL" "AVD33WELL" "VD33WELL" "TAVDD" "TAVD33" "TAVD33PST" "TAVDDPST" "DVDD")
 T1tndiff = geomButtOrOver(ngate  N1tndiff)
 N2tndiff = geomGetNet( ndiff_net  "GND" "AGND" "VSS" "AVSS" "VS33" "VSSPST" "VSSG" "AVS33" "AVSSR" "AVSSG" "AVSSB" "AVSSBG" "AVS33R" "AVS33G" "AVS33B" "AVSSUB" "VSSUB" "AVS33SUB" "VS33SUB" "TAVSS" "TAVSSPST" "DVSS")
 T2tndiff = geomButtOrOver(ngate  N2tndiff)
 mnpg = geomAnd(T1tndiff T2tndiff)
 errorLayer( mnpg "MOS connected to both power and ground !")
; MOS P S/D connect to POWER&GROUND --mppg*/
 N1tpdiff = geomGetNet( pdiff_net  "VDD" "AVDD" "VD33" "VDDSA" "VDDPST" "VDD5V" "VDDG" "AVD33" "AVDDR" "AVDDG" "AVDDB" "AVDDBG" "AVD33R" "AVD33G" "AVD33B" "AVDWELL" "VDWELL" "AVD33WELL" "VD33WELL" "TAVDD" "TAVD33" "TAVD33PST" "TAVDDPST" "DVDD")
 T1tpdiff = geomButtOrOver( pgate N1tpdiff)
 N2tpdiff = geomGetNet( pdiff_net  "GND" "AGND" "VSS" "AVSS" "VS33" "VSSPST" "VSSG" "AVS33" "AVSSR" "AVSSG" "AVSSB" "AVSSBG" "AVS33R" "AVS33G" "AVS33B" "AVSSUB" "VSSUB" "AVS33SUB" "VS33SUB" "TAVSS" "TAVSSPST" "DVSS")
 T2tpdiff = geomButtOrOver( pgate N2tpdiff)
 mppg = geomAnd(T1tpdiff T2tpdiff)
 errorLayer( mppg "MOS connected to both power and ground !")
; ntap connect to GROUND 
 npvss49 = geomGetNet( ntap  "GND" "AGND" "VSS" "AVSS" "VS33" "VSSPST" "VSSG" "AVS33" "AVSSR" "AVSSG" "AVSSB" "AVSSBG" "AVS33R" "AVS33G" "AVS33B" "AVSSUB" "VSSUB" "AVS33SUB" "VS33SUB" "TAVSS" "TAVSSPST" "DVSS")
 errorLayer( npvss49 "ntap connected to GROUND !") 

)

