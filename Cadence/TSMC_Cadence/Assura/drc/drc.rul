/* ********************************************************************
;  *  0.18um ASSURA DRC COMMAND FILE    UM18S3_6M.13b  04/26/04       *
;  *  FOR TSMC 0.18um MIXED SIGNAL/RF 1P6M SALICIDE 1.8V/3.3V PROCESS *
;  *  (DESIGN RULE DOCUMENT: (Old) TA-10A9-4001                       *
;  *                         (New) T-018-MM-DR-001 Rev 1.3            * 
;  ******************************************************************** 
;
;  DISCLAIMER
;
;  The information contained herein is provided by TSMC on an "AS IS" basis
;  without any warranty, and TSMC has no obligation to support or otherwise
;  maintain the information.  TSMC disclaims any representation that the
;  information does not infringe any intellectual property rights or proprietary
;  rights of any third parties.  There are no other warranties given by TSMC,
;  whether express, implied or statutory, including, without limitation, implied
;  warranties of merchantability and fitness for a particular purpose.
;
;  STATEMENT OF USE
;
;  This information contains confidential and proprietary information of TSMC.
;  No part of this information may be reproduced, transmitted, transcribed,
;  stored in a retrieval system, or translated into any human or computer
;  language, in any form or by any means, electronic, mechanical, magnetic,
;  optical, chemical, manual, or otherwise, without the prior written permission
;  of TSMC.  This information was prepared for informational purpose and is for
;  use by TSMC's customers only.  TSMC reserves the right to make changes in the
;  information at any time and without notice.
;
;-----------------------------------------------------------------------------------
;
;   NOTICE: (Read Me First!)
;
;   1. The error output are divided into two groups: errors
;      and recommendations which are reported to the output
;      layer 63 and 64 respectively.
;    - Errors are corresponding to the rule violations. Any
;      violation will stop the mask making.
;    - Recommendations are suggestions for design guideline.
;      It is only for reference.
;
;   2. If the input GDS file does not include all the layers in the
;      INPUT LAYER BLOCK, for example, they are generated by logic
;      operations, please make sure the consistence with original
;      layer definition.
;
;   3. N2V/P2V/N3V/P3V layers of TSMC library is generated by logic operation.
;
;---------------------------------------------------------------
;
;   REVISION:
;   04/26/04 - VER 1.3a Yating Chuang   
;              Newly created.
;****************  DUMMY LAYER REQUIRED ************************
;
;   1) HOTWL- Hot N-Well
;             N-Well not connected to the most positive
;             voltage Vdd is defined as Hot N-Well. It
;             must follow different width and space rules
;             from the N-Well connected to Vdd (Cold N-
;             Well). Use "HOTWL" layer to exactly cover
;             the Hot N-Well area for correct N-Well DRC.
;
;   2) EXCL - unDRC area
;             If there's any area with different rules
;             and not to be checked in this run, use the
;             "EXCL" layer to exactly cover the area to
;             be excluded.
;
;   3) SDI - I/O ESD Protection Circuit
;            For I/O guidance rule checking, use "SDI"
;            layer to designate the ESD area to checked.
;            The whole ESD devices should be covered by
;            "SDI".
;
;   4) DPDMY - Dummy Pad area
;            For chip corner dummy pad, use "DPDUMMY" layer to
;            cover dummy pad area.
;
;   5) PLDMY - Power Line
;            For chip corner power line, use "PLDUMMY" layer to
;            cover whole power line area.
;
;   6) DRCDMY - TSMC reserved layer
;      DRCDMY2  For internal usage of TSMC, please don't use
;               this layer.
;
;   7) RWDMY- NWell Resistor
;             The N-Well region covered by both RWDMY and
;             RPO is the NW within OD resistor.
;             The N-Well region covered by only RWDMY is
;             the NW under STI resistor.
;
;   8) RLPPDMY - LPP high resistance poly resistor
;             Use "RLPPDMY" to exactly cover LPP high resistance
;             poly resistor area
;
;****************  CURRENT STATUS  *****************************
;
;   RULES NOT IMPLEMENTED:
;     1) M1.R.1-M6.R.1 (Density of Metal area >= 30%)
;     2) Partial I/O ESD GuideLine implemented: 4,5,6,9
;     3) Partial LatchUp GuideLine implemented: 2,3
;     4) Partial Stress Release Rule implemented: ADP.S.1,2,4/ADP.C.1,2/
;        ADP.E.1,2/ADP.W.3,4/AMS.1
;     5) PO.R.3,CTM.R.2,M6T.R.1 (Density rules) 
;     6) NT_N.E.1,RPO.O.1 (Max extension rule)
;     7) Passivation rule and metal Fuse are moved to separate document.
;     8) Seal ring rule
;
;*****************  CURRENT USAGE *********************************
;     1) GridCheck :
;        Default is turn off, please turn on this option in the switch form if you want the offgrid check.
;
;     2) HIGH_VOLTAGE:
;	 Default 3.3V is used as high (I/O) voltage.
;	 If other high voltage is used, please DEFINE other variables. 
;        For example,if 2.5V is used as high voltage, then the settings should be:
;		        HIGH_VOLTAGE = 2.5
;        
;	 If 5V is enabled, NT_N rule sections will be disabled.
;
;        CORE_VOLTAGE:
;	 Default 1.8V is used as core voltage.
;	 If lower core voltages are used, please DEFINE another variables. 
;        For example, if 1.5V is used as core voltage, then the settings should be change as:
;
;		         CORE_VOLTAGE = 1.5 
;     3) variable for wire bond structure:
;      
;        If CUP(circuit under pad) structure is used, the setting should be:
;              		 CUP = 1 
;        else, turn off it (default):
;                        CUP = 0
;      
; ATTENTION NOTICE !!!
;==================================================
; Please select proper thickness option of the top metal.
; The default is thick top metal( THICK = 1 ).If using normal
; top metal, please change to THICK = 0.
*/
/*RULES NOT IMPLEMENTED*/
/***********************/
/**/
/************************/
HIGH_VOLTAGE = 3.3
/* HIGH_VOLTAGE = 2.5 */
/* HIGH_VOLTAGE = 5 */
CORE_VOLTAGE = 1.8
/* CORE_VOLTAGE = 1.5 */
THICK = 1;
CUP = 0

drcExtractRules(

layerDefs( "df2"
	nweli	 = layer( "NWELL" ) 
	/*  nwell technology */
	diffi	 = layer( "DIFF" ) 
	/*  active areas */
	pdiffi	 = layer( "PDIFF" ) 
	/*  active areas */
	ndiffi	 = layer( "NDIFF" ) 
	/*  active areas */
	od2i	 = layer( "OD2" ) 
	/*  define thick gate oxides */
	polyi	 = layer( "POLY1" ) 
	/*  polysilicon gates, interconnect */
	ppi	 = layer( "PIMP" ) 
	/*  P+ S/D imlant */
	npi	 = layer( "NIMP" ) 
	/*  N+ S/D imlant */
	coi	 = layer( "CONT" ) 
	/*  Define connect for M1 to S/D and Gate */
	m1i	 = layer( "METAL1"  type("drawing") ) 
	/*  First Metal layer */
	via1i	 = layer( "VIA12" ) 
	/*  Define connect for M2 to M1 */
	m2i	 = layer( "METAL2"  type("drawing") ) 
	/*  Second Metal layer */
	via2i	 = layer( "VIA23" ) 
	/*  Define connect for M3 to M2 */
	m3i	 = layer( "METAL3"  type("drawing") ) 
	/*  Third Metal layer */
	via3i	 = layer( "VIA34" ) 
	/*  Define connect for M4 to M3 */
	m4i	 = layer( "METAL4"  type("drawing") ) 
	/*  Fourth Metal layer */
	via4i	 = layer( "VIA45" ) 
	/*  Define connect for M5 to M4 */
	m5i	 = layer( "METAL5"  type("drawing") ) 
	/*  Fifth Metal layer */
	via5i	 = layer( "VIA56" ) 
	/*  Define connect for MTOP to 5 */
	m6i	 = layer( "METAL6"  type("drawing") ) 
	/*  Sixth Metal layer   */
	viadi	 = layer( "VIAD" ) 
	/*  Define connect form top metal to MD */
	mdi	 = layer( "MD"  type("drawing") ) 
	/*  Definition of metal above MTop for redistribution interconnection */
	cbi	 = layer( "PAD" ) 
	/*  Passivation opening for Bond Pad */
	cbdi	 = layer( "CBD" ) 
	/*  Definition of passivation window for bump */
	ubmi	 = layer( "UBM" ) 
	/*  Bond pad definition for RDL */
	rpoi	 = layer( "RPO" ) 
	/*  Silicided Block Layer */
	ntni	 = layer( "NTN" ) 
	/*  Native NMOS blocked implantation */
	plmidei	 = layer( "PLMIDE" ) 
	/*  Polymide (if drawn) */
	dnwi	 = layer( "DNW" ) 
	/*  Deep N-WELL */
	vtmpi	 = layer( "VTM_P" ) 
	/*  blocking region of PMOS VT implantation */
	vtmni	 = layer( "VTM_N" ) 
	/*  blocking region of NMOS VT implantation */
	hrii	 = layer( "HRI" ) 
	/*  high resistor implant */
	m1sloti	 = layer( "METAL1"  type("slot") ) 
	/*  Metal1 slot (if drawn) */
	m2sloti	 = layer( "METAL2"  type("slot") ) 
	/*  Metal2 slot (if drawn) */
	m3sloti	 = layer( "METAL3"  type("slot") ) 
	/*  Metal3 slot (if drawn) */
	m4sloti	 = layer( "METAL4"  type("slot") ) 
	/*  Metal4 slot (if drawn) */
	m5sloti	 = layer( "METAL5"  type("slot") ) 
	/*  Metal5 slot (if drawn) */
	m6sloti	 = layer( "METAL6"  type("slot") ) 
	/*  Metal6 slot (if drawn) */
	mdsloti	 = layer( "MD"  type("slot") ) 
	/*  MD slot (if drawn) */
	m1dmy	 = layer( "METAL1"  type("dummy") ) 
	
	m2dmy	 = layer( "METAL2"  type("dummy") ) 
	
	m3dmy	 = layer( "METAL3"  type("dummy") ) 
	
	m4dmy	 = layer( "METAL4"  type("dummy") ) 
	
	m5dmy	 = layer( "METAL5"  type("dummy") ) 
	
	m6dmy	 = layer( "METAL6"  type("dummy") ) 
	
	mddmy	 = layer( "MD"  type("dummy") ) 
	
	ctm2i	 = layer( "CTM2"  type("drawing") ) 
	/*  Capacitor Top Metal-2 */
	ctm3i	 = layer( "CTM3"  type("drawing") ) 
	/*  Capacitor Top Metal-3 */
	ctm4i	 = layer( "CTM4"  type("drawing") ) 
	/*  Capacitor Top Metal-4 */
	ctm5i	 = layer( "CTM5"  type("drawing") ) 
	/*  Capacitor Top Metal-5 */
	hotwl	 = layer( "HOTWL" ) 
	/*  Hot N-Well (SEE README HOT_NWEL NOTES) */
	excl	 = layer( "EXCL" ) 
	/*  Exclude layer */
	drcdmy	 = layer( "DRCDUMMY" ) 
	/*  DRC I/O waiver */
	rwdmy	 = layer( "RWDUMMY" ) 
	/*  NWEL resistor dummy layer */
	dpdmy	 = layer( "DPDUMMY" ) 
	/*  dummy pad area dummy layer */
	pldmy	 = layer( "PLDUMMY" ) 
	/*  power line area dummy layer */
	sdi	 = layer( "SDI" ) 
	/*  IO ESD region dummy layer */
	esd1dmy	 = layer( "ESD1DUMMY" ) 
	/*  IO ESD region dummy layer, RPO must enclose whole gate */
	esd2dmy	 = layer( "ESD2DUMMY" ) 
	/*  IO ESD region dummy layer, RPO enclose gate 0.05 for 3.3V */
	esd3dmy	 = layer( "ESD3DUMMY" ) 
	
	ctmdmy	 = layer( "CTMDUMMY" ) 
	/*  Cover metal as a capacitor bottom plate */
	rlppdmy	 = layer( "RLPPDUMMY" ) 
	/*  HRI high Poly resistor dummy layer */
	dmn2v	 = layer( "DMN2V" ) 
	/*  dummy layer to avoid N2V in N+ poly resistor */
	dmp2v	 = layer( "DMP2V" ) 
	/*  dummy layer to avoid P2V in P+ poly resistor */
	esexcl	 = layer( "ESEXCL" ) 
	/*  dummy layer to cover SRAM cell */
	vardmy	 = layer( "VARDUMMY" ) 
	/*  dummy layer to cover varactor device */
	pmdmy	 = layer( "PMDMY" ) 
	/*  dummy layer to cover fuse window and protection ring structur */
	fwi	 = layer( "FW" ) 
	/*  Fuse window when x, (x+1) = 3  */
	lwi	 = layer( "LW"  type("drawing") ) 
	/*  L target window for bump process */
	esdi	 = layer( "ESD" ) 
	/*  For 0.18um 1.8V/5V on i/o esd's implant only. */
	inddmy	 = layer( "INDDUMMY"  type("drawing") ) 
	/*  dummy layer to define inductor */
	)
layerDefs( "gds2"
	nweli	 = layer( 2 ) 
	/*  nwell technology */
	diffi	 = layer( 3 ) 
	/*  active areas */
	pdiffi	 = layer( 11 ) 
	/*  active areas */
	ndiffi	 = layer( 12 ) 
	/*  active areas */
	od2i	 = layer( 4 ) 
	/*  define thick gate oxides */
	polyi	 = layer( 13 ) 
	/*  polysilicon gates, interconnect */
	ppi	 = layer( 7 ) 
	/*  P+ S/D imlant */
	npi	 = layer( 8 ) 
	/*  N+ S/D imlant */
	coi	 = layer( 15 ) 
	/*  Define connect for M1 to S/D and Gate */
	m1i	 = layer( 16 type( 0 ( 3:255 ) ) ) 
	/*  First Metal layer */
	via1i	 = layer( 17 ) 
	/*  Define connect for M2 to M1 */
	m2i	 = layer( 18 type( 0 ( 3:255 ) ) ) 
	/*  Second Metal layer */
	via2i	 = layer( 27 ) 
	/*  Define connect for M3 to M2 */
	m3i	 = layer( 28 type( 0 ( 3:255 ) ) ) 
	/*  Third Metal layer */
	via3i	 = layer( 29 ) 
	/*  Define connect for M4 to M3 */
	m4i	 = layer( 31 type( 0 ( 3:255 ) ) ) 
	/*  Fourth Metal layer */
	via4i	 = layer( 32 ) 
	/*  Define connect for M5 to M4 */
	m5i	 = layer( 33 type( 0 ( 3:255 ) ) ) 
	/*  Fifth Metal layer */
	via5i	 = layer( 39 ) 
	/*  Define connect for MTOP to 5 */
	m6i	 = layer( 38 type( 0 ( 3:255 ) ) ) 
	/*  Sixth Metal layer   */
	viadi	 = layer( 167 ) 
	/*  Define connect form top metal to MD */
	mdi	 = layer( 168 type( 0 ( 3:255 ) ) ) 
	/*  Definition of metal above MTop for redistribution interconnection */
	cbi	 = layer( 19 ) 
	/*  Passivation opening for Bond Pad */
	cbdi	 = layer( 169 ) 
	/*  Definition of passivation window for bump */
	ubmi	 = layer( 170 ) 
	/*  Bond pad definition for RDL */
	rpoi	 = layer( 34 ) 
	/*  Silicided Block Layer */
	ntni	 = layer( 129 ) 
	/*  Native NMOS blocked implantation */
	plmidei	 = layer( 89 ) 
	/*  Polymide (if drawn) */
	dnwi	 = layer( 82 ) 
	/*  Deep N-WELL */
	vtmpi	 = layer( 23 ) 
	/*  blocking region of PMOS VT implantation */
	vtmni	 = layer( 24 ) 
	/*  blocking region of NMOS VT implantation */
	hrii	 = layer( 48 ) 
	/*  high resistor implant */
	m1sloti	 = layer( 16 type(2) ) 
	/*  Metal1 slot (if drawn) */
	m2sloti	 = layer( 18 type(2) ) 
	/*  Metal2 slot (if drawn) */
	m3sloti	 = layer( 28 type(2) ) 
	/*  Metal3 slot (if drawn) */
	m4sloti	 = layer( 31 type(2) ) 
	/*  Metal4 slot (if drawn) */
	m5sloti	 = layer( 33 type(2) ) 
	/*  Metal5 slot (if drawn) */
	m6sloti	 = layer( 38 type(2) ) 
	/*  Metal6 slot (if drawn) */
	mdsloti	 = layer( 168 type(2) ) 
	/*  MD slot (if drawn) */
	m1dmy	 = layer( 16 type(1) ) 
	
	m2dmy	 = layer( 18 type(1) ) 
	
	m3dmy	 = layer( 28 type(1) ) 
	
	m4dmy	 = layer( 31 type(1) ) 
	
	m5dmy	 = layer( 33 type(1) ) 
	
	m6dmy	 = layer( 38 type(1) ) 
	
	mddmy	 = layer( 168 type(1) ) 
	
	ctm2i	 = layer( 67 type(2) ) 
	/*  Capacitor Top Metal-2 */
	ctm3i	 = layer( 67 type(3) ) 
	/*  Capacitor Top Metal-3 */
	ctm4i	 = layer( 67 type(4) ) 
	/*  Capacitor Top Metal-4 */
	ctm5i	 = layer( 67 type(5) ) 
	/*  Capacitor Top Metal-5 */
	hotwl	 = layer( 51 ) 
	/*  Hot N-Well (SEE README HOT_NWEL NOTES) */
	excl	 = layer( 55 ) 
	/*  Exclude layer */
	drcdmy	 = layer( 60 ) 
	/*  DRC I/O waiver */
	rwdmy	 = layer( 52 ) 
	/*  NWEL resistor dummy layer */
	dpdmy	 = layer( 65 ) 
	/*  dummy pad area dummy layer */
	pldmy	 = layer( 66 ) 
	/*  power line area dummy layer */
	sdi	 = layer( 58 ) 
	/*  IO ESD region dummy layer */
	esd1dmy	 = layer( 136 ) 
	/*  IO ESD region dummy layer, RPO must enclose whole gate */
	esd2dmy	 = layer( 137 ) 
	/*  IO ESD region dummy layer, RPO enclose gate 0.05 for 3.3V */
	esd3dmy	 = layer( 234 ) 
	
	ctmdmy	 = layer( 131 ) 
	/*  Cover metal as a capacitor bottom plate */
	rlppdmy	 = layer( 134 ) 
	/*  HRI high Poly resistor dummy layer */
	dmn2v	 = layer( 184 ) 
	/*  dummy layer to avoid N2V in N+ poly resistor */
	dmp2v	 = layer( 149 ) 
	/*  dummy layer to avoid P2V in P+ poly resistor */
	esexcl	 = layer( 76 ) 
	/*  dummy layer to cover SRAM cell */
	vardmy	 = layer( 138 ) 
	/*  dummy layer to cover varactor device */
	pmdmy	 = layer( 236 ) 
	/*  dummy layer to cover fuse window and protection ring structur */
	fwi	 = layer( 235 ) 
	/*  Fuse window when x, (x+1) = 3  */
	lwi	 = layer( 63 type(2) ) 
	/*  L target window for bump process */
	esdi	 = layer( 30 ) 
	/*  For 0.18um 1.8V/5V on i/o esd's implant only. */
	inddmy	 = layer( 139 type(0) ) 
	/*  dummy layer to define inductor */
	)
ivIf(switch("GridCheck") then
offGrid( nweli 0.005 1 "nweli offgrid")
offGrid( diffi 0.005 1 "diffi offgrid")
offGrid( pdiffi 0.005 1 "pdiffi offgrid")
offGrid( ndiffi 0.005 1 "ndiffi offgrid")
offGrid( od2i 0.005 1 "od2i offgrid")
offGrid( polyi 0.005 1 "polyi offgrid")
offGrid( ppi 0.005 1 "ppi offgrid")
offGrid( npi 0.005 1 "npi offgrid")
offGrid( coi 0.005 1 "coi offgrid")
offGrid( m1i 0.005 1 "m1i offgrid")
offGrid( via1i 0.005 1 "via1i offgrid")
offGrid( m2i 0.005 1 "m2i offgrid")
offGrid( via2i 0.005 1 "via2i offgrid")
offGrid( m3i 0.005 1 "m3i offgrid")
offGrid( via3i 0.005 1 "via3i offgrid")
offGrid( m4i 0.005 1 "m4i offgrid")
offGrid( via4i 0.005 1 "via4i offgrid")
offGrid( m5i 0.005 1 "m5i offgrid")
offGrid( via5i 0.005 1 "via5i offgrid")
offGrid( m6i 0.005 1 "m6i offgrid")
offGrid( viadi 0.005 1 "viadi offgrid")
offGrid( mdi 0.005 1 "mdi offgrid")
offGrid( cbi 0.005 1 "cbi offgrid")
offGrid( cbdi 0.005 1 "cbdi offgrid")
offGrid( ubmi 0.005 1 "ubmi offgrid")
offGrid( rpoi 0.005 1 "rpoi offgrid")
offGrid( ntni 0.005 1 "ntni offgrid")
offGrid( plmidei 0.005 1 "plmidei offgrid")
offGrid( dnwi 0.005 1 "dnwi offgrid")
offGrid( vtmpi 0.005 1 "vtmpi offgrid")
offGrid( vtmni 0.005 1 "vtmni offgrid")
offGrid( hrii 0.005 1 "hrii offgrid")
offGrid( m1sloti 0.005 1 "m1sloti offgrid")
offGrid( m2sloti 0.005 1 "m2sloti offgrid")
offGrid( m3sloti 0.005 1 "m3sloti offgrid")
offGrid( m4sloti 0.005 1 "m4sloti offgrid")
offGrid( m5sloti 0.005 1 "m5sloti offgrid")
offGrid( m6sloti 0.005 1 "m6sloti offgrid")
offGrid( mdsloti 0.005 1 "mdsloti offgrid")
offGrid( m1dmy 0.005 1 "m1dmy offgrid")
offGrid( m2dmy 0.005 1 "m2dmy offgrid")
offGrid( m3dmy 0.005 1 "m3dmy offgrid")
offGrid( m4dmy 0.005 1 "m4dmy offgrid")
offGrid( m5dmy 0.005 1 "m5dmy offgrid")
offGrid( m6dmy 0.005 1 "m6dmy offgrid")
offGrid( mddmy 0.005 1 "mddmy offgrid")
offGrid( ctm2i 0.005 1 "ctm2i offgrid")
offGrid( ctm3i 0.005 1 "ctm3i offgrid")
offGrid( ctm4i 0.005 1 "ctm4i offgrid")
offGrid( ctm5i 0.005 1 "ctm5i offgrid")
offGrid( hotwl 0.005 1 "hotwl offgrid")
offGrid( excl 0.005 1 "excl offgrid")
offGrid( drcdmy 0.005 1 "drcdmy offgrid")
offGrid( rwdmy 0.005 1 "rwdmy offgrid")
offGrid( dpdmy 0.005 1 "dpdmy offgrid")
offGrid( pldmy 0.005 1 "pldmy offgrid")
offGrid( sdi 0.005 1 "sdi offgrid")
offGrid( esd1dmy 0.005 1 "esd1dmy offgrid")
offGrid( esd2dmy 0.005 1 "esd2dmy offgrid")
offGrid( esd3dmy 0.005 1 "esd3dmy offgrid")
offGrid( ctmdmy 0.005 1 "ctmdmy offgrid")
offGrid( rlppdmy 0.005 1 "rlppdmy offgrid")
offGrid( dmn2v 0.005 1 "dmn2v offgrid")
offGrid( dmp2v 0.005 1 "dmp2v offgrid")
offGrid( esexcl 0.005 1 "esexcl offgrid")
offGrid( vardmy 0.005 1 "vardmy offgrid")
offGrid( pmdmy 0.005 1 "pmdmy offgrid")
offGrid( fwi 0.005 1 "fwi offgrid")
offGrid( lwi 0.005 1 "lwi offgrid")
offGrid( esdi 0.005 1 "esdi offgrid")
offGrid( inddmy 0.005 1 "inddmy offgrid")
)

/*  */
/*  ENVIRONMENT SETUP */
/* ------------------ */
/*  DRAWN LAYER DEFINITIONS */
/* ------------------------ */
/* LAYER  FUSEi       235 // Fuse window */
/*  */
/*  Metal Slot layers */
/*  */
/*  */
/*  Dummy Metal layers */
/*  */
/*  */
/*  Capacitor Top Metal Layers */
/*  */
/*  */
/*  Dummy Layers */
/*  */
 diffi_or1 =  geomOr(diffi ndiffi)  
 odi = geomOr(diffi_or1 pdiffi)  
 nrodi = geomAndNot(odi rpoi)  
 npodi = geomAnd(npi nrodi)  
 ppodi = geomAnd(ppi nrodi)  
 nonwri = geomAndNot(nweli geomButtOrOver(nweli rwdmy))  /*  NWEL - NWR(OD) - NWR(STI) */ 
/* NTAPi  = NPODi AND NWELi */
 ntapi = geomAnd(npodi nonwri)  /*  NWELL pick up */
 pacti = geomAnd(ppodi nonwri)  /*  PMOSi   */
 psdi = geomAndNot(pacti polyi)  /*  PMOS source/drain,separated */
 ilp1i = geomAndNot(polyi rpoi)  /*  interconnection poly */
 m1i_or1 =  geomOr(m1i m1dmy)  
 m1xd = geomAndNot(m1i_or1 m1sloti)  
 m2i_or1 =  geomOr(m2i m2dmy)  
 m2xd = geomAndNot(m2i_or1 m2sloti)  
 m3i_or1 =  geomOr(m3i m3dmy)  
 m3xd = geomAndNot(m3i_or1 m3sloti)  
 m4i_or1 =  geomOr(m4i m4dmy)  
 m4xd = geomAndNot(m4i_or1 m4sloti)  
 m5i_or1 =  geomOr(m5i m5dmy)  
 m5xd = geomAndNot(m5i_or1 m5sloti)  
 m6i_or1 =  geomOr(m6i m6dmy)  
 m6xd = geomAndNot(m6i_or1 m6sloti)  
 mdi_or1 =  geomOr(mdi mddmy)  
 mdxd = geomAndNot(mdi_or1 mdsloti)  
/* /////////////////////////////////////////////////////////////////////////////// */
/*  */
/*  GLOBAL DERIVED LAYERS FOR RULE CHECKS */
/* -------------------------------------- */
 chip = geomBkgnd()  
 bulk = geomSize( chip 1.0 noClipAcute )   
 pweli = geomAndNot(bulk nweli)  
 pwel = geomAndNot(pweli excl)  
/*  */
/*  EXCLUDE UNCHECKED REGIONS */
/* -------------------------- */
 nwel = geomAndNot(nweli geomInside(nweli excl))   
 od = geomAndNot(odi excl)  
 od2 = geomAndNot(od2i excl)  
 poly = geomAndNot(polyi excl)  
 pp = geomAndNot(ppi geomInside(ppi excl))   
 np = geomAndNot(npi geomInside(npi excl))   
 co = geomAndNot(coi excl)  
 m1 = geomAndNot(m1xd excl)  
 via1 = geomAndNot(via1i excl)  
 m2 = geomAndNot(m2xd geomInside(m2xd excl))   
 via2 = geomAndNot(via2i geomInside(via2i excl))   
 m3 = geomAndNot(m3xd geomInside(m3xd excl))   
 via3 = geomAndNot(via3i geomInside(via3i excl))   
 m4 = geomAndNot(m4xd geomInside(m4xd excl))   
 via4 = geomAndNot(via4i geomInside(via4i excl))   
 m5 = geomAndNot(m5xd geomInside(m5xd excl))   
 via5 = geomAndNot(via5i geomInside(via5i excl))   
 m6 = geomAndNot(m6xd geomInside(m6xd excl))   
 viad = geomAndNot(viadi geomInside(viadi excl))   
 md = geomAndNot(mdxd geomInside(mdxd excl))   
 cb = geomAndNot(cbi excl)  
 rpo = geomAndNot(rpoi excl)  
 ntn = geomAndNot(ntni excl)  
/* FUSE    = FUSEi  NOT EXCL */
 fw = geomAndNot(fwi excl)  
 lw = geomAndNot(lwi excl)  
 dnw = geomAndNot(dnwi excl)  
 vtmp = geomAndNot(vtmpi excl)  
 vtmn = geomAndNot(vtmni excl)  
 hri = geomAndNot(hrii excl)  
 ctm2 = geomAndNot(ctm2i excl)  
 ctm3 = geomAndNot(ctm3i excl)  
 ctm4 = geomAndNot(ctm4i excl)  
 ctm5 = geomAndNot(ctm5i excl)  
 npod = geomAnd(np od)  /*  N+ OD region */
 ppod = geomAnd(pp od)  /*  P+ OD region */
 rnwel = geomButtOrOver( nwel rwdmy  )  /*  NWEL resistor (UNDER OD & STI) */ 
 nonwr = geomAndNot(nwel rnwel)  /*  NWEL - NWR(OD) - NWR(STI) */
 ntap = geomAnd(npod nonwr)  /*  NWEL tap diffusion */
 nact = geomAndNot(npod nwel)  /*  NMOS device active diffusion */
 ptap = geomAndNot(ppod nwel)  /*  Substrate (pwell) tap diffusion */
 pact = geomAnd(ppod nwel)  
 dact = geomOr(nact pact)  
 all_gate = geomAnd(poly od)  /*  Gate regions for NMOS and PMOS */
 poly_iso = geomAndNot(poly od)  /*  Interconnect POLY */
 lvgt = geomAndNot(all_gate od2)  /*  1.8V gate */
 hvgt = geomAnd(all_gate od2)  /*  3.3V gate */
 gate_w = geomGetEdge(poly inside od)  /*  Gate width */ 
 fpo1 = geomCat(poly_iso)  /*  field poly */ 
 pores = geomAnd(fpo1 rpo)  /*  POLY resistor region */
 ilp1 = geomAndNot(poly_iso rpo)  /*  interconnection poly */
 dmp2v_or1 =  geomOr(dmp2v dmn2v)  /* high resistance poly resistor dummy layer for DRC */
 hrdmy = geomOr(dmp2v_or1 rlppdmy)  /* high resistance poly resistor dummy layer for DRC */
 hrep = geomAnd(pores hrdmy)  /*  high precision and resistacne poly resistor */
 hvn_gox = geomAnd(npod od2)  /*  Device n-type diffusion for thick gate NMOS */
 hvp_gox = geomAnd(ppod od2)  /*  Device p-type diffusion for thick gate PMOS */
 hv_ngate_w = geomGetEdge(gate_w inside hvn_gox)  /*  3.3V NMOS gate edges */ 
 hv_pgate_w = geomGetEdge(gate_w inside hvp_gox)  /*  3.3V PMOS gate edges */ 
 butt_ntap = geomButtOnly(geomOutside(ntap pact) pact )  /*  NWEL tap butting p-type active diffusion */ 
 butt_ptap = geomButtOnly(geomOutside(ptap nact) nact )  /*  Pwell tap butting n-type active diffusion */ 
 pp_bedge = geomGetEdge(butt_ptap butting nact)  /*  PP edge to form butted tap */ 
 np_bedge = geomGetEdge(butt_ntap butting pact)  /*  NP edge to form butted tap */ 
 od2_bedge = geomGetEdge(od2 inside od)   
 act_od = geomButtOrOver( od poly  )   
 pnsd = geomAndNot(act_od all_gate)  
 co_diff = geomOutside( co poly_iso  )  /*  Diffusion contacts + floating contacts */ 
 co_poly = geomAndNot(co geomOutside(co poly_iso))  /*  POLY contacts */ 
 gate_np = geomAnd(all_gate np)  
 gate_pp = geomAnd(all_gate pp)  
/*  For checks such as N2V.C.4: */
 gate_np_sz1 =  geomSize( gate_np 0.03 noClipAcute )   
 gate_np_sz1_and1 =  geomAnd(gate_np_sz1 poly)  
 exgate_np = geomSize( gate_np_sz1_and1 0.32 noClipAcute )   
 gate_pp_sz1 =  geomSize( gate_pp 0.03 noClipAcute )   
 gate_pp_sz1_and1 =  geomAnd(gate_pp_sz1 poly)  
 exgate_pp = geomSize( gate_pp_sz1_and1 0.32 noClipAcute )   
 imp = geomOr(pp np)  
 asd1 = geomEnclose( pnsd co_diff  )   
 cb_or1 =  geomOr(cb fw)  
 fuse_lmark = geomOr(cb_or1 lw)  
 rngx = geomAndNot(pmdmy fuse_lmark)  
if(!(HIGH_VOLTAGE == 3.3) then
if(!(HIGH_VOLTAGE == 2.5) then
if(!(HIGH_VOLTAGE == 5) then
 errorLayer( geomCat(chip) 
	"OPTION.HIGH_VOLTAGE  There must be specified an option of HIGH_VOLTAGE ")  
) ; 
) ; 
) ; 
if(!(CORE_VOLTAGE == 1.8) then
if(!(CORE_VOLTAGE == 1.5) then
 errorLayer( geomCat(chip) 
	"OPTION.CORE_VOLTAGE  There must be specified an option of CORE_VOLTAGE ")  
) ; 
) ; 
/*  */
/*  NWEL CHECKS */
/* ============= */
/* Exclude the via upon CTM region */
 viat = geomAndNot(via5i geomButtOrOver(via5i ctm5i))   
 viac = geomAnd(via5i ctm5i)  
 co_ilp1i = geomAnd(coi ilp1i)
 co_ntapi = geomAnd(coi ntapi)
 co_psdi = geomAnd(coi psdi)
geomConnect(
	buttOrOver(ntapi nweli)
	buttOrOver(ntapi psdi)
	via(co_ilp1i m1xd ilp1i)
	via(co_ntapi m1xd ntapi)
	via(co_psdi m1xd psdi)
	via(via1i m1xd m2xd)
	via(via2i m2xd m3xd)
	via(via3i m3xd m4xd)
	via(via4i m4xd m5xd)
	via(viat m5xd m6xd)
	via(viac m6xd ctm5i)
	via(viadi m6xd mdxd)
)

 nwel_and1 =  geomAnd(nwel hotwl)  
 hot_nwel = geomOr(nwel_and1 rnwel)  
 drc( nwel   width < 0.86  withCornerTouch 
	"NW.W.1  Minimum NWEL width < 0.86 ")  
 drc( hot_nwel   width < 2.10  withCornerTouch 
	"NW.W.2  Minimum HOT_NWEL width < 2.10 ")  
geomStamp(nwel nweli)
 drc( nwel   sep < 1.40  diffNet shielded 
	"NW.S.1  Minimum different potential NWEL space < 1.40 ")  
 drc( rnwel nwel  sep < 1.40  
	"NW.S.1 2  Minimum different potential NWEL space < 1.40 ")  
 drc( rnwel   sepNotch < 1.40  
	"NW.S.1 3  Minimum different potential NWEL space < 1.40 ")  
 drc( nwel   sepNotch < 0.60  
	"NW.S.2  Minimum same potential NWEL space < 0.6 ")  
/*  NWEL (within OD) RESISTOR CHECKS */
/* ==================================== */
 nwres = geomButtOrOver( rnwel rpo  )  /*  NWEL resistor (UNDER OD) */ 
 odwr = geomButtOrOver( od nwres  )  /*  OD area of NW resistor */ 
 npwr = geomButtOrOver( np nwres  )  /*  N+ implant on NW resistor terminals */ 
 cowr = geomButtOrOver( co_diff nwres  )  /*  Contact on NW resistor terminals */ 
 rhwr = geomAndNot(odwr rpo)  /*  Non-Silicided area of NW resistor */
 drc( odwr nwres  enc < 1.0  shielded 
	"NWR.E.1  Min. OD enclose NWEL resistor < 1.0 ")  
 errorLayer( geomStraddle(nwres odwr) 
	"NWR.E.1  Min. OD enclose NWEL resistor < 1.0 ") 
 drc( nwres cowr  enc < 0.3  shielded 
	"NWR.E.2  Min. NWEL resistor enclose CO < 0.3 ")  
 errorLayer( geomStraddle(cowr nwres) 
	"NWR.E.2  Min. NWEL resistor enclose CO < 0.3 ") 
 drc( rhwr nwres  enc < 0.3  shielded 
	"NWR.C.1  Min. RPO hole enclose NWEL < 0.3 ")  
 drc( rpo odwr  enc < 0.22  shielded 
	"NWR.C.2  Min. RPO enclose OD (with NWEL resistor) < 0.22 ")  
 drc( rhwr cowr  enc < 0.3  shielded 
	"NWR.C.3  Min. RPO hole enclose NWEL resistor CO < 0.3 ")  
 errorLayer( geomStraddle(cowr rhwr) 
	"NWR.C.3  Min. RPO hole enclose NWEL resistor CO < 0.3 ") 
 drc( npwr rpo  ovlp < 0.4  shielded 
	"NWR.O.1  Min. RPO overlap NP < 0.4 ")  
 nwro1_x = geomButtOrOver( rpo nwres  )   
 nwro1_x_gh1 = geomGetHoled(nwro1_x)	
 nwro1_x_ho1 = geomHoles(nwro1_x_gh1)
 nwro1_x_ho1_not1 = geomAndNot(nwro1_x_ho1 nwro1_x_gh1)
 nwro1_x_ho1_not11 = geomGetHoled(nwro1_x_ho1_not1)
 nwro11_h = geomAndNot(nwro1_x_ho1_not1 nwro1_x_ho1_not11)   
 errorLayer( geomAndNot(nwro11_h npwr) 
	"NWR.O.1 2  Min. RPO overlap NP < 0.4 ") 
 errorLayer( geomAnd(rwdmy npod) 
	"NWR.R.1  NW resistor doped by implants not allowed. ") 
 errorLayer( geomAnd(rwdmy ppod) 
	"NWR.R.1 2  NW resistor doped by implants not allowed. ") 
/* NWEL under STI */
 nwres_sti = geomAndNot(rnwel geomButtOrOver(rnwel rpo))  /*  NWEL resistor (UNDER STI) */ 
 odwr_sti = geomButtOrOver( od nwres_sti  )   
 npwr_sti = geomButtOrOver( np nwres_sti  )   
 drc( npwr_sti odwr_sti  enc < 0.18  shielded 
	"NWR.E.3  Min. extension of NP to OD (NWEL resistor under STI) 0.18 um ")  
 errorLayer( geomAndNot(odwr_sti npwr_sti) 
	"NWR.E.3 2  Min. extension of NP to OD (NWEL resistor under STI) 0.18 um ") 
/*  OD CHECKS */
/* ============== */
 od_not1 =  geomAndNot(od odwr)  
 errorLayer( geomAndNot(od_not1 imp) 
	"OD.WARN.1  OD without implant ") 
 drc( od   width < 0.22  withCornerTouch 
	"OD.W.1_OD.W.2  Min. OD width for MOS and interconnect < 0.22 ")  
 drc( od   sepNotch < 0.28  
	"OD.S.1  Minimum OD spacing < 0.28 ")  
 drc( nonwr npod  enc < 0.12  shielded 
	"OD.C.1  NWEL olap NPOD tie down < 0.12 ")  
 errorLayer( geomStraddle(npod nonwr) 
	"OD.C.1  NWEL olap NPOD tie down < 0.12 ") 
 odc2_odc3_a = geomAndNot(npod geomInside(npod nwel))   
 odc2_odc31_x = geomAndNot(odc2_odc3_a odwr)  
 drc( odc2_odc31_x nwel  sep < 0.43  shielded 
	"OD.C.2_OD.C.3  Minimum NWEL to NPOD space < 0.43 ")  
 errorLayer( geomStraddle(odc2_odc31_x nwel) 
	"OD.C.2_OD.C.3  Minimum NWEL to NPOD space < 0.43 ") 
 drc( nwel ppod  enc < 0.43  shielded 
	"OD.C.4  NWEL overlap PPOD < 0.43 ")  
 errorLayer( geomStraddle(ppod nwel) 
	"OD.C.4  NWEL overlap PPOD < 0.43 ") 
 drc( ptap nwel  sep < 0.12  shielded 
	"OD.C.5  NWEL space PPOD outside NW < 0.12 ")  
/*  OD.C.6 is taken care of by PP.C.4 and NP.C.4 */
/*  OD.S.2 is not necessary to check */
 odw3_a = geomGetLength( pp_bedge  keep >= 0.42 )  /*  Gets edges segments that are OK */ 
 odw31_b = geomSize(geomStretch( pp_bedge 0.004) -0.004 edges)  /*  Create polygon from separate edges */ 
 odw3_a_sz1 = geomSize(odw3_a 0.005 edges)
 errorLayer( geomAndNot( odw31_b geomButtOrCoin( odw31_b odw3_a_sz1 )) 
	"OD.W.3  Butting OD edge with one segment < 0.42 or tap area < 0.176 um*um ") /*  All edges not including an OK edge */ 
 odw32_c = geomGetLength( np_bedge  keep >= 0.42 )   
 odw33_d = geomSize(geomStretch( np_bedge 0.004) -0.004 edges)   
 odw32_c_sz1 = geomSize(odw32_c 0.005 edges)
 errorLayer( geomAndNot( odw33_d geomButtOrCoin( odw33_d odw32_c_sz1 )) 
	"OD.W.3 2  Butting OD edge with one segment < 0.42 or tap area < 0.176 um*um ")  
 drc( butt_ntap  area < 0.176 
	"OD.W.3 3  Butting OD edge with one segment < 0.42 or tap area < 0.176 um*um ") 
 drc( butt_ptap  area < 0.176 
	"OD.W.3 4  Butting OD edge with one segment < 0.42 or tap area < 0.176 um*um ") 
 drc( od  area < 0.202 
	"OD.A.1  Minimum area of stand-alone OD region < 0.202 ") 
/*  OD2 CHECKS */
/* =============== */
/*  This only applies to active OD */
 od2e1_check_edge_n = drc( od2 nact  enc < 0.32  shielded edgeb )
 errorLayer( geomAndNot(od2e1_check_edge_n geomGetEdge(od2e1_check_edge_n butting ptap)) 
	"OD2.E.1 2  Minimum OD2 olap OD < 0.32 ")  
 od2e11_check_edge_p = drc( od2 pact  enc < 0.32  shielded edgeb )
 errorLayer( geomAndNot(od2e11_check_edge_p geomGetEdge(od2e11_check_edge_p butting ntap)) 
	"OD2.E.1 3  Minimum OD2 olap OD < 0.32 ")  
 errorLayer( geomInside( od2 dact  ) 
	"OD2.E.1 4  Minimum OD2 olap OD < 0.32 ") /*  OD2 totally inside OD */ 
 od2e12_y = geomButtOrOver( dact od2  )   
 od2e13_z = geomAndNot(od2e12_y od2)  
 errorLayer( geomOutside( od2e13_z all_gate  ) 
	"OD2.E.1 5  Minimum OD2 olap OD < 0.32 ")  
if((CORE_VOLTAGE == 1.8) then
/*  Merge if space < 0.45 um */
 drc( od2   sepNotch < 0.45  
	"OD2.S.1 2  Minimum OD2 spacing < 0.45 ")  
) ; 
if((CORE_VOLTAGE == 1.5) then
/*  Merge if space < 0.86 um */
 drc( od2   sepNotch < 0.86  
	"OD2.S.1.LV 2  Minimum OD2 spacing < 0.86 ")  
) ; 
 drc( od2 nact  sep < 0.32  shielded 
	"OD2.C.1  Minimum OD2 space to OD < 0.32 ")  
 drc( od2 pact  sep < 0.32  shielded 
	"OD2.C.1 2  Minimum OD2 space to OD < 0.32 ")  
 od2c2_a = geomGetEdge(od2 inside dact)   
 drc( od2c2_a gate_w  sep < 0.400  shielded 
	"OD2.C.2  Minimum OD2 space to gate < 0.4 ")  
 drc( od2_bedge gate_w  enc < 0.400  shielded 
	"OD2.E.2  Minimum enclosure of gate by OD2 < 0.4 ")  
 hvgt_coin1 = geomGetEdge(hvgt coincident od2 )
 hvgt_but1 = geomGetEdge(hvgt butting od2 )
 hvgt_or1 = geomOr(hvgt_coin1 hvgt_but1)
 hvgt_str1 = geomStretch(hvgt_or1 0.36)
 errorLayer( geomAnd(hvgt_str1 hvgt) 
	"OD2.E.2 2  Minimum enclosure of gate by OD2 < 0.4 ") 
if((CORE_VOLTAGE == 1.5) then
 drc( od2 nwel 0 < enc < 0.86  shielded 
	"OD2.E.4.LV  OD2 enclose NWEL >= 0.86um/Align if less than 0.86um ")  
 drc( nwel od2 0 < sep < 0.86  shielded 
	"OD2.C.4.LV  OD2 to NWEL >= 0.86um/Align if less than 0.86um ")  
 drc( nwel od2 0 < enc < 0.86  shielded 
	"OD2.C.4.LV 2  OD2 to NWEL >= 0.86um/Align if less than 0.86um ")  
 drc( nwel od2 0 < ovlp < 0.86  
	"OD2.O.1.LV OD2 overlaps NWEL >= 0.86um ")  
) ; 
/*  POLY checks */
/* ============= */
/* PO.W.1A is checked by PO.W.3 */
/* PO.W.2A is checked by PO.W.3 */
 drc( poly   width < 0.18  withCornerTouch 
	"PO.W.3  Min. POLY width for interconnect, 1.8V NMOS, 1.8V PMOS < 0.18 ")  
if((HIGH_VOLTAGE == 3.3) then
 drc( hv_pgate_w   width < 0.30  
	"PO.W.1B  Minimum POLY gate length 3.3V pmos < 0.30 ")  
 drc( hv_ngate_w   width < 0.35  
	"PO.W.2B  Minimum POLY gate length 3.3v nmos < 0.35 ")  
) ; 
if((HIGH_VOLTAGE == 2.5) then
 drc( hv_pgate_w   width < 0.26  
	"PO.W.1B 2  Minimum POLY gate length 2.5V pmos < 0.26 ")  
 drc( hv_ngate_w   width < 0.26  
	"PO.W.2B 2  Minimum POLY gate length 2.5v nmos < 0.26 ")  
) ; 
if((HIGH_VOLTAGE == 5) then
 drc( hv_pgate_w   width < 0.5  
	"PO.W.1B 3  Minimum POLY gate length 5.0V pmos < 0.5 ")  
 drc( hv_ngate_w   width < 0.6  
	"PO.W.2B 3  Minimum POLY gate length 5.0v nmos < 0.6 ")  
) ; 
/*  Select device OD enclosing contacts */
/*  Get gate edges (width) along s/d region */
/*  Find spacing violations between edges */
 pos1_y = geomGetEdge(all_gate butting asd1)   
 drc( pos1_y   sepNotch < 0.375  
	"PO.S.1 4  Minimum POLY space on OD with contact < 0.375 ")  
 drc( poly   sepNotch < 0.25  
	"PO.S.2_PO.S.3  Min. POLY space: on OD w/o contact and interconnect < 0.25 ")  
 drc( poly od  sep < 0.1  shielded 
	"PO.C.1  Minimum POLY on field space to active < 0.1 ")  
 drc( od poly  enc < 0.32  shielded 
	"PO.C.2  Minimum OD overhang gate < 0.32 ")  
 drc( poly od  enc < 0.22  shielded 
	"PO.O.1  Minimum POLY overhang active < 0.22 ")  
 lvgt_ang1 = geomGetAngledEdge( lvgt keep == 45 )
 drc( lvgt_ang1   width < 0.21  opposite 
	"PO.R.1B  45 degree 1.8V gate min. length < 0.21 ")  
 por2_long_po = drc( ilp1  area > 0.18 * 50 )
 por21_check_po = geomButtOrOver( por2_long_po co  )   
 por22_check_co = geomButtOrOver( co por21_check_po  )   
 por22_check_co1 = fix(  50 / 2  /  0.25 ) 
 por22_check_co2 =  50 / 2  - por22_check_co1 * 0.25 
if( (por22_check_co2 > 0) then 
 por23_co_a = geomAnd(geomSize( por22_check_co por22_check_co2 ) por21_check_po )
else
 por23_co_a = geomAnd( por22_check_co por21_check_po )
)
  for(i 1 por22_check_co1
      por23_co_a = geomAnd(geomSize( por23_co_a 0.25 ) por21_check_po )
     )

 por24_po_a = geomButtOrOver( por21_check_po por23_co_a keep == 1 )   
 por25_po_b = geomButtOrOver( por21_check_po por23_co_a keep > 1 )   
 por26_co_b = geomButtOrOver( por23_co_a por24_po_a  )   
 por26_co_b_ite1 = fix(  50 / 2  /  0.25 ) 
 por26_co_b1 =  50 / 2  - por26_co_b_ite1 * 0.25 
if( (por26_co_b1 > 0) then 
 por27_co_c = geomAnd(geomSize( por26_co_b por26_co_b1 ) por24_po_a )
else
 por27_co_c = geomAnd( por26_co_b por24_po_a )
)
  for(i 1 por26_co_b_ite1
      por27_co_c = geomAnd(geomSize( por27_co_c 0.25 ) por24_po_a )
     )

 po_a_not1 =  geomAndNot(por24_po_a por27_co_c)  
 po_b_not1 =  geomAndNot(por25_po_b por23_co_a)  
 por28_bad = geomOr(po_a_not1 po_b_not1)  
 por29_bad_edge = geomGetEdge(por28_bad coincident poly)   
 por210_error = drc( por29_bad_edge   width <= 0.24  )
 errorLayer( geomButtOrOver( por21_check_po por210_error  ) 
	"PO.R.2  Maximum POLY length between contacts when PO width less than 0.24um > 50.00 ")  
/*  PP CHECKS */
/* ============ */
 ppe4_nwelc = geomSize( nweli 0.43 noClipAcute )   
 ppe4_nwels = geomSize( ppe4_nwelc 0.18 noClipAcute )   
 ppe4_od = geomAnd(ppe4_nwels ptap)  
 ppe4_c1 = drc( pp ppe4_od 0 < enc < 0.18  opposite shielded )
 ppe4_c2 = drc( pp ppe4_od 0 < enc < 0.18 app < 0 shielded )
 ppe4_c3 = drc( pp ppe4_od 0 < enc < 0.18  shielded  app == 0 )
 ppe4_c2_sz1 =  geomSize( ppe4_c2 0.005 noClipAcute )   
 ppe4_c4 = geomAndNot(ppe4_c2_sz1 ppe4_od)  
 ppe4_c1_or1 =  geomOr(ppe4_c1 ppe4_c3)  
 ppe4_all = geomOr(ppe4_c1_or1 ppe4_c4)  
 ppe4_checkod = geomGetEdge(ppe4_all butting ppe4_od)   
 npc3_c1 = drc( ppe4_od np 0 < sep < 0.18  opposite shielded )
 npc3_c2 = drc( ppe4_od np 0 < sep < 0.18 app < 0 shielded )
 npc3_c3 = drc( ppe4_od np 0 < sep < 0.18  shielded  app == 0 )
 npc3_c2_sz1 =  geomSize( npc3_c2 0.005 noClipAcute )   
 npc3_c4 = geomAndNot(npc3_c2_sz1 ppe4_od)  
 npc3_c1_or1 =  geomOr(npc3_c1 npc3_c3)  
 npc3_all = geomOr(npc3_c1_or1 npc3_c4)  
 npc3_checkod = geomGetEdge(npc3_all butting ppe4_od)   
 npe4_nwelc = geomSize( nweli -0.43 noClipAcute )   
 npe4_nwels = geomSize( npe4_nwelc -0.18 noClipAcute )   
 npe4_od = geomAndNot(ntap npe4_nwels)  
 npe4_c1 = drc( np npe4_od 0 < enc < 0.18  opposite shielded )
 npe4_c2 = drc( np npe4_od 0 < enc < 0.18 app < 0 shielded )
 npe4_c3 = drc( np npe4_od 0 < enc < 0.18  shielded  app == 0 )
 npe4_c2_sz1 =  geomSize( npe4_c2 0.005 noClipAcute )   
 npe4_c4 = geomAndNot(npe4_c2_sz1 npe4_od)  
 npe4_c1_or1 =  geomOr(npe4_c1 npe4_c3)  
 npe4_all = geomOr(npe4_c1_or1 npe4_c4)  
 npe4_checkod = geomGetEdge(npe4_all butting npe4_od)   
 ppc3_c1 = drc( npe4_od pp 0 < sep < 0.18  opposite shielded )
 ppc3_c2 = drc( npe4_od pp 0 < sep < 0.18 app < 0 shielded )
 ppc3_c3 = drc( npe4_od pp 0 < sep < 0.18  shielded  app == 0 )
 ppc3_c2_sz1 =  geomSize( ppc3_c2 0.005 noClipAcute )   
 ppc3_c4 = geomAndNot(ppc3_c2_sz1 npe4_od)  
 ppc3_c1_or1 =  geomOr(ppc3_c1 ppc3_c3)  
 ppc3_all = geomOr(ppc3_c1_or1 ppc3_c4)  
 ppc3_checkod = geomGetEdge(ppc3_all butting npe4_od)   
 drc( pp   width < 0.440  withCornerTouch 
	"PP.W.1  PP width < 0.440 ")  
 drc( pp   sepNotch < 0.440  
	"PP.S.1  PP space < 0.440 ")  
/*  N active in pwell can be butting or */
/*  non-butting. The non-butting n active is not */
/*  allowed to touch PP. */
 drc( pp nact 0 < sep < 0.260  shielded 
	"PP.C.1 4  PP space to n active in pwell < 0.260 ")  
 ppc1_x = drc( pp nact  sep < 0.001  shielded edgeb )
 ppc11_y = geomSize(ppc1_x 0.001 edges)   
 errorLayer( geomAndNot(ppc11_y geomButtOrOver(ppc11_y ppod)) 
	"PP.C.1 5  PP space to n active in pwell < 0.260 ")  
 drc( pp ntap 0 < sep < 0.1  shielded 
	"PP.C.2  PP space to non-butting NTAP < 0.1 with PWEL space >= 0.43 ")  
 errorLayer( geomGetEdge(ppc3_checkod outside npe4_nwelc) 
	"PP.C.3  PP space to non-butting NTAP < 0.18 with PWEL space < 0.43 ")  
/*  PP.C.4 is checked by NP.C.5 and PP.R.1 */
/*  This rule must extend out of gate in the direction of PO by 0.35um */
 errorLayer( geomAndNot(exgate_pp pp) 
	"PP.C.5 2  PP extension over (P gate) + (field poly within 0.35um) < 0.32um ") 
 drc( od pp 0 < ovlp < 0.230  shielded 
	"PP.O.1  PP extends into p active < 0.230 ")  
 drc( pp pact 0 < enc < 0.180  shielded 
	"PP.E.1  PP olap OD < 0.180 ")  
 ppe1_y = drc( pp pact  enc < 0.001  shielded edgeb )
 ppe11_z = geomSize(ppe1_y 0.001 edges)   
 errorLayer( geomAndNot(ppe11_z geomButtOrOver(ppe11_z npod)) 
	"PP.E.1 2  PP olap OD < 0.180 ")  
 errorLayer( geomGetEdge(imp coincident od) 
	"PP.E.1_NP.E.1  Implant can not coincident OD edge except butted diffusion ")  
 drc( pp ptap 0 < enc < 0.02  shielded 
	"PP.E.3  Minimum enclosure of PTAP by PP < 0.02 with NWEL space >= 0.43 ")  
 ppe3_x = drc( pp ptap  enc < 0.001  shielded edgeb )
 ppe31_y = geomSize(ppe3_x 0.001 edges)   
 errorLayer( geomAndNot(ppe31_y geomButtOrOver(ppe31_y npod)) 
	"PP.E.3 2  Minimum enclosure of PTAP by PP < 0.02 with NWEL space >= 0.43 ")  
 errorLayer( geomGetEdge(ppe4_checkod inside ppe4_nwelc) 
	"PP.E.4  Min. enc. of PTAP by PP < 0.18 with NWEL space < 0.43 ")  
/*  PP.C.6 not necessary to check */
/*  PP.E.5 not necessary to check */
 drc( pp  area < 0.3844 
	"PP.A.1  Minimum area of PP < 0.3844 ") 
 errorLayer( geomAnd(pp np) 
	"PP.R.1_NP.R.1  PP and NP not allowed to overlap ") 
/*  PP.R.2 @ PP not generated by reverse NP */
/*  NP CHECKS */
/* ============ */
 drc( np   width < 0.440  withCornerTouch 
	"NP.W.1  NP width < 0.440 ")  
 drc( np   sepNotch < 0.440  
	"NP.S.1  NP space < 0.440 ")  
/*  P active in NWEL can be butting or */
/*  non-butting. The non-butting p active is not */
/*  allowed to touch NP. */
 drc( np pact 0 < sep < 0.260  shielded 
	"NP.C.1 4  NP space to p active in NWEL < 0.260 ")  
 npc1_x = drc( np pact  sep < 0.001  shielded edgeb )
 npc11_y = geomSize(npc1_x 0.001 edges)   
 errorLayer( geomAndNot(npc11_y geomButtOrOver(npc11_y npod)) 
	"NP.C.1 5  NP space to p active in NWEL < 0.260 ")  
 drc( np ptap 0 < sep < 0.1  shielded 
	"NP.C.2  NP space to non-butting ptap < 0.1 with NWEL space >= 0.43 ")  
 errorLayer( geomGetEdge(npc3_checkod inside ppe4_nwelc) 
	"NP.C.3  NP space to non-butting ptap < 0.18 with NWEL space < 0.43 ")  
/*  NP.C.4 is checked by PP.C.5 and NP.R.1 */
/*  This rule must extend out of gate in the direction of PO by 0.35um */
 errorLayer( geomAndNot(exgate_np np) 
	"NP.C.5 2  NP extension over (N gate) + (field poly within 0.35um) < 0.32um ") 
 drc( od np 0 < ovlp < 0.230  shielded 
	"NP.O.1  NP extends into n active < 0.230 ")  
 npe1_x = geomAndNot(nact odwr)  
 drc( np npe1_x 0 < enc < 0.180  shielded 
	"NP.E.1  NP olap OD < 0.180 ")  
 npe11_y = drc( np npe1_x  enc < 0.001  shielded edgeb )
 npe12_z = geomSize(npe11_y 0.001 edges)   
 errorLayer( geomAndNot(npe12_z geomButtOrOver(npe12_z ppod)) 
	"NP.E.1 2  NP olap OD < 0.180 ")  
 drc( np ntap 0 < enc < 0.02  shielded 
	"NP.E.3  Minimum enclosure of NTAP by NP < 0.02 with PWEL space >= 0.43 ")  
 npe3_x = drc( np ntap  enc < 0.001  shielded edgeb )
 npe31_y = geomSize(npe3_x 0.001 edges)   
 errorLayer( geomAndNot(npe31_y geomButtOrOver(npe31_y ppod)) 
	"NP.E.3 2  Minimum enclosure of NTAP by NP < 0.02 with PWEL space >= 0.43 ")  
 errorLayer( geomGetEdge(npe4_checkod outside npe4_nwelc) 
	"NP.E.4  Min. enc. of NTAP by NP < 0.18 with PWEL space < 0.43 ")  
/*  NP.C.6 Not necessary to check */
/*  NP.E.5 Not necessary to check */
 drc( np  area < 0.3844 
	"NP.A.1  Minimum area of NP < 0.3844 ") 
/*  NP.R.2 @ NP not generated by reverse PP */
/*  RPO checks */
/* =========== */
 drc( rpo   width < 0.43  withCornerTouch 
	"RPO.W.1  Minimum RPO width < 0.430 ")  
 drc( rpo   sepNotch < 0.43  
	"RPO.S.1  Minimum RPO space < 0.43 ")  
 drc( rpo od  sep < 0.22  shielded 
	"RPO.C.1  Minimum RPO space to OD < 0.22 ")  
 drc( rpo co  sep < 0.22  shielded 
	"RPO.C.2  Minimum RPO space to CO < 0.22 ")  
 errorLayer( geomAnd(co rpo) 
	"RPO.C.2 2  Minimum RPO space to CO < 0.22 ") 
 all_gate_not1 =  geomAndNot(all_gate drcdmy)  
 all_gate_not11 =  geomAndNot(all_gate_not1 esd1dmy)  
 all_gate_not111 =  geomAndNot(all_gate_not11 esd2dmy)  
 rpoc3_a = geomAndNot(all_gate_not111 esd3dmy)  
 drc( rpo rpoc3_a  sep < 0.45  shielded 
	"RPO.C.3  Minimum RPO space to gate < 0.45 ")  
 errorLayer( geomAnd(rpo rpoc3_a) 
	"RPO.C.3 2  Minimum RPO space to gate < 0.45 ") 
 drc( rpo od  enc < 0.22  shielded 
	"RPO.C.4  Minimum RPO overhang OD < 0.22 ")  
 drc( od rpo  enc < 0.22  shielded 
	"RPO.E.1  Minimum OD overhang RPO < 0.22 ")  
 drc( rpo poly  enc < 0.22  shielded 
	"RPO.C.5  Minimum RPO overhang POLY < 0.22 ")  
 drc( rpo poly_iso  sep < 0.30  shielded 
	"RPO.C.6  Minimum clearance RPO to unrelated poly < 0.3um ")  
 drc( rpo  area < 2 
	"RPO.A.1  RPO min. area < 2 um*um ") 
/*  CO checks */
/* =============== */
 co_p1 = geomGetPolygon(co)
 co_w1 = drc(co width <  0.22)
 co_a1 = geomAndNot(co drc(co area ==  0.22* 0.22))
 errorLayer( geomOr(co_a1 geomOr(co_p1 co_w1)) 
	"CO.W.1  contact width != 0.22 ")  

 drc( co   sepNotch < 0.25  
	"CO.S.1  contact spacing < 0.25 ")  
 cos2_a = geomSize( geomSize( co 0.30 / 2 noClipAcute ) -0.30 / 2 noClipAcute )  /*  space < 0.3um treat as array */ 
 cos21_b = geomSize( geomSize( cos2_a -0.7 noClipAcute ) 0.7 noClipAcute )  /*  (0.22*3+0.3*2) = 1.26  (3 COs Mix.) */ 
 cos22_c = geomButtOrOver( cos21_b co keep >= 16 )  /*  1.63-0.22 = 1.41       (Max. CO shift space)  */ 
 cos23_d = geomButtOrOver( co cos22_c  )  /*  so 1.26 < CONTY width < 1.41 */ 
 drc( cos23_d   sepNotch < 0.28  
	"CO.S.2  Min space between two contacts in larger than 3x3 array. ") /*  & we use CONTY width = 1.4 */ 
 drc( co_diff all_gate  sep < 0.16  shielded 
	"CO.C.1_CO.R.1  diff contact to gate space < 0.16, or contact on gate ")  
 errorLayer( geomAnd(co_diff all_gate) 
	"CO.C.1_CO.R.1 2  diff contact to gate space < 0.16, or contact on gate ") 
 drc( co_poly od  sep < 0.20  shielded 
	"CO.C.2  poly contact space to OD < 0.20 ")  
 drc( od co_diff  enc < 0.10  shielded 
	"CO.E.1  active olap contact < 0.10, also floating contacts ")  
 errorLayer( geomGetEdge(co_diff outside od) 
	"CO.E.1 2  active olap contact < 0.10, also floating contacts ")  
 drc( poly_iso co_poly  enc < 0.10  shielded 
	"CO.E.2  poly olap contact < 0.10 ")  
 errorLayer( geomStraddle( co_poly poly_iso  ) 
	"CO.E.2 2  poly olap contact < 0.10 ")  
 drc( pp co_diff  enc < 0.12  shielded 
	"CO.E.3  implant olap contact < 0.12 ")  
 errorLayer( geomGetEdge(pp inside co_diff) 
	"CO.E.3 2  implant olap contact < 0.12 ")  
 drc( np co_diff  enc < 0.12  shielded 
	"CO.E.4  implant olap contact < 0.12 ")  
 errorLayer( geomGetEdge(np inside co_diff) 
	"CO.E.4 2  implant olap contact < 0.12 ")  
/*  CO.R.2 is checked by CO.E.3/CO.E.4 */
/*  CO.R.3 is checked by RPO.C.2 */
/*  M1 checks */
/* ============= */
 drc( m1   width < 0.23  withCornerTouch 
	"M1.W.1  M1 width < 0.23 ")  
 drc( m1   sepNotch < 0.23  
	"M1.S.1  M1 spacing < 0.23 ")  
m1s2_m1_s5 = geomGrow( m1 -5 -5 )
m1s21_m1_g5 = geomGrow( m1s2_m1_s5 5 5 )
 m1s22_m1_wide = geomAnd(m1s21_m1_g5 m1)  
 m1s22_m1_wide1 = fix(  1  /  0.161 ) 
 m1s22_m1_wide2 =  1  - m1s22_m1_wide1 * 0.161 
if( (m1s22_m1_wide2 > 0) then 
 m1s23_m1_exp = geomAnd(geomSize( m1s22_m1_wide m1s22_m1_wide2 ) m1 )
else
 m1s23_m1_exp = geomAnd( m1s22_m1_wide m1 )
)
  for(i 1 m1s22_m1_wide1
      m1s23_m1_exp = geomAnd(geomSize( m1s23_m1_exp 0.161 ) m1 )
     )

 m1s24_m1_branch = geomAndNot(m1s23_m1_exp m1s22_m1_wide)  
 m1s25_m1_branch_edge = geomGetEdge(m1s24_m1_branch coincident m1)   
 m1_exp_sz1 =  geomSize( m1s23_m1_exp 0.6 noClipAcute )   
 m1s26_m1_check = geomAnd(m1 m1_exp_sz1)  
 m1s27_m1_else = geomAndNot(m1s26_m1_check geomButtOrOver(m1s26_m1_check m1s23_m1_exp))   
 m1s28_m1_extend = geomAndNot(m1s26_m1_check m1s23_m1_exp)  
 drc( m1s22_m1_wide m1s27_m1_else 0 < sep < 0.6  shielded 
	"M1.S.2 3  Wide M1 (>10um) min. to M1 < 0.6 um ")  
 drc( m1s25_m1_branch_edge m1s27_m1_else 0 < sep < 0.6  opposite shielded 
	"M1.S.2 4  Wide M1 (>10um) min. to M1 < 0.6 um ")  
 drc( m1s25_m1_branch_edge m1s27_m1_else 0 < sep < 0.6 app < 0 shielded 
	"M1.S.2 5  Wide M1 (>10um) min. to M1 < 0.6 um ")  
 drc( m1s25_m1_branch_edge m1s27_m1_else 0 < sep < 0.6  shielded  app == 0 
	"M1.S.2 6  Wide M1 (>10um) min. to M1 < 0.6 um ")  
 m1s29_a = drc( m1s23_m1_exp  0 < sep < 0.6  shielded )
 errorLayer( geomAndNot(m1s29_a geomButtOrOver(m1s29_a m1s28_m1_extend)) 
	"M1.S.2 7  Wide M1 (>10um) min. to M1 < 0.6 um ")  
 drc( m1 co  enc < 0.005  shielded 
	"M1.E.1  Min extension of a M1 region beyond a CO region is 0.005 um ")  
 errorLayer( geomAndNot(co m1) 
	"M1.E.1 2  Min extension of a M1 region beyond a CO region is 0.005 um ") 
 m1e2_x = drc( m1 co  enc < 0.06  opposite shielded edgeb )/*  a narrow side */
 m1e2_x_ang01 = geomGetAngledEdge(m1e2_x keep == 0)
 m1e2_x_ang011 = geomGetAdjacentEdge(m1e2_x m1e2_x_ang01 )
 m1e2_x_ang451 = geomGetAngledEdge(m1e2_x keep == 45)
 errorLayer( geomAndNot(m1e2_x_ang011 m1e2_x_ang451) 
	"M1.E.2  Min extension of M1 end-of-line region beyond CO region is 0.06 um ") /*  adjacent narrow sides */
 drc( m1  area < 0.202 
	"M1.A.1  Min M1 area < 0.202 ") 
/*  Density check M1.R.1 included at the end of this file */
/*  VIA1 checks */
/* ============= */
 via1_p1 = geomGetPolygon(via1)
 via1_w1 = drc(via1 width <  0.26)
 via1_a1 = geomAndNot(via1 drc(via1 area ==  0.26* 0.26))
 via1w1_a = geomOr(via1_a1 geomOr(via1_p1 via1_w1))   

 errorLayer( geomOutside( via1w1_a rngx  ) 
	"VIA1.W.1  VIA1 must be 0.26 x 0.26 um ") /*  exclude from metal fuse protection ring area */ 
 drc( via1   sepNotch < 0.26  
	"VIA1.S.1  VIA1 SPACING < 0.26 ")  
 drc( m1 via1  enc < 0.01  shielded 
	"VIA1.E.1  Min extension of a M1 region beyond a VIA1 region is 0.01 um ")  
 errorLayer( geomAndNot(via1 m1) 
	"VIA1.E.1 2  Min extension of a M1 region beyond a VIA1 region is 0.01 um ") 
 via1e2_x = drc( m1 via1  enc < 0.06  opposite shielded edgeb )/*  a narrow side */
 via1e2_x_ang01 = geomGetAngledEdge(via1e2_x keep == 0)
 via1e2_x_ang011 = geomGetAdjacentEdge(via1e2_x via1e2_x_ang01 )
 via1e2_x_ang451 = geomGetAngledEdge(via1e2_x keep == 45)
 errorLayer( geomAndNot(via1e2_x_ang011 via1e2_x_ang451) 
	"VIA1.E.2  Min extension of M1 end-of-line region beyond VIA1 region is 0.06 um ") /*  adjacent narrow sides */
/*  VIA1.C.1 does not require a DRC check */
/*  M2 checks */
/* ============= */
 drc( m2   width < 0.28  withCornerTouch 
	"M2.W.1  M2 width < 0.28 ")  
 drc( m2   sepNotch < 0.28  
	"M2.S.1  M2 spacing < 0.28 ")  
m2s2_m2_s5 = geomGrow( m2 -5 -5 )
m2s21_m2_g5 = geomGrow( m2s2_m2_s5 5 5 )
 m2s22_m2_wide = geomAnd(m2s21_m2_g5 m2)  
 m2s22_m2_wide1 = fix(  1  /  0.196 ) 
 m2s22_m2_wide2 =  1  - m2s22_m2_wide1 * 0.196 
if( (m2s22_m2_wide2 > 0) then 
 m2s23_m2_exp = geomAnd(geomSize( m2s22_m2_wide m2s22_m2_wide2 ) m2 )
else
 m2s23_m2_exp = geomAnd( m2s22_m2_wide m2 )
)
  for(i 1 m2s22_m2_wide1
      m2s23_m2_exp = geomAnd(geomSize( m2s23_m2_exp 0.196 ) m2 )
     )

 m2s24_m2_branch = geomAndNot(m2s23_m2_exp m2s22_m2_wide)  
 m2s25_m2_branch_edge = geomGetEdge(m2s24_m2_branch coincident m2)   
 m2_exp_sz1 =  geomSize( m2s23_m2_exp 0.6 noClipAcute )   
 m2s26_m2_check = geomAnd(m2 m2_exp_sz1)  
 m2s27_m2_else = geomAndNot(m2s26_m2_check geomButtOrOver(m2s26_m2_check m2s23_m2_exp))   
 m2s28_m2_extend = geomAndNot(m2s26_m2_check m2s23_m2_exp)  
 drc( m2s22_m2_wide m2s27_m2_else 0 < sep < 0.6  shielded 
	"M2.S.2 3  Wide M2 (>10um) min. to M2 < 0.6 um ")  
 drc( m2s25_m2_branch_edge m2s27_m2_else 0 < sep < 0.6  opposite shielded 
	"M2.S.2 4  Wide M2 (>10um) min. to M2 < 0.6 um ")  
 drc( m2s25_m2_branch_edge m2s27_m2_else 0 < sep < 0.6 app < 0 shielded 
	"M2.S.2 5  Wide M2 (>10um) min. to M2 < 0.6 um ")  
 drc( m2s25_m2_branch_edge m2s27_m2_else 0 < sep < 0.6  shielded  app == 0 
	"M2.S.2 6  Wide M2 (>10um) min. to M2 < 0.6 um ")  
 m2s29_a = drc( m2s23_m2_exp  0 < sep < 0.6  shielded )
 errorLayer( geomAndNot(m2s29_a geomButtOrOver(m2s29_a m2s28_m2_extend)) 
	"M2.S.2 7  Wide M2 (>10um) min. to M2 < 0.6 um ")  
 drc( m2 via1  enc < 0.01  shielded 
	"M2.E.1  Min extension of a M2 region beyond a VIA1 region is 0.01 um ")  
 errorLayer( geomAndNot(via1 m2) 
	"M2.E.1 2  Min extension of a M2 region beyond a VIA1 region is 0.01 um ") 
 m2e2_x = drc( m2 via1  enc < 0.06  opposite shielded edgeb )/*  a narrow side */
 m2e2_x_ang01 = geomGetAngledEdge(m2e2_x keep == 0)
 m2e2_x_ang011 = geomGetAdjacentEdge(m2e2_x m2e2_x_ang01 )
 m2e2_x_ang451 = geomGetAngledEdge(m2e2_x keep == 45)
 errorLayer( geomAndNot(m2e2_x_ang011 m2e2_x_ang451) 
	"M2.E.2  Min extension of M2 end-of-line region beyond VIA1 region is 0.06um ") /*  adjacent narrow sides */
 drc( m2  area < 0.202 
	"M2.A.1  Min M2 area region < 0.202 ") 
/*  Density check M2.R.1 included at the end of this file */
/*  VIA2 checks */
/* ============= */
 via2_p1 = geomGetPolygon(via2)
 via2_w1 = drc(via2 width <  0.26)
 via2_a1 = geomAndNot(via2 drc(via2 area ==  0.26* 0.26))
 via2w1_a = geomOr(via2_a1 geomOr(via2_p1 via2_w1))   

 errorLayer( geomOutside( via2w1_a rngx  ) 
	"VIA2.W.1  VIA2 must be 0.26 x 0.26 um ") /*  exclude from metal fuse protection ring area */ 
 drc( via2   sepNotch < 0.26  
	"VIA2.S.1  VIA2 SPACING < 0.26 ")  
 drc( m2 via2  enc < 0.01  shielded 
	"VIA2.E.1  Min extension of a M2 region beyond a VIA2 region is 0.01 um ")  
 errorLayer( geomAndNot(via2 m2) 
	"VIA2.E.1 2  Min extension of a M2 region beyond a VIA2 region is 0.01 um ") 
 via2e2_x = drc( m2 via2  enc < 0.06  opposite shielded edgeb )/*  a narrow side */
 via2e2_x_ang01 = geomGetAngledEdge(via2e2_x keep == 0)
 via2e2_x_ang011 = geomGetAdjacentEdge(via2e2_x via2e2_x_ang01 )
 via2e2_x_ang451 = geomGetAngledEdge(via2e2_x keep == 45)
 errorLayer( geomAndNot(via2e2_x_ang011 via2e2_x_ang451) 
	"VIA2.E.2  Min extension of M2 end-of-line region beyond VIA2 region is 0.06 um ") /*  adjacent narrow sides */
/*  VIA2.C.1 does not require a DRC check */
/*  M3 checks */
/* ============= */
 drc( m3   width < 0.28  withCornerTouch 
	"M3.W.1  M3 width < 0.28 ")  
 drc( m3   sepNotch < 0.28  
	"M3.S.1  M3 spacing < 0.28 ")  
m3s2_m3_s5 = geomGrow( m3 -5 -5 )
m3s21_m3_g5 = geomGrow( m3s2_m3_s5 5 5 )
 m3s22_m3_wide = geomAnd(m3s21_m3_g5 m3)  
 m3s22_m3_wide1 = fix(  1  /  0.196 ) 
 m3s22_m3_wide2 =  1  - m3s22_m3_wide1 * 0.196 
if( (m3s22_m3_wide2 > 0) then 
 m3s23_m3_exp = geomAnd(geomSize( m3s22_m3_wide m3s22_m3_wide2 ) m3 )
else
 m3s23_m3_exp = geomAnd( m3s22_m3_wide m3 )
)
  for(i 1 m3s22_m3_wide1
      m3s23_m3_exp = geomAnd(geomSize( m3s23_m3_exp 0.196 ) m3 )
     )

 m3s24_m3_branch = geomAndNot(m3s23_m3_exp m3s22_m3_wide)  
 m3s25_m3_branch_edge = geomGetEdge(m3s24_m3_branch coincident m3)   
 m3_exp_sz1 =  geomSize( m3s23_m3_exp 0.6 noClipAcute )   
 m3s26_m3_check = geomAnd(m3 m3_exp_sz1)  
 m3s27_m3_else = geomAndNot(m3s26_m3_check geomButtOrOver(m3s26_m3_check m3s23_m3_exp))   
 m3s28_m3_extend = geomAndNot(m3s26_m3_check m3s23_m3_exp)  
 drc( m3s22_m3_wide m3s27_m3_else 0 < sep < 0.6  shielded 
	"M3.S.2 3  Wide M3 (>10um) min. to M3 < 0.6 um ")  
 drc( m3s25_m3_branch_edge m3s27_m3_else 0 < sep < 0.6  opposite shielded 
	"M3.S.2 4  Wide M3 (>10um) min. to M3 < 0.6 um ")  
 drc( m3s25_m3_branch_edge m3s27_m3_else 0 < sep < 0.6 app < 0 shielded 
	"M3.S.2 5  Wide M3 (>10um) min. to M3 < 0.6 um ")  
 drc( m3s25_m3_branch_edge m3s27_m3_else 0 < sep < 0.6  shielded  app == 0 
	"M3.S.2 6  Wide M3 (>10um) min. to M3 < 0.6 um ")  
 m3s29_a = drc( m3s23_m3_exp  0 < sep < 0.6  shielded )
 errorLayer( geomAndNot(m3s29_a geomButtOrOver(m3s29_a m3s28_m3_extend)) 
	"M3.S.2 7  Wide M3 (>10um) min. to M3 < 0.6 um ")  
 drc( m3 via2  enc < 0.01  shielded 
	"M3.E.1  Min extension of a M3 region beyond a VIA2 region is 0.01 um ")  
 errorLayer( geomAndNot(via2 m3) 
	"M3.E.1 2  Min extension of a M3 region beyond a VIA2 region is 0.01 um ") 
 m3e2_x = drc( m3 via2  enc < 0.06  opposite shielded edgeb )/*  a narrow side */
 m3e2_x_ang01 = geomGetAngledEdge(m3e2_x keep == 0)
 m3e2_x_ang011 = geomGetAdjacentEdge(m3e2_x m3e2_x_ang01 )
 m3e2_x_ang451 = geomGetAngledEdge(m3e2_x keep == 45)
 errorLayer( geomAndNot(m3e2_x_ang011 m3e2_x_ang451) 
	"M3.E.2  Min extension of M3 end-of-line region beyond VIA2 region is 0.06um ") /*  adjacent narrow sides */
 drc( m3  area < 0.202 
	"M3.A.1  Min M3 area region < 0.202 ") 
/*  Density check M3.R.1 included at the end of this file */
/*  VIA3 checks */
/* ============= */
 via3_p1 = geomGetPolygon(via3)
 via3_w1 = drc(via3 width <  0.26)
 via3_a1 = geomAndNot(via3 drc(via3 area ==  0.26* 0.26))
 via3w1_a = geomOr(via3_a1 geomOr(via3_p1 via3_w1))   

 errorLayer( geomOutside( via3w1_a rngx  ) 
	"VIA3.W.1  VIA3 must be 0.26 x 0.26 um ") /*  exclude from metal fuse protection ring area */ 
 drc( via3   sepNotch < 0.26  
	"VIA3.S.1  VIA3 SPACING < 0.26 ")  
 drc( m3 via3  enc < 0.01  shielded 
	"VIA3.E.1  Min extension of a M3 region beyond a VIA3 region is 0.01 um ")  
 errorLayer( geomAndNot(via3 m3) 
	"VIA3.E.1 2  Min extension of a M3 region beyond a VIA3 region is 0.01 um ") 
 via3e2_x = drc( m3 via3  enc < 0.06  opposite shielded edgeb )/*  a narrow side */
 via3e2_x_ang01 = geomGetAngledEdge(via3e2_x keep == 0)
 via3e2_x_ang011 = geomGetAdjacentEdge(via3e2_x via3e2_x_ang01 )
 via3e2_x_ang451 = geomGetAngledEdge(via3e2_x keep == 45)
 errorLayer( geomAndNot(via3e2_x_ang011 via3e2_x_ang451) 
	"VIA3.E.2  Min extension of M3 end-of-line region beyond VIA3 region is 0.06 um ") /*  adjacent narrow sides */
/*  VIA3.C.1 does not require a DRC check */
/*  M4 checks */
/* ============= */
 drc( m4   width < 0.28  withCornerTouch 
	"M4.W.1  M4 width < 0.28 ")  
 drc( m4   sepNotch < 0.28  
	"M4.S.1  M4 spacing < 0.28 ")  
m4s2_m4_s5 = geomGrow( m4 -5 -5 )
m4s21_m4_g5 = geomGrow( m4s2_m4_s5 5 5 )
 m4s22_m4_wide = geomAnd(m4s21_m4_g5 m4)  
 m4s22_m4_wide1 = fix(  1  /  0.196 ) 
 m4s22_m4_wide2 =  1  - m4s22_m4_wide1 * 0.196 
if( (m4s22_m4_wide2 > 0) then 
 m4s23_m4_exp = geomAnd(geomSize( m4s22_m4_wide m4s22_m4_wide2 ) m4 )
else
 m4s23_m4_exp = geomAnd( m4s22_m4_wide m4 )
)
  for(i 1 m4s22_m4_wide1
      m4s23_m4_exp = geomAnd(geomSize( m4s23_m4_exp 0.196 ) m4 )
     )

 m4s24_m4_branch = geomAndNot(m4s23_m4_exp m4s22_m4_wide)  
 m4s25_m4_branch_edge = geomGetEdge(m4s24_m4_branch coincident m4)   
 m4_exp_sz1 =  geomSize( m4s23_m4_exp 0.6 noClipAcute )   
 m4s26_m4_check = geomAnd(m4 m4_exp_sz1)  
 m4s27_m4_else = geomAndNot(m4s26_m4_check geomButtOrOver(m4s26_m4_check m4s23_m4_exp))   
 m4s28_m4_extend = geomAndNot(m4s26_m4_check m4s23_m4_exp)  
 drc( m4s22_m4_wide m4s27_m4_else 0 < sep < 0.6  shielded 
	"M4.S.2 3  Wide M4 (>10um) min. to M4 < 0.6 um ")  
 drc( m4s25_m4_branch_edge m4s27_m4_else 0 < sep < 0.6  opposite shielded 
	"M4.S.2 4  Wide M4 (>10um) min. to M4 < 0.6 um ")  
 drc( m4s25_m4_branch_edge m4s27_m4_else 0 < sep < 0.6 app < 0 shielded 
	"M4.S.2 5  Wide M4 (>10um) min. to M4 < 0.6 um ")  
 drc( m4s25_m4_branch_edge m4s27_m4_else 0 < sep < 0.6  shielded  app == 0 
	"M4.S.2 6  Wide M4 (>10um) min. to M4 < 0.6 um ")  
 m4s29_a = drc( m4s23_m4_exp  0 < sep < 0.6  shielded )
 errorLayer( geomAndNot(m4s29_a geomButtOrOver(m4s29_a m4s28_m4_extend)) 
	"M4.S.2 7  Wide M4 (>10um) min. to M4 < 0.6 um ")  
 drc( m4 via3  enc < 0.01  shielded 
	"M4.E.1  Min extension of a M4 region beyond a VIA3 region is 0.01 um ")  
 errorLayer( geomAndNot(via3 m4) 
	"M4.E.1 2  Min extension of a M4 region beyond a VIA3 region is 0.01 um ") 
 m4e2_x = drc( m4 via3  enc < 0.06  opposite shielded edgeb )/*  a narrow side */
 m4e2_x_ang01 = geomGetAngledEdge(m4e2_x keep == 0)
 m4e2_x_ang011 = geomGetAdjacentEdge(m4e2_x m4e2_x_ang01 )
 m4e2_x_ang451 = geomGetAngledEdge(m4e2_x keep == 45)
 errorLayer( geomAndNot(m4e2_x_ang011 m4e2_x_ang451) 
	"M4.E.2  Min extension of M4 end-of-line region beyond VIA3 region is 0.06um ") /*  adjacent narrow sides */
 drc( m4  area < 0.202 
	"M4.A.1  Min M4 area region < 0.202 ") 
/*  Density check M4.R.1 included at the end of this file */
/*  VIA4 checks */
/* ============= */
 via4_p1 = geomGetPolygon(via4)
 via4_w1 = drc(via4 width <  0.26)
 via4_a1 = geomAndNot(via4 drc(via4 area ==  0.26* 0.26))
 via4w1_a = geomOr(via4_a1 geomOr(via4_p1 via4_w1))   

 errorLayer( geomOutside( via4w1_a rngx  ) 
	"VIA4.W.1  VIA4 must be 0.26 x 0.26 um ") /*  exclude from metal fuse protection ring area */ 
 drc( via4   sepNotch < 0.26  
	"VIA4.S.1  VIA4 SPACING < 0.26 ")  
 drc( m4 via4  enc < 0.01  shielded 
	"VIA4.E.1  Min extension of a M4 region beyond a VIA4 region is 0.01 um ")  
 errorLayer( geomAndNot(via4 m4) 
	"VIA4.E.1 2  Min extension of a M4 region beyond a VIA4 region is 0.01 um ") 
 via4e2_x = drc( m4 via4  enc < 0.06  opposite shielded edgeb )/*  a narrow side */
 via4e2_x_ang01 = geomGetAngledEdge(via4e2_x keep == 0)
 via4e2_x_ang011 = geomGetAdjacentEdge(via4e2_x via4e2_x_ang01 )
 via4e2_x_ang451 = geomGetAngledEdge(via4e2_x keep == 45)
 errorLayer( geomAndNot(via4e2_x_ang011 via4e2_x_ang451) 
	"VIA4.E.2  Min extension of M4 end-of-line region beyond VIA4 region is 0.06 um ") /*  adjacent narrow sides */
/*  VIA4.C.1 does not require a DRC check */
/*  M5 checks */
/* ============= */
 drc( m5   width < 0.28  withCornerTouch 
	"M5.W.1  M5 width < 0.28 ")  
 drc( m5   sepNotch < 0.28  
	"M5.S.1  M5 spacing < 0.28 ")  
m5s2_m5_s5 = geomGrow( m5 -5 -5 )
m5s21_m5_g5 = geomGrow( m5s2_m5_s5 5 5 )
 m5s22_m5_wide = geomAnd(m5s21_m5_g5 m5)  
 m5s22_m5_wide1 = fix(  1  /  0.196 ) 
 m5s22_m5_wide2 =  1  - m5s22_m5_wide1 * 0.196 
if( (m5s22_m5_wide2 > 0) then 
 m5s23_m5_exp = geomAnd(geomSize( m5s22_m5_wide m5s22_m5_wide2 ) m5 )
else
 m5s23_m5_exp = geomAnd( m5s22_m5_wide m5 )
)
  for(i 1 m5s22_m5_wide1
      m5s23_m5_exp = geomAnd(geomSize( m5s23_m5_exp 0.196 ) m5 )
     )

 m5s24_m5_branch = geomAndNot(m5s23_m5_exp m5s22_m5_wide)  
 m5s25_m5_branch_edge = geomGetEdge(m5s24_m5_branch coincident m5)   
 m5_exp_sz1 =  geomSize( m5s23_m5_exp 0.6 noClipAcute )   
 m5s26_m5_check = geomAnd(m5 m5_exp_sz1)  
 m5s27_m5_else = geomAndNot(m5s26_m5_check geomButtOrOver(m5s26_m5_check m5s23_m5_exp))   
 m5s28_m5_extend = geomAndNot(m5s26_m5_check m5s23_m5_exp)  
 drc( m5s22_m5_wide m5s27_m5_else 0 < sep < 0.6  shielded 
	"M5.S.2 3  Wide M5 (>10um) min. to M5 < 0.6 um ")  
 drc( m5s25_m5_branch_edge m5s27_m5_else 0 < sep < 0.6  opposite shielded 
	"M5.S.2 4  Wide M5 (>10um) min. to M5 < 0.6 um ")  
 drc( m5s25_m5_branch_edge m5s27_m5_else 0 < sep < 0.6 app < 0 shielded 
	"M5.S.2 5  Wide M5 (>10um) min. to M5 < 0.6 um ")  
 drc( m5s25_m5_branch_edge m5s27_m5_else 0 < sep < 0.6  shielded  app == 0 
	"M5.S.2 6  Wide M5 (>10um) min. to M5 < 0.6 um ")  
 m5s29_a = drc( m5s23_m5_exp  0 < sep < 0.6  shielded )
 errorLayer( geomAndNot(m5s29_a geomButtOrOver(m5s29_a m5s28_m5_extend)) 
	"M5.S.2 7  Wide M5 (>10um) min. to M5 < 0.6 um ")  
 drc( m5 via4  enc < 0.01  shielded 
	"M5.E.1  Min extension of a M5 region beyond a VIA4 region is 0.01 um ")  
 errorLayer( geomAndNot(via4 m5) 
	"M5.E.1 2  Min extension of a M5 region beyond a VIA4 region is 0.01 um ") 
 m5e2_x = drc( m5 via4  enc < 0.06  opposite shielded edgeb )/*  a narrow side */
 m5e2_x_ang01 = geomGetAngledEdge(m5e2_x keep == 0)
 m5e2_x_ang011 = geomGetAdjacentEdge(m5e2_x m5e2_x_ang01 )
 m5e2_x_ang451 = geomGetAngledEdge(m5e2_x keep == 45)
 errorLayer( geomAndNot(m5e2_x_ang011 m5e2_x_ang451) 
	"M5.E.2  Min extension of M5 end-of-line region beyond VIA4 region is 0.06um ") /*  adjacent narrow sides */
 drc( m5  area < 0.202 
	"M5.A.1  Min M5 area region < 0.202 ") 
/*  Density check M5.R.1 included at the end of this file */
/*  VIA5 checks */
/* ============= */
if((CUP == 1) then
 via5r = geomOutside( via5 cb  )   
else;
 via5r = geomCat(via5)   
) ; 
 via5r_p1 = geomGetPolygon(via5r)
 via5r_w1 = drc(via5r width <  0.36)
 via5r_a1 = geomAndNot(via5r drc(via5r area ==  0.36* 0.36))
 via5w1_a = geomOr(via5r_a1 geomOr(via5r_p1 via5r_w1))   

 errorLayer( geomOutside( via5w1_a rngx  ) 
	"VIA5.W.1  VIA5 must be 0.36 x 0.36 um ") /*  exclude from metal fuse protection ring area */ 
 drc( via5r   sepNotch < 0.35  
	"VIA5.S.1  VIA5 spacing < 0.35 ")  
 drc( m5 via5r  enc < 0.01  shielded 
	"VIA5.E.1  Min extension of a M5 region beyond a VIA5 region is 0.01 um ")  
 errorLayer( geomAndNot(via5r m5) 
	"VIA5.E.1 2  Min extension of a M5 region beyond a VIA5 region is 0.01 um ") 
 via5e2_x = drc( m5 via5r  enc < 0.06  opposite shielded edgeb )/*  a narrow side */
 via5e2_x_ang01 = geomGetAngledEdge(via5e2_x keep == 0)
 via5e2_x_ang011 = geomGetAdjacentEdge(via5e2_x via5e2_x_ang01 )
 via5e2_x_ang451 = geomGetAngledEdge(via5e2_x keep == 45)
 errorLayer( geomAndNot(via5e2_x_ang011 via5e2_x_ang451) 
	"VIA5.E.2  Min extension of a M5 end-of-line region beyond VIA5 region is 0.06 um ") /*  adjacent narrow sides */
/*  VIA5.C.1 does not require check */
/*  M6 checks */
/* ============= */
/*  METAL RATIO CHECKS */
/* ====================== */
 polyi_den1 = drc( polyi   coverage < 0.14  )
 errorLayer( geomGetCoverage( polyi_den1 keep < 0.14 ) 
	"PO.R.3  Min poly area coverage < 14% ") 
 m1xd_den1 = drc( m1xd   coverage < 0.3  )
 errorLayer( geomGetCoverage( m1xd_den1 keep < 0.3 ) 
	"M1.R.1  Min M1 area coverage < 30% ") 
 m2xd_den1 = drc( m2xd   coverage < 0.3  )
 errorLayer( geomGetCoverage( m2xd_den1 keep < 0.3 ) 
	"M2.R.1  Min M2 area coverage < 30% ") 
 m3xd_den1 = drc( m3xd   coverage < 0.3  )
 errorLayer( geomGetCoverage( m3xd_den1 keep < 0.3 ) 
	"M3.R.1  Min M3 area coverage < 30% ") 
 m4xd_den1 = drc( m4xd   coverage < 0.3  )
 errorLayer( geomGetCoverage( m4xd_den1 keep < 0.3 ) 
	"M4.R.1  Min M4 area coverage < 30% ") 
 m5xd_den1 = drc( m5xd   coverage < 0.3  )
 errorLayer( geomGetCoverage( m5xd_den1 keep < 0.3 ) 
	"M5.R.1  Min M5 area coverage < 30% ") 
/*  Dummy Pad */
/* ========== */
 dp_v1 = geomAnd(dpdmy via1)  
 dp_v2 = geomAnd(dpdmy via2)  
 dp_v3 = geomAnd(dpdmy via3)  
 dp_v4 = geomAnd(dpdmy via4)  
 dp_v5 = geomAnd(dpdmy via5)  
 dp_vd = geomAnd(dpdmy viad)  
 errorLayer( geomAndNot(dpdmy m1) 
	"ADP.R.0A  chip corner dummy pad structure should be M1/M2.../M6 ") 
 errorLayer( geomAndNot(dpdmy m2) 
	"ADP.R.0A 2  chip corner dummy pad structure should be M1/M2.../M6 ") 
 errorLayer( geomAndNot(dpdmy m3) 
	"ADP.R.0A 3  chip corner dummy pad structure should be M1/M2.../M6 ") 
 errorLayer( geomAndNot(dpdmy m4) 
	"ADP.R.0A 4  chip corner dummy pad structure should be M1/M2.../M6 ") 
 errorLayer( geomAndNot(dpdmy m5) 
	"ADP.R.0A 5  chip corner dummy pad structure should be M1/M2.../M6 ") 
 errorLayer( geomAndNot(dpdmy m6) 
	"ADP.R.0A 6  chip corner dummy pad structure should be M1/M2.../M6 ") 
 errorLayer( geomAndNot(dpdmy geomEnclose(dpdmy via1)) 
	"ADP.R.0B  chip corner dummy pad structure should be VIA1/VIA2.../VIA6 ")  
 errorLayer( geomAndNot(dpdmy geomEnclose(dpdmy via2)) 
	"ADP.R.0B 2  chip corner dummy pad structure should be VIA1/VIA2.../VIA6 ")  
 errorLayer( geomAndNot(dpdmy geomEnclose(dpdmy via3)) 
	"ADP.R.0B 3  chip corner dummy pad structure should be VIA1/VIA2.../VIA6 ")  
 errorLayer( geomAndNot(dpdmy geomEnclose(dpdmy via4)) 
	"ADP.R.0B 4  chip corner dummy pad structure should be VIA1/VIA2.../VIA6 ")  
 errorLayer( geomAndNot(dpdmy geomEnclose(dpdmy via5)) 
	"ADP.R.0B 5  chip corner dummy pad structure should be VIA1/VIA2.../VIA6 ")  
 dp_v2_or1 =  geomOr(dp_v2 dp_v4)  
 adpr0c_grp1 = geomOr(dp_v2_or1 dp_vd)  
 dp_v1_or1 =  geomOr(dp_v1 dp_v3)  
 adpr0c1_grp2 = geomOr(dp_v1_or1 dp_v5)  
 errorLayer( geomAnd(adpr0c_grp1 adpr0c1_grp2) 
	"ADP.R.0C  COs and Vias structure in Dummy Pad ") 
 drc( dp_v1   sepNotch < 0.58  
	"ADP.S.1_VIA1  Via1 spacing (the same level) < 0.58um. ")  
 drc( dp_v2   sepNotch < 0.58  
	"ADP.S.1_VIA2  Via2 spacing (the same level) < 0.58um. ")  
 drc( dp_v3   sepNotch < 0.58  
	"ADP.S.1_VIA3  Via3 spacing (the same level) < 0.58um. ")  
 drc( dp_v4   sepNotch < 0.58  
	"ADP.S.1_VIA4  Via4 spacing (the same level) < 0.58um. ")  
 drc( dp_v5   sepNotch < 0.58  
	"ADP.S.1_VIA5  Via5 spacing (the same level) < 0.58um. ")  
 drc( dp_vd   sepNotch < 0.58  
	"ADP.S.1_VIAD  ViaD spacing (the same level) < 0.58um. ")  
 drc( dp_v1 dp_v2  sep < 0.23  shielded 
	"ADP.C.1_V1_V2  Vias spacing (different level) < 0.23um. ")  
 drc( dp_v2 dp_v3  sep < 0.23  shielded 
	"ADP.C.1_V2_V3  Vias spacing (different level) < 0.23um. ")  
 drc( dp_v3 dp_v4  sep < 0.23  shielded 
	"ADP.C.1_V3_V4  Vias spacing (different level) < 0.23um. ")  
 drc( dp_v4 dp_v5  sep < 0.16  shielded 
	"ADP.C.2_V4_V5  Via4 and Via5 spacing < 0.16um. ")  
 drc( dp_v5 dp_vd  sep < 0.16  shielded 
	"ADP.C.2_V5_VD  Via5 and ViaD spacing < 0.16um. ")  
 drc( m1 dp_v1  enc < 3  shielded 
	"ADP.E.1_V1_M1  Metal1 enclose Via1 in dummy pad < 3um. ")  
 drc( m2 dp_v1  enc < 3  shielded 
	"ADP.E.1_V1_M2  Metal2 enclose Via1 in dummy pad < 3um. ")  
 drc( m2 dp_v2  enc < 3  shielded 
	"ADP.E.1_V2_M2  Metal2 enclose Via2 in dummy pad < 3um. ")  
 drc( m3 dp_v2  enc < 3  shielded 
	"ADP.E.1_V2_M3  Metal3 enclose Via2 in dummy pad < 3um. ")  
 drc( m3 dp_v3  enc < 3  shielded 
	"ADP.E.1_V3_M3  Metal3 enclose Via3 in dummy pad < 3um. ")  
 drc( m4 dp_v3  enc < 3  shielded 
	"ADP.E.1_V3_M4  Metal4 enclose Via3 in dummy pad < 3um. ")  
 drc( m4 dp_v4  enc < 3  shielded 
	"ADP.E.1_V4_M4  Metal4 enclose Via4 in dummy pad < 3um. ")  
 drc( m5 dp_v4  enc < 3  shielded 
	"ADP.E.1_V4_M5  Metal5 enclose Via4 in dummy pad < 3um. ")  
 drc( m5 dp_v5  enc < 3  shielded 
	"ADP.E.1_V5_M5  Metal5 enclose Via5 in dummy pad < 3um. ")  
 drc( m6 dp_v5  enc < 3  shielded 
	"ADP.E.1_V5_M6  Metal6 enclose Via5 in dummy pad < 3um. ")  
 drc( m6 dp_vd  enc < 3  shielded 
	"ADP.E.1_VD_M6  Meta6l enclose ViaD in dummy pad < 3um. ")  
 drc( md dp_vd  enc < 3  shielded 
	"ADP.E.1_VD_MD  MD enclose ViaD in dummy pad < 3um. ")  
/*  APD.W.1 is checked by VIAx.W.1 ( x= 1..4) */
/*  ADP.W.2 is checked by VIA5.W.1 */
/*  Guideline */
 drc( dpdmy   sepNotch < 2  
	"ADP.S.2  dummy pad spacing < 2um. ")  
 adpw3_dpadg = drc( dpdmy  0 < width <= 80  opposite )
 errorLayer( geomAndNot(dpdmy adpw3_dpadg) 
	"ADP.W.3  dummy pad width > 80um ") 
 drc( dpdmy  0 < width < 40  
	"ADP.W.4  dummy pad width < 40um ")  
/*  Power Line */
/* =========== */
 pl_v1 = geomAnd(pldmy via1)  
 pl_v2 = geomAnd(pldmy via2)  
 pl_v3 = geomAnd(pldmy via3)  
 pl_v4 = geomAnd(pldmy via4)  
 pl_v5 = geomAnd(pldmy via5)  
 pl_vd = geomAnd(pldmy viad)  
 pl_v2_or1 =  geomOr(pl_v2 pl_v4)  
 adpr1c_grp1 = geomOr(pl_v2_or1 pl_vd)  
 pl_v1_or1 =  geomOr(pl_v1 pl_v3)  
 adpr1c1_grp2 = geomOr(pl_v1_or1 pl_v5)  
 errorLayer( geomAnd(adpr1c_grp1 adpr1c1_grp2) 
	"ADP.R.1C  COs and Vias structure in Power Line ") 
 drc( pl_v1   sepNotch < 0.58  
	"ADP.S.4_V1  Via1 spacing (the same level) < 0.58um. ")  
 drc( pl_v2   sepNotch < 0.58  
	"ADP.S.4_V2  Via2 spacing (the same level) < 0.58um. ")  
 drc( pl_v3   sepNotch < 0.58  
	"ADP.S.4_V3  Via3 spacing (the same level) < 0.58um. ")  
 drc( pl_v4   sepNotch < 0.58  
	"ADP.S.4_V4  Via4 spacing (the same level) < 0.58um. ")  
 drc( pl_v5   sepNotch < 0.58  
	"ADP.S.4_V5  Via5 spacing (the same level) < 0.58um. ")  
 drc( pl_vd   sepNotch < 0.58  
	"ADP.S.4_VD  ViaD spacing (the same level) < 0.58um. ")  
 drc( pl_v1 pl_v2  sep < 0.23  shielded 
	"ADP.C.3_V1_V2  Vias spacing (different level) in chip corner power line < 0.23um. ")  
 drc( pl_v2 pl_v3  sep < 0.23  shielded 
	"ADP.C.3_V2_V3  Vias spacing (different level) in chip corner power line < 0.23um. ")  
 drc( pl_v3 pl_v4  sep < 0.23  shielded 
	"ADP.C.3_V3_V4  Vias spacing (different level) in chip corner power line < 0.23um. ")  
 drc( pl_v4 pl_v5  sep < 0.23  shielded 
	"ADP.C.3_V4_V5  Vias spacing (different level) in chip corner power line < 0.23um. ")  
 drc( pl_v5 pl_vd  sep < 0.23  shielded 
	"ADP.C.3_V5_VD  Vias spacing (different level) in chip corner power line < 0.23um. ")  
 drc( m1 pl_v1  enc < 0.2  shielded 
	"ADP.E.2_V1_M1  Metal1 enclose Via1 in chip corner power line < 0.2um. ")  
 drc( m2 pl_v1  enc < 0.2  shielded 
	"ADP.E.2_V1_M2  Metal2 enclose Via1 in chip corner power line < 0.2um. ")  
 drc( m2 pl_v2  enc < 0.2  shielded 
	"ADP.E.2_V2_M2  Metal2 enclose Via2 in chip corner power line < 0.2um. ")  
 drc( m3 pl_v2  enc < 0.2  shielded 
	"ADP.E.2_V2_M3  Metal3 enclose Via2 in chip corner power line < 0.2um. ")  
 drc( m3 pl_v3  enc < 0.2  shielded 
	"ADP.E.2_V3_M3  Metal3 enclose Via3 in chip corner power line < 0.2um. ")  
 drc( m4 pl_v3  enc < 0.2  shielded 
	"ADP.E.2_V3_M4  Metal4 enclose Via3 in chip corner power line < 0.2um. ")  
 drc( m4 pl_v4  enc < 0.2  shielded 
	"ADP.E.2_V4_M4  Metal4 enclose Via4 in chip corner power line < 0.2um. ")  
 drc( m5 pl_v4  enc < 0.2  shielded 
	"ADP.E.2_V4_M5  Metal5 enclose Via4 in chip corner power line < 0.2um. ")  
 drc( m5 pl_v5  enc < 0.2  shielded 
	"ADP.E.2_V5_M5  Metal5 enclose Via5 in chip corner power line < 0.2um. ")  
 drc( m6 pl_v5  enc < 0.2  shielded 
	"ADP.E.2_V5_M6  Metal6 enclose Via5 in chip corner power line < 0.2um. ")  
 drc( m6 pl_vd  enc < 0.2  shielded 
	"ADP.E.2_VD_M6  Metal6 enclose ViaD in chip corner power line < 0.2um. ")  
 drc( md pl_vd  enc < 0.2  shielded 
	"ADP.E.2_VD_MD  MD enclose ViaD in chip corner power line < 0.2um. ")  
/* METAL SLOT CHECKS */
/* ================ */
/* Bonding pad ,chip corner dummy pad ,and inductor need not put slot */
if((CUP == 1) then
 slt_exd = geomCat(dpdmy)   
 slt_exdt = geomOr(cbi dpdmy)  
else;
 slt_exd = geomOr(cbi dpdmy)  
 slt_exdt = geomCat(slt_exd)   
) ; 
 pad_exd = geomAndNot(ubmi geomButtOrOver(ubmi mdxd))   
 m1exd = geomAndNot(m1xd slt_exd)  
/* M1 SLOT CHECKS */
/* ============== */
 m1exd_gh1 = geomGetHoled(m1exd)	
 m1exd_ho1 = geomHoles(m1exd_gh1)
 m1exd_ho1_not1 = geomAndNot(m1exd_ho1 m1exd_gh1)
 m1exd_ho1_not11 = geomGetHoled(m1exd_ho1_not1)
 m1innerhole = geomAndNot(m1exd_ho1_not1 m1exd_ho1_not11)   
 m1bighole = geomSize( m1innerhole -5 noClipAcute )   
 m1hole = geomOutside( m1innerhole m1bighole  )   
 m1holespace = geomAndNot(m1hole m1exd)  
 fim1c = geomOr(m1exd m1holespace)  
 fim1c_sz1 =  geomSize( geomSize( fim1c -1.0 noClipAcute ) 1.0 noClipAcute )   
 fim1c_sz1_sz1 =  geomSize( geomSize( fim1c_sz1 -17.5 noClipAcute ) 17.5 noClipAcute )   
 lm1x = geomAnd(fim1c_sz1_sz1 fim1c)  
 m1holed = geomAnd(m1holespace lm1x)  
 m1exd_sz1 =  geomSize( geomSize( m1exd -1.0 noClipAcute ) 1.0 noClipAcute )   
 errorLayer( geomSize( geomSize( m1exd_sz1 -17.5 noClipAcute ) 17.5 noClipAcute ) 
	"AMS.1.M1  Wide Metal (>35um) must have slot. ")  
geomConnect(
	buttOrOver(m1holed lm1x)
)

processAntenna(
	gate((lm1x m1holed))
        antenna( m1holed )
        ratio = m1holed.area/lm1x.area 
	drcAntenna( m1holed lm1x ratio keep < 0.015  
	"AMS.DN.M1  Min. Hole density for metal lines that need to apply slot  1.5% ")
)
 m1exd_gh2 = geomGetHoled(m1exd)	
 m1exd_ho2 = geomHoles(m1exd_gh2)
 m1exd_ho2_not1 = geomAndNot(m1exd_ho2 m1exd_gh2)
 m1exd_ho2_not11 = geomGetHoled(m1exd_ho2_not1)
 m1exd_inner2 = geomAndNot(m1exd_ho2_not1 m1exd_ho2_not11)	
 m1hoc = geomOutside(m1exd_inner2 m1exd)   
 m1hod = geomSize( geomSize( m1hoc -5 noClipAcute ) 5 noClipAcute )  /*  Assume Metal Slot < 10um */ 
 m1ho = geomOutside( m1hoc m1hod  )  /*  Metal slot (include not in wide metal) */ 
 fim1 = geomOr(m1exd m1ho)  /*  Metal with slot fill in */
 m1wma = geomSize( geomSize( fim1 -17.5 noClipAcute ) 17.5 noClipAcute )   
 m1wm = geomAndNot(m1wma geomOutside(m1wma m1ho))   
 m1slt = geomInside( m1ho m1wm  )   
 amw1m1_m1wmd = geomAnd(m1wma m1exd)  
 amw1m11_m1wme = geomButtOnly(geomOutside(amw1m1_m1wmd m1slt) m1slt )   
 amw1m12_s_fm1 = geomAndNot(m1xd amw1m11_m1wme)  
 amw1m13_s_fim1e = geomGetEdge(amw1m12_s_fm1 butting amw1m11_m1wme)   
 errorLayer( geomGetLength(amw1m13_s_fim1e  keep < 10 contiguous ) 
	"AM.W.1.M1  Min. width for metal connected to wide metal 10um. ")  
 m2exd = geomAndNot(m2xd slt_exd)  
/* M2 SLOT CHECKS */
/* ============== */
 m2exd_gh1 = geomGetHoled(m2exd)	
 m2exd_ho1 = geomHoles(m2exd_gh1)
 m2exd_ho1_not1 = geomAndNot(m2exd_ho1 m2exd_gh1)
 m2exd_ho1_not11 = geomGetHoled(m2exd_ho1_not1)
 m2innerhole = geomAndNot(m2exd_ho1_not1 m2exd_ho1_not11)   
 m2bighole = geomSize( m2innerhole -5 noClipAcute )   
 m2hole = geomOutside( m2innerhole m2bighole  )   
 m2holespace = geomAndNot(m2hole m2exd)  
 fim2c = geomOr(m2exd m2holespace)  
 fim2c_sz1 =  geomSize( geomSize( fim2c -1.0 noClipAcute ) 1.0 noClipAcute )   
 fim2c_sz1_sz1 =  geomSize( geomSize( fim2c_sz1 -17.5 noClipAcute ) 17.5 noClipAcute )   
 lm2x = geomAnd(fim2c_sz1_sz1 fim2c)  
 m2holed = geomAnd(m2holespace lm2x)  
 m2exd_sz1 =  geomSize( geomSize( m2exd -1.0 noClipAcute ) 1.0 noClipAcute )   
 errorLayer( geomSize( geomSize( m2exd_sz1 -17.5 noClipAcute ) 17.5 noClipAcute ) 
	"AMS.1.M2  Wide Metal (>35um) must have slot. ")  
geomConnect(
	buttOrOver(m2holed lm2x)
)

processAntenna(
	gate((lm2x m2holed))
        antenna( m2holed )
        ratio = m2holed.area/lm2x.area 
	drcAntenna( m2holed lm2x ratio keep < 0.015  
	"AMS.DN.M2  Min. Hole density for metal lines that need to apply slot  1.5% ")
)
 m2exd_gh2 = geomGetHoled(m2exd)	
 m2exd_ho2 = geomHoles(m2exd_gh2)
 m2exd_ho2_not1 = geomAndNot(m2exd_ho2 m2exd_gh2)
 m2exd_ho2_not11 = geomGetHoled(m2exd_ho2_not1)
 m2exd_inner2 = geomAndNot(m2exd_ho2_not1 m2exd_ho2_not11)	
 m2hoc = geomOutside(m2exd_inner2 m2exd)   
 m2hod = geomSize( geomSize( m2hoc -5 noClipAcute ) 5 noClipAcute )  /*  Assume Metal Slot < 10um */ 
 m2ho = geomOutside( m2hoc m2hod  )  /*  Metal slot (include not in wide metal) */ 
 fim2 = geomOr(m2exd m2ho)  /*  Metal with slot fill in */
 m2wma = geomSize( geomSize( fim2 -17.5 noClipAcute ) 17.5 noClipAcute )   
 m2wm = geomAndNot(m2wma geomOutside(m2wma m2ho))   
 m2slt = geomInside( m2ho m2wm  )   
 amw1m2_m2wmd = geomAnd(m2wma m2exd)  
 amw1m21_m2wme = geomButtOnly(geomOutside(amw1m2_m2wmd m2slt) m2slt )   
 amw1m22_s_fm2 = geomAndNot(m2xd amw1m21_m2wme)  
 amw1m23_s_fim2e = geomGetEdge(amw1m22_s_fm2 butting amw1m21_m2wme)   
 errorLayer( geomGetLength(amw1m23_s_fim2e  keep < 10 contiguous ) 
	"AM.W.1.M2  Min. width for metal connected to wide metal 10um. ")  
 m3exd = geomAndNot(m3xd slt_exd)  
/* M3 SLOT CHECKS */
/* ============== */
 m3exd_gh1 = geomGetHoled(m3exd)	
 m3exd_ho1 = geomHoles(m3exd_gh1)
 m3exd_ho1_not1 = geomAndNot(m3exd_ho1 m3exd_gh1)
 m3exd_ho1_not11 = geomGetHoled(m3exd_ho1_not1)
 m3innerhole = geomAndNot(m3exd_ho1_not1 m3exd_ho1_not11)   
 m3bighole = geomSize( m3innerhole -5 noClipAcute )   
 m3hole = geomOutside( m3innerhole m3bighole  )   
 m3holespace = geomAndNot(m3hole m3exd)  
 fim3c = geomOr(m3exd m3holespace)  
 fim3c_sz1 =  geomSize( geomSize( fim3c -1.0 noClipAcute ) 1.0 noClipAcute )   
 fim3c_sz1_sz1 =  geomSize( geomSize( fim3c_sz1 -17.5 noClipAcute ) 17.5 noClipAcute )   
 lm3x = geomAnd(fim3c_sz1_sz1 fim3c)  
 m3holed = geomAnd(m3holespace lm3x)  
 m3exd_sz1 =  geomSize( geomSize( m3exd -1.0 noClipAcute ) 1.0 noClipAcute )   
 errorLayer( geomSize( geomSize( m3exd_sz1 -17.5 noClipAcute ) 17.5 noClipAcute ) 
	"AMS.1.M3  Wide Metal (>35um) must have slot. ")  
geomConnect(
	buttOrOver(m3holed lm3x)
)

processAntenna(
	gate((lm3x m3holed))
        antenna( m3holed )
        ratio = m3holed.area/lm3x.area 
	drcAntenna( m3holed lm3x ratio keep < 0.015  
	"AMS.DN.M3  Min. Hole density for metal lines that need to apply slot  1.5% ")
)
 m3exd_gh2 = geomGetHoled(m3exd)	
 m3exd_ho2 = geomHoles(m3exd_gh2)
 m3exd_ho2_not1 = geomAndNot(m3exd_ho2 m3exd_gh2)
 m3exd_ho2_not11 = geomGetHoled(m3exd_ho2_not1)
 m3exd_inner2 = geomAndNot(m3exd_ho2_not1 m3exd_ho2_not11)	
 m3hoc = geomOutside(m3exd_inner2 m3exd)   
 m3hod = geomSize( geomSize( m3hoc -5 noClipAcute ) 5 noClipAcute )  /*  Assume Metal Slot < 10um */ 
 m3ho = geomOutside( m3hoc m3hod  )  /*  Metal slot (include not in wide metal) */ 
 fim3 = geomOr(m3exd m3ho)  /*  Metal with slot fill in */
 m3wma = geomSize( geomSize( fim3 -17.5 noClipAcute ) 17.5 noClipAcute )   
 m3wm = geomAndNot(m3wma geomOutside(m3wma m3ho))   
 m3slt = geomInside( m3ho m3wm  )   
 amw1m3_m3wmd = geomAnd(m3wma m3exd)  
 amw1m31_m3wme = geomButtOnly(geomOutside(amw1m3_m3wmd m3slt) m3slt )   
 amw1m32_s_fm3 = geomAndNot(m3xd amw1m31_m3wme)  
 amw1m33_s_fim3e = geomGetEdge(amw1m32_s_fm3 butting amw1m31_m3wme)   
 errorLayer( geomGetLength(amw1m33_s_fim3e  keep < 10 contiguous ) 
	"AM.W.1.M3  Min. width for metal connected to wide metal 10um. ")  
 m4exd = geomAndNot(m4xd slt_exd)  
/* M4 SLOT CHECKS */
/* ============== */
 m4exd_gh1 = geomGetHoled(m4exd)	
 m4exd_ho1 = geomHoles(m4exd_gh1)
 m4exd_ho1_not1 = geomAndNot(m4exd_ho1 m4exd_gh1)
 m4exd_ho1_not11 = geomGetHoled(m4exd_ho1_not1)
 m4innerhole = geomAndNot(m4exd_ho1_not1 m4exd_ho1_not11)   
 m4bighole = geomSize( m4innerhole -5 noClipAcute )   
 m4hole = geomOutside( m4innerhole m4bighole  )   
 m4holespace = geomAndNot(m4hole m4exd)  
 fim4c = geomOr(m4exd m4holespace)  
 fim4c_sz1 =  geomSize( geomSize( fim4c -1.0 noClipAcute ) 1.0 noClipAcute )   
 fim4c_sz1_sz1 =  geomSize( geomSize( fim4c_sz1 -17.5 noClipAcute ) 17.5 noClipAcute )   
 lm4x = geomAnd(fim4c_sz1_sz1 fim4c)  
 m4holed = geomAnd(m4holespace lm4x)  
 m4exd_sz1 =  geomSize( geomSize( m4exd -1.0 noClipAcute ) 1.0 noClipAcute )   
 errorLayer( geomSize( geomSize( m4exd_sz1 -17.5 noClipAcute ) 17.5 noClipAcute ) 
	"AMS.1.M4  Wide Metal (>35um) must have slot. ")  
geomConnect(
	buttOrOver(m4holed lm4x)
)

processAntenna(
	gate((lm4x m4holed))
        antenna( m4holed )
        ratio = m4holed.area/lm4x.area 
	drcAntenna( m4holed lm4x ratio keep < 0.015  
	"AMS.DN.M4  Min. Hole density for metal lines that need to apply slot  1.5% ")
)
 m4exd_gh2 = geomGetHoled(m4exd)	
 m4exd_ho2 = geomHoles(m4exd_gh2)
 m4exd_ho2_not1 = geomAndNot(m4exd_ho2 m4exd_gh2)
 m4exd_ho2_not11 = geomGetHoled(m4exd_ho2_not1)
 m4exd_inner2 = geomAndNot(m4exd_ho2_not1 m4exd_ho2_not11)	
 m4hoc = geomOutside(m4exd_inner2 m4exd)   
 m4hod = geomSize( geomSize( m4hoc -5 noClipAcute ) 5 noClipAcute )  /*  Assume Metal Slot < 10um */ 
 m4ho = geomOutside( m4hoc m4hod  )  /*  Metal slot (include not in wide metal) */ 
 fim4 = geomOr(m4exd m4ho)  /*  Metal with slot fill in */
 m4wma = geomSize( geomSize( fim4 -17.5 noClipAcute ) 17.5 noClipAcute )   
 m4wm = geomAndNot(m4wma geomOutside(m4wma m4ho))   
 m4slt = geomInside( m4ho m4wm  )   
 amw1m4_m4wmd = geomAnd(m4wma m4exd)  
 amw1m41_m4wme = geomButtOnly(geomOutside(amw1m4_m4wmd m4slt) m4slt )   
 amw1m42_s_fm4 = geomAndNot(m4xd amw1m41_m4wme)  
 amw1m43_s_fim4e = geomGetEdge(amw1m42_s_fm4 butting amw1m41_m4wme)   
 errorLayer( geomGetLength(amw1m43_s_fim4e  keep < 10 contiguous ) 
	"AM.W.1.M4  Min. width for metal connected to wide metal 10um. ")  
 m5exd = geomAndNot(m5xd slt_exdt)  
/* M5 SLOT CHECKS */
/* ============== */
 m5exd_gh1 = geomGetHoled(m5exd)	
 m5exd_ho1 = geomHoles(m5exd_gh1)
 m5exd_ho1_not1 = geomAndNot(m5exd_ho1 m5exd_gh1)
 m5exd_ho1_not11 = geomGetHoled(m5exd_ho1_not1)
 m5innerhole = geomAndNot(m5exd_ho1_not1 m5exd_ho1_not11)   
 m5bighole = geomSize( m5innerhole -5 noClipAcute )   
 m5hole = geomOutside( m5innerhole m5bighole  )   
 m5holespace = geomAndNot(m5hole m5exd)  
 fim5c = geomOr(m5exd m5holespace)  
 fim5c_sz1 =  geomSize( geomSize( fim5c -1.0 noClipAcute ) 1.0 noClipAcute )   
 fim5c_sz1_sz1 =  geomSize( geomSize( fim5c_sz1 -17.5 noClipAcute ) 17.5 noClipAcute )   
 lm5x = geomAnd(fim5c_sz1_sz1 fim5c)  
 m5holed = geomAnd(m5holespace lm5x)  
 m5exd_sz1 =  geomSize( geomSize( m5exd -1.0 noClipAcute ) 1.0 noClipAcute )   
 errorLayer( geomSize( geomSize( m5exd_sz1 -17.5 noClipAcute ) 17.5 noClipAcute ) 
	"AMS.1.M5  Wide Metal (>35um) must have slot. ")  
geomConnect(
	buttOrOver(m5holed lm5x)
)

processAntenna(
	gate((lm5x m5holed))
        antenna( m5holed )
        ratio = m5holed.area/lm5x.area 
	drcAntenna( m5holed lm5x ratio keep < 0.015  
	"AMS.DN.M5  Min. Hole density for metal lines that need to apply slot  1.5% ")
)
 m5exd_gh2 = geomGetHoled(m5exd)	
 m5exd_ho2 = geomHoles(m5exd_gh2)
 m5exd_ho2_not1 = geomAndNot(m5exd_ho2 m5exd_gh2)
 m5exd_ho2_not11 = geomGetHoled(m5exd_ho2_not1)
 m5exd_inner2 = geomAndNot(m5exd_ho2_not1 m5exd_ho2_not11)	
 m5hoc = geomOutside(m5exd_inner2 m5exd)   
 m5hod = geomSize( geomSize( m5hoc -5 noClipAcute ) 5 noClipAcute )  /*  Assume Metal Slot < 10um */ 
 m5ho = geomOutside( m5hoc m5hod  )  /*  Metal slot (include not in wide metal) */ 
 fim5 = geomOr(m5exd m5ho)  /*  Metal with slot fill in */
 m5wma = geomSize( geomSize( fim5 -17.5 noClipAcute ) 17.5 noClipAcute )   
 m5wm = geomAndNot(m5wma geomOutside(m5wma m5ho))   
 m5slt = geomInside( m5ho m5wm  )   
 amw1m5_m5wmd = geomAnd(m5wma m5exd)  
 amw1m51_m5wme = geomButtOnly(geomOutside(amw1m5_m5wmd m5slt) m5slt )   
 amw1m52_s_fm5 = geomAndNot(m5xd amw1m51_m5wme)  
 amw1m53_s_fim5e = geomGetEdge(amw1m52_s_fm5 butting amw1m51_m5wme)   
 errorLayer( geomGetLength(amw1m53_s_fim5e  keep < 10 contiguous ) 
	"AM.W.1.M5  Min. width for metal connected to wide metal 10um. ")  
 pad_exd_ite1 = fix(  2  /  0.32 ) 
 pad_exd_remain1 =  2  - pad_exd_ite1 * 0.32 
if( (pad_exd_remain1 > 0) then 
 pad_exd6 = geomAnd(geomSize( pad_exd pad_exd_remain1 ) m6xd )
else
 pad_exd6 = geomAnd( pad_exd m6xd )
)
  for(i 1 pad_exd_ite1
      pad_exd6 = geomAnd(geomSize( pad_exd6 0.32 ) m6xd )
     )

 slt_exdt_or1 =  geomOr(slt_exdt pad_exd6)  
 m6exd = geomAndNot(m6xd slt_exdt_or1)  
/* M6 SLOT CHECKS */
/* ============== */
 m6exd_gh1 = geomGetHoled(m6exd)	
 m6exd_ho1 = geomHoles(m6exd_gh1)
 m6exd_ho1_not1 = geomAndNot(m6exd_ho1 m6exd_gh1)
 m6exd_ho1_not11 = geomGetHoled(m6exd_ho1_not1)
 m6innerhole = geomAndNot(m6exd_ho1_not1 m6exd_ho1_not11)   
 m6bighole = geomSize( m6innerhole -5 noClipAcute )   
 m6hole = geomOutside( m6innerhole m6bighole  )   
 m6holespace = geomAndNot(m6hole m6exd)  
 fim6c = geomOr(m6exd m6holespace)  
 fim6c_sz1 =  geomSize( geomSize( fim6c -1.0 noClipAcute ) 1.0 noClipAcute )   
 fim6c_sz1_sz1 =  geomSize( geomSize( fim6c_sz1 -17.5 noClipAcute ) 17.5 noClipAcute )   
 lm6x = geomAnd(fim6c_sz1_sz1 fim6c)  
 m6holed = geomAnd(m6holespace lm6x)  
 m6exd_sz1 =  geomSize( geomSize( m6exd -1.0 noClipAcute ) 1.0 noClipAcute )   
 errorLayer( geomSize( geomSize( m6exd_sz1 -17.5 noClipAcute ) 17.5 noClipAcute ) 
	"AMS.1.M6  Wide Metal (>35um) must have slot. ")  
geomConnect(
	buttOrOver(m6holed lm6x)
)

processAntenna(
	gate((lm6x m6holed))
        antenna( m6holed )
        ratio = m6holed.area/lm6x.area 
	drcAntenna( m6holed lm6x ratio keep < 0.015  
	"AMS.DN.M6  Min. Hole density for metal lines that need to apply slot  1.5% ")
)
 m6exd_gh2 = geomGetHoled(m6exd)	
 m6exd_ho2 = geomHoles(m6exd_gh2)
 m6exd_ho2_not1 = geomAndNot(m6exd_ho2 m6exd_gh2)
 m6exd_ho2_not11 = geomGetHoled(m6exd_ho2_not1)
 m6exd_inner2 = geomAndNot(m6exd_ho2_not1 m6exd_ho2_not11)	
 m6hoc = geomOutside(m6exd_inner2 m6exd)   
 m6hod = geomSize( geomSize( m6hoc -5 noClipAcute ) 5 noClipAcute )  /*  Assume Metal Slot < 10um */ 
 m6ho = geomOutside( m6hoc m6hod  )  /*  Metal slot (include not in wide metal) */ 
 fim6 = geomOr(m6exd m6ho)  /*  Metal with slot fill in */
 m6wma = geomSize( geomSize( fim6 -17.5 noClipAcute ) 17.5 noClipAcute )   
 m6wm = geomAndNot(m6wma geomOutside(m6wma m6ho))   
 m6slt = geomInside( m6ho m6wm  )   
 amw1m6_m6wmd = geomAnd(m6wma m6exd)  
 amw1m61_m6wme = geomButtOnly(geomOutside(amw1m6_m6wmd m6slt) m6slt )   
 amw1m62_s_fm6 = geomAndNot(m6xd amw1m61_m6wme)  
 amw1m63_s_fim6e = geomGetEdge(amw1m62_s_fm6 butting amw1m61_m6wme)   
 errorLayer( geomGetLength(amw1m63_s_fim6e  keep < 10 contiguous ) 
	"AM.W.1.M6  Min. width for metal connected to wide metal 10um. ")  
/* MD SLOT CHECKS */
/* ============== */
/*  Bonding pad, chip corner dummy pad, and inductor need not put slot */
 ubmi_ite1 = fix(  2  /  0.32 ) 
 ubmi_remain1 =  2  - ubmi_ite1 * 0.32 
if( (ubmi_remain1 > 0) then 
 ubm_exdd = geomAnd(geomSize( ubmi ubmi_remain1 ) mdxd )
else
 ubm_exdd = geomAnd( ubmi mdxd )
)
  for(i 1 ubmi_ite1
      ubm_exdd = geomAnd(geomSize( ubm_exdd 0.32 ) mdxd )
     )

 dpdmy_or1 =  geomOr(dpdmy ubm_exdd)  
 mdexd = geomAndNot(mdxd dpdmy_or1)  
 mdexd_gh1 = geomGetHoled(mdexd)	
 mdexd_ho1 = geomHoles(mdexd_gh1)
 mdexd_ho1_not1 = geomAndNot(mdexd_ho1 mdexd_gh1)
 mdexd_ho1_not11 = geomGetHoled(mdexd_ho1_not1)
 mdinnerhole = geomAndNot(mdexd_ho1_not1 mdexd_ho1_not11)   
 mdbighole = geomSize( mdinnerhole -5 noClipAcute )  /*  Holes with width less than 10um will be filled back */ 
 mdhole = geomOutside( mdinnerhole mdbighole  )   
 mdholespace = geomAndNot(mdhole mdexd)  
 fimdc = geomOr(mdexd mdholespace)  
 fimdc_sz1 =  geomSize( geomSize( fimdc -1.0 noClipAcute ) 1.0 noClipAcute )   
 fimdc_sz1_sz1 =  geomSize( geomSize( fimdc_sz1 -17.5 noClipAcute ) 17.5 noClipAcute )   
 lmdx = geomAnd(fimdc_sz1_sz1 fimdc)  
 mdholed = geomAnd(mdholespace lmdx)  
 mdexd_sz1 =  geomSize( geomSize( mdexd -1.0 noClipAcute ) 1.0 noClipAcute )   
 errorLayer( geomSize( geomSize( mdexd_sz1 -17.5 noClipAcute ) 17.5 noClipAcute ) 
	"AMS.1.MD  Wide Metal (>35um) must have slot ")  
geomConnect(
	buttOrOver(mdholed lmdx)
)

processAntenna(
	gate((lmdx mdholed))
        antenna( mdholed )
        ratio = mdholed.area/lmdx.area 
	drcAntenna( mdholed lmdx ratio keep < 0.015  
	"AMS.DN.MD  Min. Hole density for metal lines that need to apply slot  1.5% ")
)
 mdexd_gh2 = geomGetHoled(mdexd)	
 mdexd_ho2 = geomHoles(mdexd_gh2)
 mdexd_ho2_not1 = geomAndNot(mdexd_ho2 mdexd_gh2)
 mdexd_ho2_not11 = geomGetHoled(mdexd_ho2_not1)
 mdexd_inner2 = geomAndNot(mdexd_ho2_not1 mdexd_ho2_not11)	
 mdhoc = geomOutside(mdexd_inner2 mdexd)   
 mdhod = geomSize( geomSize( mdhoc -5 noClipAcute ) 5 noClipAcute )  /*  Assume Metal Slot < 10um */ 
 mdho = geomOutside( mdhoc mdhod  )  /*  Metal slot (include not in wide metal) */ 
 fimd = geomOr(mdexd mdho)  /*  Metal with slot fill in */
 mdwma = geomSize( geomSize( fimd -17.5 noClipAcute ) 17.5 noClipAcute )   
 mdwm = geomAndNot(mdwma geomOutside(mdwma mdho))   
 mdslt = geomInside( mdho mdwm  )   
 amw1md_mdwmd = geomAnd(mdwma mdexd)  
 amw1md1_mdwme = geomButtOnly(geomOutside(amw1md_mdwmd mdslt) mdslt )   
 amw1md2_s_fmd = geomAndNot(mdxd amw1md1_mdwme)  
 amw1md3_s_fimde = geomGetEdge(amw1md2_s_fmd butting amw1md1_mdwme)   
 errorLayer( geomGetLength(amw1md3_s_fimde  keep < 10 contiguous ) 
	"AM.W.1.MD  Min. width for metal connected to wide metal 10um. ")  
/* I/O ESD Guidance  */
/* ================ */
 epact = geomAnd(pact sdi)  
 enact = geomAnd(nact sdi)  
 co_and1 =  geomAnd(co sdi)  
 eco = geomAnd(co_and1 od)  
 epmos = geomEnclose( epact all_gate  )   
 enmos = geomEnclose( enact all_gate  )   
 egte = geomAnd(all_gate sdi)  
 egte_w = geomGetEdge(egte inside od)   
 epsd = geomAndNot(epmos egte)  
 ensd = geomAndNot(enmos egte)  
 ensd_not1 =  geomAndNot(ensd geomButtOrOver(ensd eco))   
 ensd_nco = geomAndNot(ensd_not1 geomButtOrOver(ensd_not1 ptap))   
 ensd_wco = geomAndNot(ensd ensd_nco)  
 ensd_src = geomOutside( ensd_wco rpo  )   
 esd1_gate = geomAnd(egte esd1dmy)  
 esd1_ncs_gate = geomAndNot(esd1_gate geomButtOrOver(esd1_gate ensd_nco))   
 esd1_tol_gate = geomButtOrOver( esd1_gate ensd_nco  )   
 esd1_tol_gate1 = geomAndNot(esd1_tol_gate geomButtOrOver(esd1_tol_gate ensd_src))   
 esd1_tol_gate2 = geomButtOrOver( esd1_tol_gate ensd_src  )   
 enmos_and1 =  geomAnd(enmos esd1dmy)  
 esd1_tol = geomButtOrOver( enmos_and1 ensd_nco  )   
 esd1_tol_gate2_w = geomGetEdge(esd1_tol_gate2 inside od)   
 esd2_gate = geomAnd(egte esd2dmy)  
 esd2_reg_gate = geomAndNot(esd2_gate geomButtOrOver(esd2_gate ensd_nco))   
 esd2_tol_gate = geomButtOrOver( esd2_gate ensd_nco  )   
 esd2_tol_gate1 = geomAndNot(esd2_tol_gate geomButtOrOver(esd2_tol_gate ensd_src))   
 esd2_tol_gate2 = geomButtOrOver( esd2_tol_gate ensd_src  )   
 enmos_and3 =  geomAnd(enmos esd2dmy)  
 esd2_tol = geomButtOrOver( enmos_and3 ensd_nco  )   
 esd2_reg_gate_w = geomGetEdge(esd2_reg_gate inside od)   
 esd2_tol_gate2_w = geomGetEdge(esd2_tol_gate2 inside od)   
 rpo_and2 =  geomAnd(rpo sdi)  
 rpo_and2_out1 =  geomOutside( rpo_and2 esd1dmy  )   
 rpo1 = geomOutside( rpo_and2_out1 esd2dmy  )   
 egte_out1 =  geomOutside( egte esd1dmy  )   
 egte1 = geomOutside( egte_out1 esd2dmy  )   
 egte1_w = geomGetEdge(egte1 inside od)   
 erpo = geomAnd(rpo sdi)  
 erpoh = geomHoles(erpo)   
 erpoa = geomOr(erpoh erpo)  
 ecos = geomOutside( eco erpoa  )   
 hegt = geomAnd(egte od2)  
 legt = geomAndNot(egte od2)  
 hegn = geomAnd(hegt np)  
 hegp = geomAnd(hegt pp)  
if(!(HIGH_VOLTAGE == 5) then
 errorLayer( geomAnd(esd1dmy gate_pp) 
	"ESD.GUIDE.1  ESD1DMY is for NMOS only / ESD2DMY is for 3.3V NMOS only ") 
 errorLayer( geomAnd(esd2dmy gate_pp) 
	"ESD.GUIDE.1 2  ESD1DMY is for NMOS only / ESD2DMY is for 3.3V NMOS only ") 
 gate_np_not1 =  geomAndNot(gate_np od2)  
 errorLayer( geomAnd(esd2dmy gate_np_not1) 
	"ESD.GUIDE.1 3  ESD1DMY is for NMOS only / ESD2DMY is for 3.3V NMOS only ") 
 errorLayer( geomGetLength(egte_w 0 < keep < 20 contiguous ) 
	"ESD.GUIDE.4  I/O - Gate 20um <= width <= 60um. ")  
 errorLayer( geomGetLength(egte_w 60 < keep < 999 contiguous ) 
	"ESD.GUIDE.4 2  I/O - Gate 20um <= width <= 60um. ")  
 esd5a_x = geomAndNot(esd2_tol_gate rpo)  
 errorLayer( geomAndNot(esd2_tol geomButtOrOver(esd2_tol esd5a_x)) 
	"ESD.5A  For 3.3V high voltage tolerant NMOS, RPO should completely cover 1st poly gate and overlap 2nd poly gate 0.05um ")  
 errorLayer( geomAndNot(esd2_tol_gate1 rpo) 
	"ESD.5A 2  For 3.3V high voltage tolerant NMOS, RPO should completely cover 1st poly gate and overlap 2nd poly gate 0.05um ") 
 errorLayer( geomOutside( esd2_tol_gate2 rpo  ) 
	"ESD.5A 3  For 3.3V high voltage tolerant NMOS, RPO should completely cover 1st poly gate and overlap 2nd poly gate 0.05um ")  
 esd5a1_y = geomGetEdge(esd2_tol_gate2_w inside rpo)   
 esd5a2_z = geomSize(esd5a1_y -0.05 edges)   
 esd2_tol_gate21 =  geomAnd(esd2_tol_gate2 rpo)  
 errorLayer( geomXor(esd2_tol_gate21 esd5a2_z) 
	"ESD.5A 4  For 3.3V high voltage tolerant NMOS, RPO should completely cover 1st poly gate and overlap 2nd poly gate 0.05um ") 
 esd5b_x = geomAndNot(esd1_tol_gate rpo)  
 errorLayer( geomAndNot(esd1_tol geomButtOrOver(esd1_tol esd5b_x)) 
	"ESD.5B  For 1.8V high voltage tolerant NMOS, RPO should completely cover 1st poly gate and should not cover 2nd poly gate  RPO space to 2nd poly gate 0.25um ")  
 errorLayer( geomAndNot(esd1_tol_gate1 rpo) 
	"ESD.5B 2  For 1.8V high voltage tolerant NMOS, RPO should completely cover 1st poly gate and should not cover 2nd poly gate  RPO space to 2nd poly gate 0.25um ") 
 errorLayer( geomAnd(esd1_tol_gate2 rpo) 
	"ESD.5B 3  For 1.8V high voltage tolerant NMOS, RPO should completely cover 1st poly gate and should not cover 2nd poly gate  RPO space to 2nd poly gate 0.25um ") 
 esd5b1_y = geomButtOrOver( rpo esd1_tol_gate1  )   
 drc( esd5b1_y esd1_tol_gate2_w  sep < 0.25  opposite shielded 
	"ESD.5B 4  For 1.8V high voltage tolerant NMOS, RPO should completely cover 1st poly gate and should not cover 2nd poly gate  RPO space to 2nd poly gate 0.25um ")  
 esd5c_x = geomGetEdge(esd2_reg_gate_w inside rpo)   
 esd5c1_y = geomSize(esd5c_x -0.05 edges)   
 esd2_reg_gate1 =  geomAnd(esd2_reg_gate rpo)  
 errorLayer( geomXor(esd2_reg_gate1 esd5c1_y) 
	"ESD.5C  For 3.3V regular NMOS, RPO needs to overlap poly gate by 0.05um ") 
 epsd_or1 =  geomOr(epsd ensd)  
 esdwarn1_red = geomButtOrOver( epsd_or1 rpo1  )   
 esdwarn11_xrpo = geomAndNot(esdwarn1_red rpo1)  
 esdwarn12_xrpg = geomButtOnly(geomOutside(esdwarn11_xrpo egte1) egte1 )   
 errorLayer( geomButtOrOver( esdwarn12_xrpg eco  ) 
	"ESD.WARN.1  CO can't inserted between gate and RPO for 1.8V NMOS and all PMOS I/O pattern. ")  
 errorLayer( geomAndNot(esd1_ncs_gate rpo) 
	"ESD.5D  For the grounded gate ESD protection device between Vcc/Vss, RPO should fully cover all poly gate and source drain. ") 
 drc( rpo1 egte1_w  sep < 0.45  opposite shielded 
	"ESD.5E  For all PMOS and 1.8V regular NMOS, RPO space to gate 0.45um ")  
 ensd_wco_and1 =  geomAnd(ensd_wco esd2dmy)  
 esd5f_x = geomAnd(ensd_wco_and1 rpo)  
 drc( esd5f_x   width < 1.95  
	"ESD.5F  For 3.3V high voltage tolerant and 3.3V regular NMOS, min. width of RPO on drain side and RPO edge to OD edge 1.95um ")  
 ensd_wco_and2 =  geomAnd(ensd_wco esd1dmy)  
 ensd_wco_and21 =  geomAnd(ensd_wco_and2 rpo)  
 esd5g_x = geomButtOrOver( ensd_wco_and21 esd1_tol_gate1  )   
 drc( esd5g_x   width < 1.5  
	"ESD.5G  For 1.8V high voltage tolerant and 1.8V regular NMOS and PMOS, min. width of RPO on  drain side and RPO edge to OD edge 1.5um ")  
 esd5g1_y = geomAnd(rpo1 od)  
 drc( esd5g1_y   width < 1.5  
	"ESD.5G 2  For 1.8V high voltage tolerant and 1.8V regular NMOS and PMOS, min. width of RPO on  drain side and RPO edge to OD edge 1.5um ")  
 esd5h_x = geomButtOrOver( ensd_nco esd2dmy  )   
 drc( esd5h_x   width < 0.25  
	"ESD.5H  For 3.3V high voltage tolerant NMOS, 1st and 2nd poly gate spacing is >=0.25um ")  
 errorLayer( geomSize( geomSize( esd5h_x -0.125 noClipAcute ) 0.125 noClipAcute ) 
	"ESD.5H 2  For 3.3V high voltage tolerant NMOS, 1st and 2nd poly gate spacing is >=0.25um ")  
 esd5i_x = geomButtOrOver( ensd_nco esd1dmy  )   
 drc( esd5i_x   width < 0.25  
	"ESD.5I  For 1.8V high voltage tolerant NMOS, 1st and 2nd poly gate spacing is >=0.25um ")  
 errorLayer( geomSize( geomSize( esd5i_x -0.125 noClipAcute ) 0.125 noClipAcute ) 
	"ESD.5I 2  For 1.8V high voltage tolerant NMOS, 1st and 2nd poly gate spacing is >=0.25um ")  
 drc( ecos egte_w  sep < 0.75  opposite shielded 
	"ESD.6  Min. space between CO on source side to poly gate 0.75um ")  
if((CORE_VOLTAGE == 1.5) then
 drc( legt   width < 0.25  withCornerTouch 
	"ESD.9A  1.5V IO ESD NMOS/PMOS gate length < 0.25um ")  
) ; 
if((CORE_VOLTAGE == 1.8) then
 drc( legt   width < 0.25  withCornerTouch 
	"ESD.9A 2  1.8V IO ESD NMOS/PMOS gate length < 0.25um ")  
) ; 
if((HIGH_VOLTAGE == 2.5) then
 drc( hegn   width < 0.3  withCornerTouch 
	"ESD.9B  2.5V IO ESD NMOS gate length < 0.3um ")  
 drc( hegp   width < 0.3  withCornerTouch 
	"ESD.9C  2.5V IO ESD PMOS gate length < 0.3um ")  
) ; 
if((HIGH_VOLTAGE == 3.3) then
 drc( hegn   width < 0.4  withCornerTouch 
	"ESD.9B 2  3.3V IO ESD NMOS gate length < 0.4um ")  
 drc( hegp   width < 0.3  withCornerTouch 
	"ESD.9C 2  3.3V IO ESD PMOS gate length < 0.3um ")  
) ; 
) ; 
/*  begin of ESD.11, butted or inserted pickup is not allowed */
 eact = geomOr(epact enact)  
 dtap = geomOr(ntap ptap)  
 eact_ite1 = fix(  3  /  0.22 * 0.7 ) 
 eact_remain1 =  3  - eact_ite1 * 0.22 * 0.7 
if( (eact_remain1 > 0) then 
 eactup3 = geomAnd(geomSize( eact eact_remain1 ) dtap )
else
 eactup3 = geomAndNot( eact dtap )
)
  for(i 1 eact_ite1
      eactup3 = geomAnd(geomSize( eactup3 0.22 * 0.7 ) dtap )
     )

 dtap2check = geomButtOrOver( dtap eactup3  )   
 dtap2check_gh1 = geomGetHoled(dtap2check)	
 dtap2check_ho1 = geomHoles(dtap2check_gh1)
 dtap2check_ho11 = geomAndNot(dtap2check_ho1 dtap2check_gh1)
 dtap2check_ho111 = geomGetHoled(dtap2check_ho11)
 dtaphole = geomAndNot(dtap2check_ho11 dtap2check_ho111)   
 dtapsuspect =  geomAndNot(dtap2check geomButtOnly(geomOutside(dtap2check dtaphole) dtaphole))   
dtapsuspect1 = drc( dtapsuspect area >= 4.4 )
 errorLayer( geomGetLength(dtapsuspect1 keep >= 20 fig ) 
	"ESD.11  butted or inserted pickup is not allowed ")  
/*  LATCH-UP CHECKS */
/* ================== */
 pmos = geomEnclose( pact all_gate  )   
 nmos = geomEnclose( nact all_gate  )   
 pasd = geomAndNot(pmos all_gate)  
 nasd = geomAndNot(nmos all_gate)  
 drc( epmos enmos 0 < sep < 15  shielded 
	"LAT.2  I/O - NMOS to PMOS space < 15um.      ")  
 lat3p_nweli_us = geomSize(nweli -0.085)
 lat3p1_ntap_os = geomAnd(geomSize(ntap 0.529) lat3p_nweli_us)
  for(i 1 38
      lat3p1_ntap_os = geomAnd(geomSize(lat3p1_ntap_os 0.544) lat3p_nweli_us)
     )
 pasd_far1 = geomAndNot(pasd lat3p1_ntap_os)
 pasd_far_filter1 = geomSize(pasd_far1 30)
 ntap_near1 = geomButtOrOver(ntap pasd_far_filter1)
 ntap_near_os1 = geomSize( ntap_near1 0.10 )
 ntap_corner1 = drc(ntap_near_os1 width < 0.06 only_perp )
 ntap_oct1 = geomAndNot(ntap_near_os1 ntap_corner1)   
 ntap_hex_os1 = geomAnd(geomSize(ntap_oct1 0.524 ) lat3p_nweli_us)
  for(i 1 54
 ntap_hex_os1 = geomAnd(geomSize(ntap_hex_os1 0.544) lat3p_nweli_us )
  )
 errorLayer( geomAndNot(pasd_far1 ntap_hex_os1) 
	"LAT.3P  N-well pickup OD to PMOS space > 30um ")
 lat3n_pweli_us = geomSize(pweli -0.085)
 lat3n1_ptap_os = geomAnd(geomSize(ptap 0.089) lat3n_pweli_us)
  for(i 1 29
      lat3n1_ptap_os = geomAnd(geomSize(lat3n1_ptap_os 0.728) lat3n_pweli_us)
     )
 nasd_far1 = geomAndNot(nasd lat3n1_ptap_os)
 nasd_far_filter1 = geomSize(nasd_far1 30)
 ptap_near1 = geomButtOrOver(ptap nasd_far_filter1)
 ptap_near_os1 = geomSize( ptap_near1 0.10 )
 ptap_corner1 = drc(ptap_near_os1 width < 0.06 only_perp )
 ptap_oct1 = geomAndNot(ptap_near_os1 ptap_corner1)   
 ptap_hex_os1 = geomAnd(geomSize(ptap_oct1 0.052 ) lat3n_pweli_us)
  for(i 1 41
 ptap_hex_os1 = geomAnd(geomSize(ptap_hex_os1 0.728) lat3n_pweli_us )
  )
 errorLayer( geomAndNot(nasd_far1 ptap_hex_os1) 
	"LAT.3N  P-well pickup OD to NMOS space > 30um ")
if(!(HIGH_VOLTAGE == 5) then
/*  NT_N */
/* ====== */
 ntn_od = geomAndNot(od geomOutside(od ntn))   
 ntn_po = geomAnd(poly ntn)  
 ntn_gate_w = geomGetEdge(ntn_po inside ntn_od)   
 errorLayer( geomEnclose( ntn od keep > 1 ) 
	"NT_N.I.2  only one OD region allowed to be put in an NT_N region ")  
  errorLayer( geomGetPolygon(ntn_po) 
	"NT_N.I.4  A bent poly region is not allowed to put in an NT_N region ") 
if((CORE_VOLTAGE == 1.8) then
 drc( ntn_gate_w   width < 0.5  
	"NT_N.W.2  Minimum poly gate dimension of a 1.8V blocked NT_N device < 0.5 ")  
) ; 
if((CORE_VOLTAGE == 1.5) then
 drc( ntn_gate_w   width < 0.37  
	"NT_N.W.2.LV  Minimum poly gate dimension of a 1.5V blocked NT_N device < 0.37 ")  
) ; 
 nt_nw2b_z = geomGetEdge(ntn_gate_w inside od2)   
 drc( nt_nw2b_z   width < 1.2  
	"NT_N.W.2B  Minimum poly gate dimension of a 3.3V blocked NT_N device < 1.2 ")  
 drc( ntn   sepNotch < 0.86  
	"NT_N.S.1  Minimum space between two NT_N regions < 0.86 ")  
if((CORE_VOLTAGE == 1.5) then
if((HIGH_VOLTAGE == 3.3) then
 drc( od2 ntn  enc < 0.86  shielded 
	"NT_N.E.2.LV  OD2 enclose 3.3V NTN < 0.86um ")  
 errorLayer( geomStraddle(ntn od2) 
	"NT_N.E.2.LV  OD2 enclose 3.3V NTN < 0.86um ") 
) ; 
if((HIGH_VOLTAGE == 2.5) then
 drc( od2 ntn  enc < 0.86  shielded 
	"NT_N.E.2.LV 2  OD2 enclose 2.5V NTN < 0.86um ")  
 errorLayer( geomStraddle(ntn od2) 
	"NT_N.E.2.LV 2  OD2 enclose 2.5V NTN < 0.86um ") 
) ; 
) ; 
 drc( od ntn  sep < 0.52  shielded 
	"NT_N.C.1  MInimum clearance from NT_N to OD < 0.52 ")  
 errorLayer( geomStraddle(od ntn) 
	"NT_N.C.1  MInimum clearance from NT_N to OD < 0.52 ") 
 drc( ntn nwel  sep < 1.66  shielded 
	"NT_N.C.2  Minimum clearance frome a NT_N region to NWEL edge < 1.66 ")  
 errorLayer( geomAnd(ntn nwel) 
	"NT_N.C.2 2  Minimum clearance frome a NT_N region to NWEL edge < 1.66 ") 
if((CORE_VOLTAGE == 1.5) then
 drc( ntn od2  sep < 0.86  shielded 
	"NT_N.C.3.LV  OD2 space to 1.5V NTN < 0.86um ")  
) ; 
 drc( poly ntn_od  enc < 0.35  shielded 
	"NT_N.PO.1  Minimum overlap of a PO region extended into field oxide(endcap) < 0.35 ")  
) ; /* #IFNDEF 5V */
if((HIGH_VOLTAGE == 5) then
 errorLayer( geomCat(chip) 
	"OPTION.HIGH_VOLTAGE.MM  HIGH_VOLTAGE == 5V is not allowed for Mixed_Signal process ")  
) ; 
/*  POLY checks */
/* ============= */
/* #disable PO.R.1A */
 drc( hrep   width < 1.0  withCornerTouch 
	"_PO.W.1.MM  high resistance resistor width < 1.0 ")  
/*  0.18 value is arbitrary, note the angle */
 _por1amm_norm_gate_w = geomGetEdge(gate_w outside vardmy)   
 _por1amm_norm_gate_w1 = geomGetAngledEdge(_por1amm_norm_gate_w keep == 0)
 _por1amm_norm_gate_w11 = geomGetAdjacentEdge(_por1amm_norm_gate_w _por1amm_norm_gate_w1 )
 _por1amm_norm_gate_w2 = geomGetAngledEdge(_por1amm_norm_gate_w keep == 45)
 errorLayer( geomAndNot(_por1amm_norm_gate_w11 _por1amm_norm_gate_w2) 
	"_PO.R.1A.MM 2  90 degree gate not allowed/L and U shape gate are not allowed ") 
/*  PP CHECKS */
/* ============ */
/* #disable PP.E.6 */
 drc( pp pores  enc < 0.18  shielded 
	"_PP.E.6.MM  Min enc of POLY resistor by PP < 0.18 ")  
 rpo_and3 =  geomAnd(rpo poly)  
 rpo_and3_not1 =  geomAndNot(rpo_and3 imp)  
 errorLayer( geomAndNot(rpo_and3_not1 hri) 
	"_PP.E.6.MM 2  Min enc of POLY resistor by PP < 0.18 ") 
/*  NP CHECKS */
/* ============ */
/* #disable NP.E.6 */
 drc( np pores  enc < 0.18  shielded 
	"_NP.E.6.MM  Min enc of POLY resistor by NP < 0.18 ")  
 rpo_and4 =  geomAnd(rpo poly)  
 rpo_and4_not1 =  geomAndNot(rpo_and4 imp)  
 errorLayer( geomAndNot(rpo_and4_not1 hri) 
	"_NP.E.6.MM 2  Min enc of POLY resistor by NP < 0.18 ") 
/*  RPO checks */
/* =========== */
/* RPO.C.1a is RPO.C.6 in logic DRM. */
 _rpoo1mm_x = geomButtOrOver( poly_iso hri  )   
 _rpoo1mm1_y = geomGetEdge(rpo inside _rpoo1mm_x)   
 drc( pp _rpoo1mm1_y  ovlp < 0.3  shielded 
	"_RPO.O.1.MM  Min/Max. overlap of P+ on HRI for high-res 0.30 ")  
 errorLayer( geomGetEdge(_rpoo1mm1_y outside pp) 
	"_RPO.O.1.MM 2  Min/Max. overlap of P+ on HRI for high-res 0.30 ") /*  not overlap by P+ not allowed. */ 
 _rpoo1mm2_z = geomSize(_rpoo1mm1_y -0.30 edges)   
 _rpoo1mm3_pppo = geomAnd(pp poly)  
 _rpoo1mm4_a = geomAnd(_rpoo1mm3_pppo pores)  
 _rpoo1mm5_b = geomButtOrOver( _rpoo1mm4_a hri  )   
 errorLayer( geomAndNot(_rpoo1mm5_b _rpoo1mm2_z) 
	"_RPO.O.1.MM 3  Min/Max. overlap of P+ on HRI for high-res 0.30 ") 
if((THICK == 1) then
/*  M6 checks */
/* ============= */
/* #disable M6.* */
 drc( m6   width < 1.50  withCornerTouch 
	"_M6T.W.1  M6 width < 1.50 ")  
 drc( m6   sepNotch < 1.50  
	"_M6T.S.1  M6 spacing < 1.50 ")  
 drc( m6 via5  enc < 0.3  shielded 
	"_M6T.E.1  Min extension of a M6 region beyond a VIA5 region is 0.3 um ")  
 errorLayer( geomAndNot(via5 m6) 
	"_M6T.E.1 2  Min extension of a M6 region beyond a VIA5 region is 0.3 um ") 
 _m6te2_x = drc( m6 via5  enc < 0.45  opposite shielded edgeb )/*  a narrow side */
 _m6te2_x_ang01 = geomGetAngledEdge(_m6te2_x keep == 0)
 _m6te2_x_ang011 = geomGetAdjacentEdge(_m6te2_x _m6te2_x_ang01 )
 _m6te2_x_ang451 = geomGetAngledEdge(_m6te2_x keep == 45)
 errorLayer( geomAndNot(_m6te2_x_ang011 _m6te2_x_ang451) 
	"_M6T.E.2  Min extension of M6 end-of-line region beyond VIA5 region is 0.45um ") /*  adjacent narrow sides */
 m6t_nind = geomAndNot(m6xd inddmy)  
/*   M6T_NIND = M6xd NOT INDDMY  */
_m6ts2_m6t_nind_s8 = geomGrow( m6t_nind -8 -8 )
_m6ts21_m6t_nind_g8 = geomGrow( _m6ts2_m6t_nind_s8 8 8 )
 _m6ts22_m6t_nind_wide = geomAnd(_m6ts21_m6t_nind_g8 m6t_nind)  
 _m6ts22_m6t_nind_wide1 = fix(  1  /  1.05 ) 
 _m6ts22_m6t_nind_wide2 =  1  - _m6ts22_m6t_nind_wide1 * 1.05 
if( (_m6ts22_m6t_nind_wide2 > 0) then 
 _m6ts23_m6t_nind_exp = geomAnd(geomSize( _m6ts22_m6t_nind_wide _m6ts22_m6t_nind_wide2 ) m6t_nind )
else
 _m6ts23_m6t_nind_exp = geomAnd( _m6ts22_m6t_nind_wide m6t_nind )
)
  for(i 1 _m6ts22_m6t_nind_wide1
      _m6ts23_m6t_nind_exp = geomAnd(geomSize( _m6ts23_m6t_nind_exp 1.05 ) m6t_nind )
     )

 _m6ts24_m6t_nind_branch = geomAndNot(_m6ts23_m6t_nind_exp _m6ts22_m6t_nind_wide)  
 _m6ts25_m6t_nind_branch_edge = geomGetEdge(_m6ts24_m6t_nind_branch coincident m6t_nind)   
 m6t_nind_exp_sz1 =  geomSize( _m6ts23_m6t_nind_exp 3.0 noClipAcute )   
 _m6ts26_m6t_nind_check = geomAnd(m6t_nind m6t_nind_exp_sz1)  
 _m6ts27_m6t_nind_else = geomAndNot(_m6ts26_m6t_nind_check geomButtOrOver(_m6ts26_m6t_nind_check _m6ts23_m6t_nind_exp))   
 _m6ts28_m6t_nind_extend = geomAndNot(_m6ts26_m6t_nind_check _m6ts23_m6t_nind_exp)  
 drc( _m6ts22_m6t_nind_wide _m6ts27_m6t_nind_else 0 < sep < 3.0  shielded 
	"_M6T.S.2 4  Wide M6 (>16um) min. to M6 < 3.0um(exclude application for inductor) ")  
 drc( _m6ts25_m6t_nind_branch_edge _m6ts27_m6t_nind_else 0 < sep < 3.0  opposite shielded 
	"_M6T.S.2 5  Wide M6 (>16um) min. to M6 < 3.0um(exclude application for inductor) ")  
 drc( _m6ts25_m6t_nind_branch_edge _m6ts27_m6t_nind_else 0 < sep < 3.0 app < 0 shielded 
	"_M6T.S.2 6  Wide M6 (>16um) min. to M6 < 3.0um(exclude application for inductor) ")  
 drc( _m6ts25_m6t_nind_branch_edge _m6ts27_m6t_nind_else 0 < sep < 3.0  shielded  app == 0 
	"_M6T.S.2 7  Wide M6 (>16um) min. to M6 < 3.0um(exclude application for inductor) ")  
 _m6ts29_a = drc( _m6ts23_m6t_nind_exp  0 < sep < 3.0  shielded )
 errorLayer( geomAndNot(_m6ts29_a geomButtOrOver(_m6ts29_a _m6ts28_m6t_nind_extend)) 
	"_M6T.S.2 8  Wide M6 (>16um) min. to M6 < 3.0um(exclude application for inductor) ")  
 drc( m6  area < 2.25 
	"_M6T.A.1  Min M6 area region < 2.25 ") 
 _m6tr1_chip_not_ind = geomAndNot(chip inddmy)  
 m6t_nind_den1 = drc( m6t_nind _m6tr1_chip_not_ind 0 <  coverage < 0.3  )
 errorLayer( geomGetCoverage( m6t_nind_den1 keep < 0.3 ) 
	"_M6T.R.1  Min density of M6T area < 30%(exclude application for inductor). ") 
 _m6tc1_im6 = geomAnd(m6 inddmy)  
 _m6tc11_rm6 = geomAndNot(m6 _m6tc1_im6)  
 drc( _m6tc11_rm6 _m6tc1_im6 0 < sep < 50  shielded 
	"_M6T.C.1  min space from M6 as inductor to M6 < 50 ")  
 drc( inddmy m6 0 < enc < 50  shielded 
	"_M6T.E.3  min extension INDDMY beyond M6 < 50 ")  
 inddmyi = geomSize( inddmy -7 noClipAcute )  /* exclude M1 substrate pick up node */ 
 indm = geomAnd(inddmy m4)  
 indme = geomGetEdge(indm coincident inddmy)   
 indme_sz1 = geomSize(indme 0.005 edges)
 inddmya = geomButtOrCoin( inddmy indme_sz1  keep < 2)   
 inddmy3 = geomEnclose( inddmya m5  )  /* for 3 terminals inductor(central tap) */ 
 inddmy2 = geomAndNot(inddmy inddmy3)  /* for 2 terminals inductor */
 errorLayer( geomAnd(inddmyi m1) 
	"_M6T.I.1  No via and metal inside INDDMY are allowed, except underpass vias and metal interconnect ,and the M1 substrate pick up node of inductor ") 
 errorLayer( geomAnd(inddmy via1) 
	"_M6T.I.1 2  No via and metal inside INDDMY are allowed, except underpass vias and metal interconnect ,and the M1 substrate pick up node of inductor ") 
 errorLayer( geomAnd(inddmy m2) 
	"_M6T.I.1 3  No via and metal inside INDDMY are allowed, except underpass vias and metal interconnect ,and the M1 substrate pick up node of inductor ") 
 errorLayer( geomAnd(inddmy via2) 
	"_M6T.I.1 4  No via and metal inside INDDMY are allowed, except underpass vias and metal interconnect ,and the M1 substrate pick up node of inductor ") 
 errorLayer( geomAnd(inddmy m3) 
	"_M6T.I.1 5  No via and metal inside INDDMY are allowed, except underpass vias and metal interconnect ,and the M1 substrate pick up node of inductor ") 
 errorLayer( geomAnd(inddmy via3) 
	"_M6T.I.1 6  No via and metal inside INDDMY are allowed, except underpass vias and metal interconnect ,and the M1 substrate pick up node of inductor ") 
 errorLayer( geomAnd(inddmy2 m4) 
	"_M6T.I.1 7  No via and metal inside INDDMY are allowed, except underpass vias and metal interconnect ,and the M1 substrate pick up node of inductor ") 
 errorLayer( geomAnd(inddmy2 via4) 
	"_M6T.I.1 8  No via and metal inside INDDMY are allowed, except underpass vias and metal interconnect ,and the M1 substrate pick up node of inductor ") 
 errorLayer( geomAnd(inddmy nwel) 
	"_M6T.I.2  Both active and passive devices not allow inside INDDMY besides guard ring ") 
 errorLayer( geomAnd(inddmy poly) 
	"_M6T.I.2 2  Both active and passive devices not allow inside INDDMY besides guard ring ") 
 errorLayer( geomAnd(inddmyi od) 
	"_M6T.I.2 3  Both active and passive devices not allow inside INDDMY besides guard ring ") /* exclude M1 substrate pick up node of inductor */
) ; /*  end of #IFDEF THICK */
if((THICK == 0) then
/* M6 CHECKS */
/* ========= */
 drc( m6   width < 0.44  withCornerTouch 
	"_M6.W.1.MM  M6 width < 0.44 ")  
 drc( m6   sepNotch < 0.46  
	"_M6.S.1.MM  M6 spacing < 0.46 ")  
_m6s2mm_m6_s5 = geomGrow( m6 -5 -5 )
_m6s2mm1_m6_g5 = geomGrow( _m6s2mm_m6_s5 5 5 )
 _m6s2mm2_m6_wide = geomAnd(_m6s2mm1_m6_g5 m6)  
 _m6s2mm2_m6_wide1 = fix(  1  /  0.322 ) 
 _m6s2mm2_m6_wide2 =  1  - _m6s2mm2_m6_wide1 * 0.322 
if( (_m6s2mm2_m6_wide2 > 0) then 
 _m6s2mm3_m6_exp = geomAnd(geomSize( _m6s2mm2_m6_wide _m6s2mm2_m6_wide2 ) m6 )
else
 _m6s2mm3_m6_exp = geomAnd( _m6s2mm2_m6_wide m6 )
)
  for(i 1 _m6s2mm2_m6_wide1
      _m6s2mm3_m6_exp = geomAnd(geomSize( _m6s2mm3_m6_exp 0.322 ) m6 )
     )

 _m6s2mm4_m6_branch = geomAndNot(_m6s2mm3_m6_exp _m6s2mm2_m6_wide)  
 _m6s2mm5_m6_branch_edge = geomGetEdge(_m6s2mm4_m6_branch coincident m6)   
 m6_exp_sz2 =  geomSize( _m6s2mm3_m6_exp 0.6 noClipAcute )   
 _m6s2mm6_m6_check = geomAnd(m6 m6_exp_sz2)  
 _m6s2mm7_m6_else = geomAndNot(_m6s2mm6_m6_check geomButtOrOver(_m6s2mm6_m6_check _m6s2mm3_m6_exp))   
 _m6s2mm8_m6_extend = geomAndNot(_m6s2mm6_m6_check _m6s2mm3_m6_exp)  
 drc( _m6s2mm2_m6_wide _m6s2mm7_m6_else 0 < sep < 0.6  shielded 
	"_M6.S.2.MM 3  Wide M6 (>10um) min. to M6 < 0.6 um ")  
 drc( _m6s2mm5_m6_branch_edge _m6s2mm7_m6_else 0 < sep < 0.6  opposite shielded 
	"_M6.S.2.MM 4  Wide M6 (>10um) min. to M6 < 0.6 um ")  
 drc( _m6s2mm5_m6_branch_edge _m6s2mm7_m6_else 0 < sep < 0.6 app < 0 shielded 
	"_M6.S.2.MM 5  Wide M6 (>10um) min. to M6 < 0.6 um ")  
 drc( _m6s2mm5_m6_branch_edge _m6s2mm7_m6_else 0 < sep < 0.6  shielded  app == 0 
	"_M6.S.2.MM 6  Wide M6 (>10um) min. to M6 < 0.6 um ")  
 _m6s2mm9_a = drc( _m6s2mm3_m6_exp  0 < sep < 0.6  shielded )
 errorLayer( geomAndNot(_m6s2mm9_a geomButtOrOver(_m6s2mm9_a _m6s2mm8_m6_extend)) 
	"_M6.S.2.MM 7  Wide M6 (>10um) min. to M6 < 0.6 um ")  
 drc( m6 via5  enc < 0.09  shielded 
	"_M6.E.1.MM  Min extension of a M6 region beyond a V5 region is 0.09 um ")  
 errorLayer( geomAndNot(via5 m6) 
	"_M6.E.1.MM 2  Min extension of a M6 region beyond a V5 region is 0.09 um ") 
 drc( m6  area < 0.562 
	"_M6.A.1.MM  Min M6 area region < 0.562 ") 
) ; /*  end of #IFNDEF THICK */
if(!(HIGH_VOLTAGE == 5) then
/*  NT_N */
/* ====== */
/* #disable NT_N.I.3 */
/* #disable NT_N.W.1 */
/* #disable NT_N.E.1 */
 ntn_nind = geomAndNot(ntn inddmy)  /* exclude for inductor */
 errorLayer( geomAnd(ntn dnw) 
	"_NT_N.I.1.MM  NT_N inside or cross over a deep N-well is not allowed ") 
/* NT_N.I.2.MM is checked by NT_N.C.2 in Logic section */
/* NT_N.I.3.MM is checked by NT_N.I.2 in Logic section */
 errorLayer( geomAnd(ntn_nind pp) 
	"_NT_N.I.4.MM  A P+ region is not allowed to be put in an NT_N region excluding inductor ") 
/* NT_N.I.5.MM is checked by NT_N.I.4 in Logic section */
 drc( ntn_od poly_iso 0 < sep < 0.26  shielded 
	"_NT_N.I.6.MM  OD in NTN region space to PO on field oxide < 0.26 ")  
 drc( ntn   width < 0.74  withCornerTouch 
	"_NT_N.W.1.MM  Minimum width of a NT_N region < 0.74 ")  
/* NT_N.W.2.MM is checked by NT_N.W.2 in Logic section */
/* NT_N.W.3.MM is checked by NT_N.W.2B in Logic section */
/* NT_N.S.1.MM is checked by NT_N.S.1 in Logic region */
 _nt_ne1mm_a = geomButtOrOver( ntn_nind od  )   
 _nt_ne1mm1_b = geomButtOrOver( od ntn_nind  )   
 _nt_ne1mm2_c = geomSize( _nt_ne1mm1_b 0.26 noClipAcute )   
 _nt_ne1mm3_d = geomSize( _nt_ne1mm_a -0.26 noClipAcute )   
 errorLayer( geomXor(_nt_ne1mm_a _nt_ne1mm2_c) 
	"_NT_N.E.1.MM  Maximum and Minimum extension from NT_N region beyond an NP OD region excluding application of inductor ") 
 errorLayer( geomXor(_nt_ne1mm1_b _nt_ne1mm3_d) 
	"_NT_N.E.1.MM 2  Maximum and Minimum extension from NT_N region beyond an NP OD region excluding application of inductor ") 
/* NT_N.C.1.MM is checked by NT_N.C.1 in Logic region */
/* NT_N.C.2.MM is checked by NT_N.C.2 in Logic region */
/* NT_N.PO.1.MM is checked by NT_N.PO.1 in Logic region */
) ; /* #IFNDEF 5V */
/*  DNW CHECKS */
/* ============== */
 errorLayer( geomGetEdge(dnw outside nwel) 
	"DNW.I.1  DNW must be surrounded or fully covered by NW  ")  
/*  DNW.I.4 is definition of RW */
 rwi = geomInside( pweli dnwi  )   
 rw = geomAndNot(rwi geomInside(rwi excl))   
 errorLayer( geomAnd(dnw rwdmy) 
	"DNW.I.6  DNW is not allowed as a resistor ") 
 errorLayer( geomButtOrOver( rnwel dnw  ) 
	"DNW.I.7  NW resistor is not allowed to connect DNW ")  
 errorLayer( geomButtOrOver( nwres dnw  ) 
	"DNW.I.7 2  NW resistor is not allowed to connect DNW ")  
 drc( dnw   width < 3  withCornerTouch 
	"DNW.W.1  Min. DNW width < 3 ")  
 drc( dnw   sepNotch < 5  
	"DNW.S.1  Min. DNW space < 5 ")  
 dnwe1_dnw_rw = geomEnclose( dnw rw  )  /* exclude DNW without RW */ 
 drc( nwel dnwe1_dnw_rw  enc < 1.5  shielded 
	"DNW.E.1  Min. extension of NW beyond DNW < 1.5 ")  
 drc( dnw nwel  ovlp < 2.0  shielded 
	"DNW.O.1  Min. overlap of NW into DNW < 2.0 ") /*  MEASURE COINCIDENT */ 
 dnwc1_x = geomOutside( nwel dnw  )   
 drc( dnw dnwc1_x  sep < 3.5  shielded 
	"DNW.C.1  Min. DNW space to NW < 3.5 ")  
 dnwc2_dnwc3_nd_act = geomAnd(npod dnw)  
 drc( dnwc2_dnwc3_nd_act nonwr  sep < 0.50  shielded 
	"DNW.C.2_DNW.C.3  Min. NWEL to NPOD in DNW spacing < 0.50 ")  
 errorLayer( geomStraddle( dnwc2_dnwc3_nd_act nonwr  ) 
	"DNW.C.2_DNW.C.3 2  Min. NWEL to NPOD in DNW spacing < 0.50 ")  
/* DNW.C.3 is check by DNW.C.2 */
 dnwc4_a = geomAndNot(pwel dnw)  
 dnwc41_b = geomAnd(npod dnwc4_a)  
 drc( dnwc41_b dnw  sep < 3.0  shielded 
	"DNW.C.4  Min. DNW space to N+OD outside NW < 3 ")  
/* Exclude the via upon CTM region */
/* VIAt   = VIA5i NOT INTERACT CTM5i */
/* VIAc   = VIA5i AND CTM5i */
/* VTM_N */
/* ===== */
 errorLayer( geomAnd(vtmn dnw) 
	"VTMN.I.1  VTMN inside or cross over a deep N-well is not allowed ") 
/*  VTMN inside or cross over a N-well is checked by VTMN.C.2 */
 errorLayer( geomAnd(vtmn ntn) 
	"VTMN.I.2 2  VTMN inside or cross over a N-well or NT_N is not allowed ") 
 errorLayer( geomAnd(vtmn pp) 
	"VTMN.I.3  A P+ region is not allowed to be put in an VTMN region ") 
 vtmni4_vtmn_po = geomAnd(poly vtmn)  
 errorLayer( geomGetVertex(vtmni4_vtmn_po ignore == 4) 
	"VTMN.I.4  A bent poly region is not allowed to put in an VTMN region ")  
 vtmni5_vtmn_od = geomAnd(vtmn od)  
 drc( vtmni5_vtmn_od poly_iso 0 < sep < 0.26  shielded 
	"VTMN.I.5  OD in VTMN region space to PO on field oxide < 0.26 ")  
 drc( vtmn   width < 0.74  withCornerTouch 
	"VTMN.W.1  VTM_N width >= 0.74um ")  
 vtmnw2_z = geomGetEdge(gate_w inside vtmn)   
 drc( vtmnw2_z   width < 0.3  
	"VTMN.W.2  1.8V blocked VTMN gate length >= 0.3um ")  
 vtmnw3_z = geomGetEdge(hv_ngate_w inside vtmn)   
 drc( vtmnw3_z   width < 0.6  
	"VTMN.W.3  3.3V blocked VTMN gate length >= 0.6um ")  
 drc( vtmn   sepNotch < 0.44  
	"VTMN.S.1  VTM_N space >= 0.44um ")  
 drc( vtmn nact  enc < 0.26  shielded 
	"VTMN.E.1  VTM_N enclose N-act >= 0.26um ")  
 errorLayer( geomStraddle( nact vtmn  ) 
	"VTMN.E.1 2  VTM_N enclose N-act >= 0.26um ")  
 drc( nact vtmn  sep < 0.7  shielded 
	"VTMN.C.1  VTM_N to N-active space >= 0.7um ")  
 drc( vtmn nwel  sep < 0.43  shielded 
	"VTMN.C.2  VTM_N to Nwell space >= 0.43um ")  
 errorLayer( geomAnd(vtmn nwel) 
	"VTMN.C.2 2  VTM_N to Nwell space >= 0.43um ") 
/*  VTM_P */
/* ====== */
 errorLayer( geomAnd(vtmp dnw) 
	"VTMP.I.1  VTMP inside or cross over a deep N-well is not allowed ") 
/*  VTMP inside or cross over a P-well is checked by VTMP.E.2 */
 errorLayer( geomAnd(vtmp ntn) 
	"VTMP.I.2 2  VTMP inside or cross over a P-well or NT_N is not allowed ") 
 errorLayer( geomAnd(vtmp np) 
	"VTMP.I.3  A N+ region is not allowed to be put in an VTMP region ") 
 vtmpi4_vtmp_po = geomAnd(poly vtmp)  
 errorLayer( geomGetVertex(vtmpi4_vtmp_po ignore == 4) 
	"VTMP.I.4  A bent poly region is not allowed to put in an VTMP region ")  
 vtmpi5_vtmp_od = geomAnd(vtmp od)  
 drc( vtmpi5_vtmp_od poly_iso 0 < sep < 0.26  shielded 
	"VTMP.I.5  OD in VTMP region space to PO on field oxide < 0.26 ")  
 drc( vtmp   width < 0.74  withCornerTouch 
	"VTMP.W.1  VTM_P width >= 0.74um ")  
 vtmpw2_z = geomGetEdge(gate_w inside vtmp)   
 drc( vtmpw2_z   width < 0.25  
	"VTMP.W.2  1.8V blocked VTMP gate length >= 0.25um ")  
 drc( vtmp   sepNotch < 0.44  
	"VTMP.S.1  VTM_P space >= 0.44um ")  
 drc( vtmp pact  enc < 0.26  shielded 
	"VTMP.E.1  VTM_P enclose P-act >= 0.26um ")  
 errorLayer( geomStraddle( pact vtmp  ) 
	"VTMP.E.1 2  VTM_P enclose P-act >= 0.26um ")  
 drc( pact vtmp  sep < 0.7  shielded 
	"VTMP.C.1  VTM_P to P-active space >= 0.7um ")  
 drc( nwel vtmp  enc < 0.43  shielded 
	"VTMP.C.2  Nwell enclose VTM_P >= 0.43um ")  
 errorLayer( geomAndNot(vtmp nwel) 
	"VTMP.C.2 2  Nwell enclose VTM_P >= 0.43um ") 
 vtmpr1_z = geomAnd(all_gate vtmp)  
 errorLayer( geomAnd(od2 vtmpr1_z) 
	"VTMP.R.1  Only 1.8V blocked VTMP device is allowed. ") 
/* HRI   */
/* ===   */
 drc( hri   width < 0.44  withCornerTouch 
	"HRI.W.1  HRI width >= 0.44um. ")  
 drc( hri   sepNotch < 0.44  
	"HRI.S.1  HRI space >= 0.44um ")  
 hric1_x_eg1 = geomSize(drc(hri np sep==0 edgea ) 0.005 )
 hric1_x_po1 = drc( hri np 0 <  sep < 0.26  shielded )   
 hric1_x = geomCat( hric1_x_eg1 hric1_x_po1 )

 errorLayer( geomAndNot(hric1_x geomButtOrOver(hric1_x butt_ptap)) 
	"HRI.C.1  HRI to NP space >= 0.26um ")  
 drc( hri pp  sep < 0.26  shielded 
	"HRI.C.2  HRI to PP space >= 0.26um ")  
/* HRI.C.3 ic checked by HRI.C.4 */
 drc( all_gate hri  sep < 0.32  shielded 
	"HRI.C.4  HRI edge to gate >= 0.32um ")  
 drc( hri pores  enc < 0.26  shielded 
	"HRI.E.1  HRI enclose Po1-resistor >= 0.26um ")  
 errorLayer( geomAnd(hri np) 
	"HRI.R.1  Overlap of a NP and a HRI is not allowed. ") 
 errorLayer( geomAnd(hri od) 
	"HRI.R.2  Overlap of a OD and a HRI is not allowed. ") 
 drc( hri  area < 0.3844 
	"HRI.A.1  Minimum area of HRI < 0.3844 ") 
/*  */
/*    CTM CHECK */
/* ===============  */
 errorLayer( geomCat(ctm2) 
	"CTM.TITLE.1  MiM capacitors should be placed between the top two interconnect metal layers ")  
 errorLayer( geomCat(ctm3) 
	"CTM.TITLE.1 2  MiM capacitors should be placed between the top two interconnect metal layers ")  
 errorLayer( geomCat(ctm4) 
	"CTM.TITLE.1 3  MiM capacitors should be placed between the top two interconnect metal layers ")  
 tctm = geomButtOrOver( ctm5 via5  )  /*  capacitor top plate */ 
 dctm = geomAndNot(ctm5 geomButtOrOver(ctm5 via5))  /*  dummy CTM */ 
 dpm5 = geomButtOrOver( m5 dctm  )  /*  dummy M5 as a capacitor bottom plate */ 
 bpm5a = geomButtOrOver( m5 tctm  )   
 bpm5 = geomAnd(bpm5a ctmdmy)  /*  M5 as a capacitor bottom plate */
 drc( tctm   width < 4  withCornerTouch 
	"CTM.W.1  CTM (as capacitor top plate) width >= 4 um ")  
 drc( dctm   width < 0.4  withCornerTouch 
	"CTM.W.2  Minimum width of a dummy CTM region >= 0.4um ")  
/* CTM.W.3 is checked by CTM.W.2 */
 drc( tctm   sepNotch < 1.2  
	"CTM.S.1  CTM (as capacitor top plate) space < 1.2 um ")  
 drc( dctm tctm  sep < 0.8  shielded 
	"CTM.S.2  Minimum space between a dummy CTM to a CTM regions. ")  
 drc( dctm   sepNotch < 0.8  
	"CTM.S.2 2  Minimum space between a dummy CTM to a CTM regions. ")  
 drc( bpm5 dpm5  sep < 0.8  shielded 
	"CTM.S.3  Minimum space between two Mn+1 of both dummy and real capacitor bottom plate < 0.8um ")  
 drc( bpm5   sepNotch < 0.8  
	"CTM.S.6  Min. space between two Mn+1 as capacitor bottom plate < 0.8 um ")  
 drc( ctm5 via5  enc < 0.24  shielded 
	"CTM.E.1  CTM enclose Via < 0.24 um ")  
 errorLayer( geomStraddle( via5 ctm5  ) 
	"CTM.E.1 2  CTM enclose Via < 0.24 um ")  
 drc( bpm5 via4  enc < 0.12  shielded 
	"CTM.E.2  bottom plate Metal enclose Via < 0.12 um ")  
 drc( bpm5 via5  enc < 0.12  shielded 
	"CTM.E.2 2  bottom plate Metal enclose Via < 0.12 um ")  
 drc( m5 ctm5  enc < 0.4  shielded 
	"CTM.E.3  bottom plate Metal enclose CTM < 0.4 um ")  
 errorLayer( geomGetEdge(ctm5 outside m5) 
	"CTM.E.3  bottom plate Metal enclose CTM < 0.4 um ")  
 drc( via4 ctm5  sep < 0.4  shielded 
	"CTM.C.1  CTM space to Via < 0.4 um ")  
 drc( via5 ctm5  sep < 0.4  shielded 
	"CTM.C.1 2  CTM space to Via < 0.4 um ")  
/* CTM.R.1 is checked by CTM.E.3 */
 ctm5i_den1 = drc( ctm5i  0 < coverage < 0.03  )
 errorLayer( geomGetCoverage( ctm5i_den1 keep < 0.03 ) 
	"CTM.R.2  Min. density of a CTM < 3% ") 
/* CTM.R.3 is no need to be checked */
 ctmv5 = geomAnd(via5 ctm5)  /*  via locate on CTM */
 via5_and1 =  geomAnd(via5 bpm5)  /*  via locate on bottom plate */
 cbmv5 = geomAndNot(via5_and1 ctm5)  /*  via locate on bottom plate */
 drc( ctmv5   sepNotch < 2  
	"CTM.S.4  min space between two vias locate on CTM < 2um ")  
geomConnect(
	buttOrOver(ctmv5 tctm)
)

processAntenna(
	gate((tctm ctmv5))
        antenna( ctmv5 )
        ratio = ctmv5.area/tctm.area 
	drcAntenna( ctmv5 tctm ratio keep < 0.01  
	"CTM.S.4a  min vias density on CTM < 1% ")
)
 drc( cbmv5   sepNotch < 4  
	"CTM.S.5  min space between two vias locate on buttom plate < 4um ")  
 drc( ctmdmy bpm5a  enc < 2  shielded 
	"CTM.R.4  dummy layer enclose bottom plate metal < 2um. ")  
 errorLayer( geomAndNot(tctm ctmdmy) 
	"CTM.R.4 2  dummy layer enclose bottom plate metal < 2um. ") /*  CTMDMY is needed to sepcify MiM capacitor region and separates from metal interconnection region for DRC purpose.	 */
tctm_area1 = drc( tctm area >= 120.04 )
 errorLayer( geomGetLength(tctm_area1 keep >= 30.01 fig ) 
	"CTM.I.1  max width of a CTM region as a capacitor top plate > 30um ") /*  4um is min TCTM width */ 
 errorLayer( geomSize( geomSize( bpm5 -17.5 noClipAcute ) 17.5 noClipAcute ) 
	"CTM.I.2  max width of a capacitor bottom plate > 35um ")  
 errorLayer( geomAnd(via4 ctm5) 
	"CTM.I.3  ViaN under CTM is not allowed. ") 
 poly_or1 =  geomOr(poly rnwel)  
 errorLayer( geomAnd(poly_or1 ctm5) 
	"CTM.I.4  device under CTM is not allowed ") 
 drc( ctm5  area < 0.202 
	"CTM.A.1  Min. area of CTM region 0.202 ") 

)
